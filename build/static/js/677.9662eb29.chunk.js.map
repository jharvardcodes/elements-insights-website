{"version":3,"file":"static/js/677.9662eb29.chunk.js","mappings":"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","sources":["pages/ConsultationPage.tsx","services/formService.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Button,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  TextField,\n  Checkbox,\n  FormGroup,\n  Slider,\n  Rating,\n  Snackbar,\n  Alert,\n  CircularProgress,\n} from '@mui/material';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FaBuilding, FaHome, FaStore, FaWarehouse } from 'react-icons/fa';\nimport { useConsultationForm } from '../services/formService';\n\ninterface FormData {\n  needs: string[];\n  employeeCount: number;\n  projectsPerMonth: number;\n  challenges: string[];\n  timeline: string;\n  currentSoftware: string;\n  socialMedia: {\n    facebook: string;\n    instagram: string;\n    linkedin: string;\n    twitter: string;\n    website: string;\n  };\n  budget: string;\n  availability: string;\n  contactName: string;\n  contactEmail: string;\n  contactPhone: string;\n  additionalInfo: string;\n}\n\nconst initialFormData: FormData = {\n  needs: [],\n  employeeCount: 1,\n  projectsPerMonth: 1,\n  challenges: [],\n  timeline: '',\n  currentSoftware: '',\n  socialMedia: {\n    facebook: '',\n    instagram: '',\n    linkedin: '',\n    twitter: '',\n    website: '',\n  },\n  budget: '',\n  availability: '',\n  contactName: '',\n  contactEmail: '',\n  contactPhone: '',\n  additionalInfo: '',\n};\n\nconst ConsultationPage: React.FC = () => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [formData, setFormData] = useState<FormData>(initialFormData);\n  const { state, handleSubmit } = useConsultationForm();\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success' as 'success' | 'error'\n  });\n\n  const handleNext = () => {\n    setActiveStep((prev) => prev + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prev) => prev - 1);\n  };\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const formDataObj = {\n        ...formData,\n        needs: formData.needs.join(', '),\n        challenges: formData.challenges.join(', '),\n      } as { [key: string]: any };\n\n      await handleSubmit(formDataObj);\n      if (state.succeeded) {\n        setSnackbar({\n          open: true,\n          message: 'Thank you! Your consultation request has been sent successfully.',\n          severity: 'success'\n        });\n        setFormData(initialFormData);\n        setActiveStep(0);\n      }\n    } catch (error) {\n      setSnackbar({\n        open: true,\n        message: 'Sorry, there was an error sending your request. Please try again.',\n        severity: 'error'\n      });\n    }\n  };\n\n  const needsOptions = [\n    { label: 'Abatements', value: 'abatements' },\n    { label: 'Permits & Licensing', value: 'permits-licensing' },\n    { label: 'Office Support', value: 'office-support' },\n  ];\n\n  const challengeOptions = [\n    { label: 'Abatements', value: 'abatements' },\n    { label: 'Permits', value: 'permits' },\n    { label: 'Licensing', value: 'licensing' },\n    { label: 'Employee Turnover', value: 'employee-turnover' },\n    { label: 'Office Support', value: 'office-support' },\n    { label: 'Eviction Filing/Court', value: 'eviction' },\n    { label: 'Task Management', value: 'task-management' },\n  ];\n\n  const timelineOptions = [\n    { label: 'Immediate (within 1 month)', value: 'immediate' },\n    { label: 'Short-term (1-3 months)', value: 'short' },\n    { label: 'Medium-term (3-6 months)', value: 'medium' },\n    { label: 'Long-term (6+ months)', value: 'long' },\n  ];\n\n  const steps = [\n    {\n      label: 'Needs',\n      content: (\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -20 }}\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            What are your needs?\n          </Typography>\n          <FormGroup>\n            {needsOptions.map((option) => (\n              <FormControlLabel\n                key={option.value}\n                control={\n                  <Checkbox\n                    checked={formData.needs.includes(option.value)}\n                    onChange={(e) => {\n                      const newNeeds = e.target.checked\n                        ? [...formData.needs, option.value]\n                        : formData.needs.filter((c) => c !== option.value);\n                      setFormData({ ...formData, needs: newNeeds });\n                    }}\n                  />\n                }\n                label={option.label}\n              />\n            ))}\n          </FormGroup>\n\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n            How many employees do you have?\n          </Typography>\n          <Box sx={{ px: { xs: 3, sm: 5 }, mt: 4, mb: 2 }}>\n            <Slider\n              value={formData.employeeCount}\n              onChange={(_, value) => setFormData({ ...formData, employeeCount: value as number })}\n              min={1}\n              max={20}\n              marks={[\n                { value: 1, label: '1' },\n                { value: 5, label: '5' },\n                { value: 10, label: '10' },\n                { value: 20, label: '20' },\n              ]}\n              sx={{\n                '& .MuiSlider-markLabel': {\n                  fontSize: '1rem',\n                  fontWeight: 500,\n                },\n                '& .MuiSlider-mark': {\n                  backgroundColor: '#fff',\n                  height: 8,\n                  width: 1,\n                  '&.MuiSlider-markActive': {\n                    opacity: 1,\n                    backgroundColor: 'currentColor',\n                  },\n                },\n              }}\n            />\n          </Box>\n\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n            How many projects do you have per month?\n          </Typography>\n          <Box sx={{ px: { xs: 3, sm: 5 }, mt: 4, mb: 2 }}>\n            <Slider\n              value={formData.projectsPerMonth}\n              onChange={(_, value) => setFormData({ ...formData, projectsPerMonth: value as number })}\n              min={1}\n              max={20}\n              marks={[\n                { value: 1, label: '1' },\n                { value: 5, label: '5' },\n                { value: 10, label: '10' },\n                { value: 20, label: '20' },\n              ]}\n              sx={{\n                '& .MuiSlider-markLabel': {\n                  fontSize: '1rem',\n                  fontWeight: 500,\n                },\n                '& .MuiSlider-mark': {\n                  backgroundColor: '#fff',\n                  height: 8,\n                  width: 1,\n                  '&.MuiSlider-markActive': {\n                    opacity: 1,\n                    backgroundColor: 'currentColor',\n                  },\n                },\n              }}\n            />\n          </Box>\n        </motion.div>\n      ),\n    },\n    {\n      label: 'Challenges',\n      content: (\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -20 }}\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            What challenges are you currently facing?\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            Select all that apply\n          </Typography>\n          <FormGroup>\n            {challengeOptions.map((option) => (\n              <FormControlLabel\n                key={option.value}\n                control={\n                  <Checkbox\n                    checked={formData.challenges.includes(option.value)}\n                    onChange={(e) => {\n                      const newChallenges = e.target.checked\n                        ? [...formData.challenges, option.value]\n                        : formData.challenges.filter((c) => c !== option.value);\n                      setFormData({ ...formData, challenges: newChallenges });\n                    }}\n                  />\n                }\n                label={option.label}\n              />\n            ))}\n          </FormGroup>\n\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n            What's your desired timeline for resolving these challenges?\n          </Typography>\n          <RadioGroup\n            value={formData.timeline}\n            onChange={(e) => setFormData({ ...formData, timeline: e.target.value })}\n          >\n            {timelineOptions.map((option) => (\n              <FormControlLabel\n                key={option.value}\n                value={option.value}\n                control={<Radio />}\n                label={option.label}\n              />\n            ))}\n          </RadioGroup>\n        </motion.div>\n      ),\n    },\n    {\n      label: 'Software & Social Media',\n      content: (\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -20 }}\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            What software are you currently using?\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Software\"\n            value={formData.currentSoftware}\n            onChange={(e) => setFormData({ ...formData, currentSoftware: e.target.value })}\n            margin=\"normal\"\n          />\n\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n            What are your social media profiles?\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField\n              fullWidth\n              label=\"Facebook\"\n              InputProps={{\n                startAdornment: (\n                  <Typography color=\"text.secondary\" sx={{ mr: 1 }}>\n                    facebook.com/\n                  </Typography>\n                ),\n              }}\n              value={formData.socialMedia.facebook}\n              onChange={(e) => setFormData({\n                ...formData,\n                socialMedia: { ...formData.socialMedia, facebook: e.target.value }\n              })}\n              placeholder=\"your.page.name\"\n              margin=\"normal\"\n            />\n            <TextField\n              fullWidth\n              label=\"Instagram\"\n              InputProps={{\n                startAdornment: (\n                  <Typography color=\"text.secondary\" sx={{ mr: 1 }}>\n                    instagram.com/\n                  </Typography>\n                ),\n              }}\n              value={formData.socialMedia.instagram}\n              onChange={(e) => setFormData({\n                ...formData,\n                socialMedia: { ...formData.socialMedia, instagram: e.target.value }\n              })}\n              placeholder=\"your.handle\"\n              margin=\"normal\"\n            />\n            <TextField\n              fullWidth\n              label=\"LinkedIn\"\n              InputProps={{\n                startAdornment: (\n                  <Typography color=\"text.secondary\" sx={{ mr: 1 }}>\n                    linkedin.com/company/\n                  </Typography>\n                ),\n              }}\n              value={formData.socialMedia.linkedin}\n              onChange={(e) => setFormData({\n                ...formData,\n                socialMedia: { ...formData.socialMedia, linkedin: e.target.value }\n              })}\n              placeholder=\"your-company-name\"\n              margin=\"normal\"\n            />\n            <TextField\n              fullWidth\n              label=\"Twitter/X\"\n              InputProps={{\n                startAdornment: (\n                  <Typography color=\"text.secondary\" sx={{ mr: 1 }}>\n                    twitter.com/\n                  </Typography>\n                ),\n              }}\n              value={formData.socialMedia.twitter}\n              onChange={(e) => setFormData({\n                ...formData,\n                socialMedia: { ...formData.socialMedia, twitter: e.target.value }\n              })}\n              placeholder=\"your_handle\"\n              margin=\"normal\"\n            />\n            <TextField\n              fullWidth\n              label=\"Website\"\n              InputProps={{\n                startAdornment: (\n                  <Typography color=\"text.secondary\" sx={{ mr: 1 }}>\n                    https://\n                  </Typography>\n                ),\n              }}\n              value={formData.socialMedia.website}\n              onChange={(e) => setFormData({\n                ...formData,\n                socialMedia: { ...formData.socialMedia, website: e.target.value }\n              })}\n              placeholder=\"your-website.com\"\n              margin=\"normal\"\n            />\n          </Box>\n        </motion.div>\n      ),\n    },\n    {\n      label: 'Budget & Availability',\n      content: (\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -20 }}\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            What's your estimated budget for professional services?\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Budget\"\n            value={formData.budget}\n            onChange={(e) => setFormData({ ...formData, budget: e.target.value })}\n            margin=\"normal\"\n          />\n\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\n            What's your availability for a consultation?\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Availability\"\n            value={formData.availability}\n            onChange={(e) => setFormData({ ...formData, availability: e.target.value })}\n            margin=\"normal\"\n          />\n        </motion.div>\n      ),\n    },\n    {\n      label: 'Contact Information',\n      content: (\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -20 }}\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            Please provide your contact information\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            value={formData.contactName}\n            onChange={(e) => setFormData({ ...formData, contactName: e.target.value })}\n            margin=\"normal\"\n            required\n          />\n          <TextField\n            fullWidth\n            label=\"Email\"\n            type=\"email\"\n            value={formData.contactEmail}\n            onChange={(e) => setFormData({ ...formData, contactEmail: e.target.value })}\n            margin=\"normal\"\n            required\n          />\n          <TextField\n            fullWidth\n            label=\"Phone\"\n            value={formData.contactPhone}\n            onChange={(e) => setFormData({ ...formData, contactPhone: e.target.value })}\n            margin=\"normal\"\n            required\n          />\n          <TextField\n            fullWidth\n            label=\"Additional Information\"\n            multiline\n            rows={4}\n            value={formData.additionalInfo}\n            onChange={(e) => setFormData({ ...formData, additionalInfo: e.target.value })}\n            margin=\"normal\"\n          />\n        </motion.div>\n      ),\n    },\n  ];\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Paper component=\"form\" onSubmit={onSubmit} elevation={3} sx={{ p: { xs: 2, md: 4 } }}>\n        <Typography \n          variant=\"h4\" \n          component=\"h1\" \n          gutterBottom \n          align=\"center\"\n          sx={{\n            fontSize: { xs: '1.75rem', sm: '2rem', md: '2.125rem' }\n          }}\n        >\n          Book a Consultation\n        </Typography>\n        <Typography \n          variant=\"body1\" \n          color=\"text.secondary\" \n          paragraph \n          align=\"center\"\n          sx={{ px: { xs: 0, sm: 2 } }}\n        >\n          Let's understand your needs better to provide the most effective solutions for your property management challenges.\n        </Typography>\n\n        <Stepper \n          activeStep={activeStep} \n          sx={{ \n            my: { xs: 2, sm: 3, md: 4 },\n            '& .MuiStepLabel-label': {\n              fontSize: { xs: '0.75rem', sm: '0.875rem' }\n            },\n            '& .MuiSvgIcon-root': {\n              width: { xs: 24, sm: 32 },\n              height: { xs: 24, sm: 32 }\n            }\n          }}\n          alternativeLabel // Better for mobile\n        >\n          {steps.map((step) => (\n            <Step key={step.label}>\n              <StepLabel>{step.label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <Box sx={{ mt: 4, minHeight: '300px', overflowX: 'hidden' }}>\n          <AnimatePresence mode=\"wait\">\n            {steps[activeStep].content}\n          </AnimatePresence>\n        </Box>\n\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3, gap: 2 }}>\n          {activeStep > 0 && (\n            <Button onClick={handleBack} sx={{ mr: 1 }}>\n              Back\n            </Button>\n          )}\n          {activeStep === steps.length - 1 ? (\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={state.submitting}\n              startIcon={state.submitting ? <CircularProgress size={20} /> : undefined}\n            >\n              {state.submitting ? 'Submitting...' : 'Submit'}\n            </Button>\n          ) : (\n            <Button variant=\"contained\" onClick={handleNext}>\n              Next\n            </Button>\n          )}\n        </Box>\n      </Paper>\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n      >\n        <Alert severity={snackbar.severity} onClose={() => setSnackbar({ ...snackbar, open: false })}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default ConsultationPage;\n","import { useForm } from '@formspree/react';\n\n// Replace FORM_ID with your Formspree form ID\nconst CONSULTATION_FORM_ID = 'xyzyljpv';\nconst CONTACT_FORM_ID = 'xeoqvkzb';\nconst CANDLE_ORDER_FORM_ID = 'xkggpoqp'; // Replace with your actual Formspree form ID\n\nexport const useConsultationForm = () => {\n  const [state, handleSubmit] = useForm(CONSULTATION_FORM_ID);\n  return { state, handleSubmit };\n};\n\nexport const useContactForm = () => {\n  const [state, handleSubmit] = useForm(CONTACT_FORM_ID);\n  return { state, handleSubmit };\n};\n\nexport const useCandleOrderForm = () => {\n  const [state, handleSubmit] = useForm(CANDLE_ORDER_FORM_ID);\n  return { state, handleSubmit };\n};\n"],"names":["initialFormData","needs","employeeCount","projectsPerMonth","challenges","timeline","currentSoftware","socialMedia","facebook","instagram","linkedin","twitter","website","budget","availability","contactName","contactEmail","contactPhone","additionalInfo","ConsultationPage","activeStep","setActiveStep","useState","formData","setFormData","state","handleSubmit","useConsultationForm","snackbar","setSnackbar","open","message","severity","steps","label","content","_jsxs","motion","div","initial","opacity","x","animate","exit","children","_jsx","Typography","variant","gutterBottom","FormGroup","value","map","option","FormControlLabel","control","Checkbox","checked","includes","onChange","e","newNeeds","target","filter","c","sx","mt","Box","px","xs","sm","mb","Slider","_","min","max","marks","fontSize","fontWeight","backgroundColor","height","width","color","paragraph","newChallenges","RadioGroup","Radio","TextField","fullWidth","margin","display","flexDirection","gap","InputProps","startAdornment","mr","placeholder","required","type","multiline","rows","Container","maxWidth","py","Paper","component","onSubmit","async","preventDefault","formDataObj","join","succeeded","error","elevation","p","md","align","Stepper","my","alternativeLabel","step","Step","StepLabel","minHeight","overflowX","AnimatePresence","mode","justifyContent","Button","onClick","handleBack","prev","length","disabled","submitting","startIcon","CircularProgress","size","undefined","handleNext","Snackbar","autoHideDuration","onClose","Alert","useForm","useContactForm","useCandleOrderForm"],"sourceRoot":""}