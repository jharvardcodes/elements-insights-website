{"version":3,"file":"static/js/673.24733770.chunk.js","mappings":"qIAEA,SAASA,EAA8BC,GACnC,GAAqB,qBAAVC,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIC,IAO3B,OAAO,IAAIF,OANuB,WAI9B,OAAOD,KAAiBI,UAC5B,GAC4C,CAMxCC,IAAKA,CAACC,EAASC,IACC,WAARA,EACOP,GAINE,EAAeM,IAAID,IACpBL,EAAeO,IAAIF,EAAKP,EAAiBO,IAEtCL,EAAeG,IAAIE,KAGtC,CCnCA,SAASG,EAAoBC,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEC,KACjB,C,kBCJA,MAAMC,EAAqBF,GAChBG,MAAMC,QAAQJ,GCDzB,SAASK,EAAeC,EAAMC,GAC1B,IAAKJ,MAAMC,QAAQG,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKE,OACxB,GAAID,IAAeF,EAAKG,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IAC5B,GAAIH,EAAKG,KAAOJ,EAAKI,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,SAASC,EAAeX,GACpB,MAAoB,kBAANA,GAAkBG,MAAMC,QAAQJ,EAClD,CCLA,SAASY,EAAcC,GACnB,MAAMC,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJkB,OAAlBD,QAA4C,IAAlBA,GAAoCA,EAAcE,OAAOC,SAAQ,CAACC,EAAOrB,KAC/FkB,EAAM,GAAGlB,GAAOqB,EAAMvB,MACtBoB,EAAM,GAAGlB,GAAOqB,EAAMC,aAAa,IAEhCJ,CACX,CACA,SAASK,EAAwBC,EAAOC,EAAYC,EAAQT,GAIxD,GAA0B,oBAAfQ,EAA2B,CAClC,MAAOE,EAASC,GAAYZ,EAAcC,GAC1CQ,EAAaA,OAAsBI,IAAXH,EAAuBA,EAASF,EAAME,OAAQC,EAASC,EACnF,CAaA,GAR0B,kBAAfH,IACPA,EAAaD,EAAMM,UAAYN,EAAMM,SAASL,IAOxB,oBAAfA,EAA2B,CAClC,MAAOE,EAASC,GAAYZ,EAAcC,GAC1CQ,EAAaA,OAAsBI,IAAXH,EAAuBA,EAASF,EAAME,OAAQC,EAASC,EACnF,CACA,OAAOH,CACX,CC/BA,SAASM,EAAed,EAAeQ,EAAYC,GAC/C,MAAMF,EAAQP,EAAce,WAC5B,OAAOT,EAAwBC,EAAOC,OAAuBI,IAAXH,EAAuBA,EAASF,EAAME,OAAQT,EACpG,CCLA,MAAMgB,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCN9BE,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCnBzBG,EAAyBC,GAAsB,IAAVA,EACrCC,EAAyBC,GAAiBA,EAAe,ICLzDC,EAAoB,CACtBC,KAAM,SACNC,UAAW,IACXC,QAAS,GACTC,UAAW,IAQTC,EAAsB,CACxBJ,KAAM,YACNK,SAAU,IAMRC,EAAO,CACTN,KAAM,YACNM,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBD,SAAU,IAERE,EAAuBA,CAACC,EAAQC,KAAoB,IAAlB,UAAEC,GAAWD,EACjD,OAAIC,EAAUxC,OAAS,EACZkC,EAEFX,EAAenC,IAAIkD,GACjBA,EAASG,WAAW,SAxBG,CAClCX,KAAM,SACNC,UAAW,IACXC,QAAoB,IAsBaQ,EAAU,GAtBnB,EAAIE,KAAKC,KAAK,KAAO,GAC7CV,UAAW,IAsBDJ,EAEHO,CAAI,ECpCf,SAASQ,EAAmBC,EAAY1D,GACpC,OAAO0D,EACDA,EAAW1D,IACT0D,EAAoB,SACpBA,OACF7B,CACV,CCNA,MAAM8B,GACc,EADdA,GAEe,ECFfC,GACO,ECDPC,EAAaxC,GAAoB,OAAVA,EAC7B,SAASyC,EAAiBT,EAASD,EAAmCW,GAAe,IAAhD,OAAEC,EAAM,WAAEC,EAAa,QAAQb,EAChE,MAAMc,EAAoBb,EAAUc,OAAON,GACrCO,EAAQJ,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAE,EAAkBrD,OAAS,EACjC,OAAQuD,QAA2BvC,IAAlBkC,EAEXA,EADAG,EAAkBE,EAE5B,C,cCNA,MAAMC,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAGJ,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMxD,EAAQ,CACVyD,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmBA,IAAOL,GAAe,EACzCM,EAAQV,EAAWW,QAAO,CAACC,EAAKjF,KAClCiF,EAAIjF,GCtBZ,SAA0ByE,GAKtB,IAAIS,EAAY,IAAI7C,IAChB8C,EAAY,IAAI9C,IAKhBwC,GAAe,EACfO,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QACxB,IAAIC,EAAkB,CAClBZ,MAAO,EACPC,UAAW,EACXC,cAAc,GAElB,SAASW,EAAgBC,GACjBJ,EAAYpF,IAAIwF,KAChBC,EAAKC,SAASF,GACdhB,KAEJgB,EAASF,EACb,CACA,MAAMG,EAAO,CAITC,SAAU,SAACF,GACP,MACMG,EAFuC/F,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,IACNgF,EACLK,EAAYC,EAK9C,OAP0BtF,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,IAItBwF,EAAYQ,IAAIJ,GACfG,EAAM3F,IAAIwF,IACXG,EAAMC,IAAIJ,GACPA,CACX,EAIAK,OAASL,IACLN,EAAUY,OAAON,GACjBJ,EAAYU,OAAON,EAAS,EAKhCO,QAAUC,IACNV,EAAkBU,EAMdpB,EACAO,GAAiB,GAGrBP,GAAe,GACdK,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUe,QAEVhB,EAAU9D,QAAQoE,GAClBX,GAAe,EACXO,IACAA,GAAiB,EACjBM,EAAKM,QAAQC,IACjB,GAGR,OAAOP,CACX,CDvDmBS,CAAiBrB,GACrBG,IACR,CAAC,IACE,KAAEmB,EAAI,iBAAEC,EAAgB,OAAEC,EAAM,UAAEC,EAAS,OAAEC,EAAM,WAAEC,GAAe1B,EACpE2B,EAAeA,KACjB,MAAM9B,EAAYjB,EACZzC,EAAM0D,UACN+B,YAAYC,MAClBnC,GAAe,EACfvD,EAAMyD,MAAQD,EACR,IAAO,GACPnB,KAAKsD,IAAItD,KAAKuD,IAAIlC,EAAY1D,EAAM0D,UAtB/B,IAsBuD,GAClE1D,EAAM0D,UAAYA,EAClB1D,EAAM2D,cAAe,EAErBuB,EAAKJ,QAAQ9E,GACbmF,EAAiBL,QAAQ9E,GACzBoF,EAAON,QAAQ9E,GACfqF,EAAUP,QAAQ9E,GAClBsF,EAAOR,QAAQ9E,GACfuF,EAAWT,QAAQ9E,GACnBA,EAAM2D,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBmC,GACtB,EASEf,EAAWtB,EAAWW,QAAO,CAACC,EAAKjF,KACrC,MAAM0F,EAAOX,EAAM/E,GAMnB,OALAiF,EAAIjF,GAAO,SAACgG,GAAkD,IAAzCe,EAASlH,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAAUmH,EAASnH,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAG7C,OAFK4E,IATTA,GAAe,EACfC,GAAoB,EACfxD,EAAM2D,cACPN,EAAkBmC,IAQXhB,EAAKC,SAASK,EAASe,EAAWC,EAC7C,EACO/B,CAAG,GACX,CAAC,GAMJ,MAAO,CAAEU,WAAUG,OALHE,IACZ,IAAK,IAAIlF,EAAI,EAAGA,EAAIuD,EAAWxD,OAAQC,IACnCiE,EAAMV,EAAWvD,IAAIgF,OAAOE,EAChC,EAEuB9E,QAAO6D,QACtC,CEpEA,MAAQY,SAAUsB,EAAOnB,OAAQoB,EAAahG,MAAO+E,EAAWlB,MAAOoC,GAAgB7C,EAAqD,qBAA1B8C,sBAAwCA,sBAAwBC,EAAAA,GAAM,GCiBlLC,EAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOT,EAAAA,EACX,MAAMU,EAAYC,GArBtB,SAAyBC,EAAGC,EAAYC,EAAYR,EAAKE,GACrD,IAAIO,EACAC,EACAvH,EAAI,EACR,GACIuH,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWd,EAAWe,EAAUV,EAAKE,GAAOI,EACxCG,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ9E,KAAK+E,IAAIF,GAfO,QAgBnBtH,EAfuB,IAgB7B,OAAOuH,CACX,CAK6BE,CAAgBP,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,EAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMU,EAAgBC,GAAYC,GAAMA,GAAK,GAAMD,EAAO,EAAIC,GAAK,GAAK,EAAID,EAAO,GAAK,EAAIC,KAAO,ECA7FC,EAAiBF,GAAYC,GAAM,EAAID,EAAO,EAAIC,GCElDE,EAAwBlB,EAAY,IAAM,KAAM,IAAM,KACtDmB,EAAuBF,EAAcC,GACrCE,EAA0BN,EAAaK,GCJvCE,EAAcL,IAAOA,GAAK,GAAK,EAAI,GAAMG,EAAOH,GAAK,IAAO,EAAInF,KAAKyF,IAAI,GAAI,IAAMN,EAAI,KCCvFO,EAAUP,GAAM,EAAInF,KAAK2F,IAAI3F,KAAK4F,KAAKT,IACvCU,EAAUT,EAAcM,GACxBI,EAAYb,EAAaS,GCFzBK,EAAqBlJ,GAAM,cAAcmJ,KAAKnJ,G,cCApD,MAAMoJ,EAAqBpJ,GAAM,+BAA+BmJ,KAAKnJ,GCH/DqJ,EAAyBC,GAAW1J,GAAuB,kBAARA,GAAoBA,EAAIsD,WAAWoG,GACtFC,EACQF,EAAsB,MAC9BG,EACQH,EAAsB,UAC9BI,EAAsBxI,KACAuI,EAAsBvI,IAIvCyI,EAAuBP,KAAKlI,EAAM0I,MAAM,MAAM,GAAGC,QAEtDF,EAAyB,sFCCzBG,EAEN,2DASA,SAASC,GAAiBvI,EAASwI,GAAoB,IAAXC,EAAKvK,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAChDwK,EAAAA,EAAAA,GAAUD,GAFG,EAEgB,yDAAyDzI,yDACtF,MAAO+H,EAAOY,GAVlB,SAA0B3I,GACtB,MAAM4I,EAAQN,EAAsBO,KAAK7I,GACzC,IAAK4I,EACD,MAAO,CAAC,GACZ,MAAO,CAAEE,EAAQC,EAAQJ,GAAYC,EACrC,MAAO,CAAC,KAAgB,OAAXE,QAA8B,IAAXA,EAAoBA,EAASC,IAAUJ,EAC3E,CAI8BK,CAAiBhJ,GAE3C,IAAK+H,EACD,OAEJ,MAAMkB,EAAWC,OAAOC,iBAAiBX,GAASY,iBAAiBrB,GACnE,GAAIkB,EAAU,CACV,MAAMI,EAAUJ,EAASZ,OACzB,OAAOR,EAAkBwB,GAAWC,WAAWD,GAAWA,CAC9D,CACA,OAAOnB,EAAmBS,GACpBJ,GAAiBI,EAAUH,EAASC,EAAQ,GAC5CE,CACV,CCvCA,MAAMY,GAAQA,CAACpE,EAAKD,EAAKzG,IACjBA,EAAIyG,EACGA,EACPzG,EAAI0G,EACGA,EACJ1G,ECHL+K,GAAS,CACX5B,KAAOnJ,GAAmB,kBAANA,EACpBgL,MAAOH,WACPI,UAAYjL,GAAMA,GAEhBkL,GAAQ,IACPH,GACHE,UAAYjL,GAAM8K,GAAM,EAAG,EAAG9K,IAE5BmL,GAAQ,IACPJ,GACHK,QAAS,GCbPC,GAAkBC,IAAI,CACxBnC,KAAOnJ,GAAmB,kBAANA,GAAkBA,EAAEuL,SAASD,IAAiC,IAAxBtL,EAAE2J,MAAM,KAAKlJ,OACvEuK,MAAOH,WACPI,UAAYjL,GAAM,GAAGA,IAAIsL,MAEvBE,GAAwBH,GAAe,OACvCI,GAAwBJ,GAAe,KACvCK,GAAmBL,GAAe,MAClCM,GAAmBN,GAAe,MAClCO,GAAmBP,GAAe,MAClCQ,GAAqB,IACpBJ,GACHT,MAAQhL,GAAMyL,GAAQT,MAAMhL,GAAK,IACjCiL,UAAYjL,GAAMyL,GAAQR,UAAc,IAAJjL,ICTlC8L,GAAiB,IAAI7J,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEE8J,GAAiB/L,GAAMA,IAAM+K,IAAU/K,IAAM0L,GAC7CM,GAAmBA,CAACC,EAAQC,IAAQrB,WAAWoB,EAAOtC,MAAM,MAAMuC,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAKtJ,KAAoB,IAAlB,UAAEiI,GAAWjI,EAChE,GAAkB,SAAdiI,IAAyBA,EACzB,OAAO,EACX,MAAMsB,EAAWtB,EAAUd,MAAM,uBACjC,GAAIoC,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAShB,EAAUd,MAAM,qBAC/B,OAAI8B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIvK,IAAI,CAAC,IAAK,IAAK,MACnCwK,GAAgC1K,EAAmBgC,QAAQnE,IAAS4M,GAAc3M,IAAID,KAY5F,MAAM8M,GAAmB,CAErBC,MAAOA,CAAAC,EAAAC,KAAA,IAAC,EAAEhF,GAAG+E,GAAE,YAAEE,EAAc,IAAG,aAAEC,EAAe,KAAKF,EAAA,OAAKhF,EAAEpB,IAAMoB,EAAEnB,IAAMmE,WAAWiC,GAAejC,WAAWkC,EAAa,EAC/HC,OAAQA,CAAAC,EAAAC,KAAA,IAAC,EAAEC,GAAGF,GAAE,WAAEG,EAAa,IAAG,cAAEC,EAAgB,KAAKH,EAAA,OAAKC,EAAE1G,IAAM0G,EAAEzG,IAAMmE,WAAWuC,GAAcvC,WAAWwC,EAAc,EAChIC,IAAKA,CAAChB,EAAKiB,KAAA,IAAE,IAAED,GAAKC,EAAA,OAAK1C,WAAWyC,EAAI,EACxCE,KAAMA,CAAClB,EAAKmB,KAAA,IAAE,KAAED,GAAMC,EAAA,OAAK5C,WAAW2C,EAAK,EAC3CE,OAAQA,CAAAC,EAAAC,KAAA,IAAC,EAAET,GAAGQ,GAAE,IAAEL,GAAKM,EAAA,OAAK/C,WAAWyC,IAAQH,EAAE1G,IAAM0G,EAAEzG,IAAI,EAC7DmH,MAAOA,CAAAC,EAAAC,KAAA,IAAC,EAAElG,GAAGiG,GAAE,KAAEN,GAAMO,EAAA,OAAKlD,WAAW2C,IAAS3F,EAAEpB,IAAMoB,EAAEnB,IAAI,EAE9DmB,EAAGsE,GAAuB,EAAG,IAC7BgB,EAAGhB,GAAuB,EAAG,KAGjCO,GAAiBsB,WAAatB,GAAiB7E,EAC/C6E,GAAiBuB,WAAavB,GAAiBS,EC3D/C,MAAMe,GAAiBlO,GAAOuC,GAASA,EAAK4G,KAAKnJ,GCK3CmO,GAAsB,CAACpD,GAAQW,GAAID,GAASD,GAASI,GAAID,GCLlD,CACTxC,KAAOnJ,GAAY,SAANA,EACbgL,MAAQhL,GAAMA,IDOZoO,GAA0BpO,GAAMmO,GAAoBE,KAAKH,GAAclO,IETvEsO,GAAY,IAAIrM,IACtB,IAAIsM,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACrB,MAAME,EAAqBvO,MAAMwO,KAAKL,IAAWvK,QAAQ6K,GAAaA,EAASC,mBACzEC,EAAoB,IAAI7M,IAAIyM,EAAmBK,KAAKH,GAAaA,EAAS7E,WAC1EiF,EAAsB,IAAIxP,IAKhCsP,EAAkB9N,SAAS+I,IACvB,MAAMkF,EJqBlB,SAAyCpO,GACrC,MAAMoO,EAAoB,GAQ1B,OAPAxC,GAA8BzL,SAASpB,IACnC,MAAMqB,EAAQJ,EAAcqO,SAAStP,QACvB6B,IAAVR,IACAgO,EAAkBE,KAAK,CAACvP,EAAKqB,EAAMvB,QACnCuB,EAAMnB,IAAIF,EAAIsD,WAAW,SAAW,EAAI,GAC5C,IAEG+L,CACX,CI/BsCG,CAAgCrF,GACrDkF,EAAkBxO,SAEvBuO,EAAoBlP,IAAIiK,EAASkF,GACjClF,EAAQ3D,SAAQ,IAGpBsI,EAAmB1N,SAAS4N,GAAaA,EAASS,wBAElDP,EAAkB9N,SAAS+I,IACvBA,EAAQ3D,SACR,MAAMkJ,EAAUN,EAAoBtP,IAAIqK,GACpCuF,GACAA,EAAQtO,SAAQgC,IAAkB,IAAhBpD,EAAKqB,GAAM+B,EACzB,IAAIuM,EAC6B,QAAhCA,EAAKxF,EAAQmF,SAAStP,UAAyB,IAAP2P,GAAyBA,EAAGzP,IAAImB,EAAM,GAEvF,IAGJyN,EAAmB1N,SAAS4N,GAAaA,EAASY,oBAElDd,EAAmB1N,SAAS4N,SACUnN,IAA9BmN,EAASa,kBACThF,OAAOiF,SAAS,EAAGd,EAASa,iBAChC,GAER,CACAjB,IAAsB,EACtBD,IAAc,EACdD,GAAUtN,SAAS4N,GAAaA,EAASe,aACzCrB,GAAUxI,OACd,CACA,SAAS8J,KACLtB,GAAUtN,SAAS4N,IACfA,EAASiB,gBACLjB,EAASC,mBACTL,IAAsB,EAC1B,GAER,CAKA,MAAMsB,GACFC,WAAAA,CAAYC,EAAqBC,EAAYC,EAAMC,EAAapG,GAA0B,IAAjBqG,EAAO3Q,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAK5E4Q,KAAKC,YAAa,EAMlBD,KAAKD,SAAU,EAKfC,KAAKxB,kBAAmB,EAKxBwB,KAAK9B,aAAc,EACnB8B,KAAKL,oBAAsB,IAAIA,GAC/BK,KAAKJ,WAAaA,EAClBI,KAAKH,KAAOA,EACZG,KAAKF,YAAcA,EACnBE,KAAKtG,QAAUA,EACfsG,KAAKD,QAAUA,CACnB,CACAG,eAAAA,GACIF,KAAK9B,aAAc,EACf8B,KAAKD,SACL9B,GAAU7I,IAAI4K,MACT9B,KACDA,IAAc,EACd1H,EAAMb,KAAK4J,IACX/I,EAAMZ,iBAAiBwI,OAI3B4B,KAAKR,gBACLQ,KAAKV,WAEb,CACAE,aAAAA,GACI,MAAM,oBAAEG,EAAmB,KAAEE,EAAI,QAAEnG,EAAO,YAAEoG,GAAgBE,KAK5D,IAAK,IAAI3P,EAAI,EAAGA,EAAIsP,EAAoBvP,OAAQC,IAC5C,GAA+B,OAA3BsP,EAAoBtP,GAIpB,GAAU,IAANA,EAAS,CACT,MAAM8P,EAA+B,OAAhBL,QAAwC,IAAhBA,OAAyB,EAASA,EAAYzQ,MACrFiE,EAAgBqM,EAAoBA,EAAoBvP,OAAS,GACvE,QAAqBgB,IAAjB+O,EACAR,EAAoB,GAAKQ,OAExB,GAAIzG,GAAWmG,EAAM,CACtB,MAAMO,EAAc1G,EAAQ2G,UAAUR,EAAMvM,QACxBlC,IAAhBgP,GAA6C,OAAhBA,IAC7BT,EAAoB,GAAKS,EAEjC,MAC+BhP,IAA3BuO,EAAoB,KACpBA,EAAoB,GAAKrM,GAEzBwM,QAAgC1O,IAAjB+O,GACfL,EAAYrQ,IAAIkQ,EAAoB,GAE5C,MAEIA,EAAoBtP,GAAKsP,EAAoBtP,EAAI,EAIjE,CACAiQ,gBAAAA,GAAqB,CACrBtB,mBAAAA,GAAwB,CACxBuB,eAAAA,GAAoB,CACpBpB,eAAAA,GAAoB,CACpBG,QAAAA,GACIU,KAAKC,YAAa,EAClBD,KAAKJ,WAAWI,KAAKL,oBAAqBK,KAAK1M,eAC/C2K,GAAU3I,OAAO0K,KACrB,CACA3K,MAAAA,GACS2K,KAAKC,aACND,KAAK9B,aAAc,EACnBD,GAAU3I,OAAO0K,MAEzB,CACAQ,MAAAA,GACSR,KAAKC,YACND,KAAKE,iBACb,EC9JJ,MAAMO,GAAY9Q,GAAMmD,KAAK4N,MAAU,IAAJ/Q,GAAc,ICF3CgR,GAAa,8BCAnB,MAAMC,GAAmB,sHCQnBC,GAAgBA,CAAC3O,EAAM4O,IAAcnR,GAChCoR,QAAsB,kBAANpR,GACnBiR,GAAiB9H,KAAKnJ,IACtBA,EAAEkD,WAAWX,IACZ4O,ICZT,SAAmBnR,GACf,OAAY,MAALA,CACX,CDWaqR,CAAUrR,IACXsR,OAAOC,UAAUC,eAAeC,KAAKzR,EAAGmR,IAE9CO,GAAaA,CAACC,EAAOC,EAAOC,IAAW7R,IACzC,GAAiB,kBAANA,EACP,OAAOA,EACX,MAAO8R,EAAGC,EAAGC,EAAG9G,GAASlL,EAAEmK,MAAM6G,IACjC,MAAO,CACH,CAACW,GAAQ9G,WAAWiH,GACpB,CAACF,GAAQ/G,WAAWkH,GACpB,CAACF,GAAQhH,WAAWmH,GACpB9G,WAAiBzJ,IAAVyJ,EAAsBL,WAAWK,GAAS,EACpD,EEnBC+G,GAAU,IACTlH,GACHE,UAAYjL,GAAMmD,KAAK4N,MAHL/Q,IAAM8K,GAAM,EAAG,IAAK9K,GAGTkS,CAAalS,KAExCmS,GAAO,CACThJ,KAAoB+H,GAAc,MAAO,OACzClG,MAAqB0G,GAAW,MAAO,QAAS,QAChDzG,UAAWjI,IAAA,IAAC,IAAEoP,EAAG,MAAEC,EAAK,KAAEC,EAAMpH,MAAOqH,EAAU,GAAGvP,EAAA,MAAK,QACrDiP,GAAQhH,UAAUmH,GAClB,KACAH,GAAQhH,UAAUoH,GAClB,KACAJ,GAAQhH,UAAUqH,GAClB,KACAxB,GAAS5F,GAAMD,UAAUsH,IACzB,GAAG,GCYX,MAAMC,GAAM,CACRrJ,KAAoB+H,GAAc,KAClClG,MAhCJ,SAAkBhL,GACd,IAAIyS,EAAI,GACJC,EAAI,GACJX,EAAI,GACJD,EAAI,GAmBR,OAjBI9R,EAAES,OAAS,GACXgS,EAAIzS,EAAE2S,UAAU,EAAG,GACnBD,EAAI1S,EAAE2S,UAAU,EAAG,GACnBZ,EAAI/R,EAAE2S,UAAU,EAAG,GACnBb,EAAI9R,EAAE2S,UAAU,EAAG,KAInBF,EAAIzS,EAAE2S,UAAU,EAAG,GACnBD,EAAI1S,EAAE2S,UAAU,EAAG,GACnBZ,EAAI/R,EAAE2S,UAAU,EAAG,GACnBb,EAAI9R,EAAE2S,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACLX,GAAKA,EACLD,GAAKA,GAEF,CACHM,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAASb,EAAG,IAClB7G,MAAO4G,EAAIc,SAASd,EAAG,IAAM,IAAM,EAE3C,EAII7G,UAAWkH,GAAKlH,WC/Bd4H,GAAO,CACT1J,KAAoB+H,GAAc,MAAO,OACzClG,MAAqB0G,GAAW,MAAO,aAAc,aACrDzG,UAAWjI,IAAwD,IAAvD,IAAE8P,EAAG,WAAEC,EAAU,UAAEC,EAAW9H,MAAOqH,EAAU,GAAGvP,EAC1D,MAAQ,QACJG,KAAK4N,MAAM+B,GACX,KACArH,GAAQR,UAAU6F,GAASiC,IAC3B,KACAtH,GAAQR,UAAU6F,GAASkC,IAC3B,KACAlC,GAAS5F,GAAMD,UAAUsH,IACzB,GAAG,GCbTU,GAAQ,CACV9J,KAAOnJ,GAAMmS,GAAKhJ,KAAKnJ,IAAMwS,GAAIrJ,KAAKnJ,IAAM6S,GAAK1J,KAAKnJ,GACtDgL,MAAQhL,GACAmS,GAAKhJ,KAAKnJ,GACHmS,GAAKnH,MAAMhL,GAEb6S,GAAK1J,KAAKnJ,GACR6S,GAAK7H,MAAMhL,GAGXwS,GAAIxH,MAAMhL,GAGzBiL,UAAYjL,GACY,kBAANA,EACRA,EACAA,EAAEwR,eAAe,OACbW,GAAKlH,UAAUjL,GACf6S,GAAK5H,UAAUjL,ICtB3BkT,GAAa,qHCanB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,kOACrB,SAASC,GAAoBrS,GACzB,MAAMsS,EAAgBtS,EAAMuS,WACtBzS,EAAS,GACT0S,EAAU,CACZR,MAAO,GACPlI,OAAQ,GACR2I,IAAK,IAEHC,EAAQ,GACd,IAAIjT,EAAI,EACR,MAmBMiJ,EAnBY4J,EAAcK,QAAQP,IAAeQ,IAC/CZ,GAAM9J,KAAK0K,IACXJ,EAAQR,MAAM9D,KAAKzO,GACnBiT,EAAMxE,KAAKiE,IACXrS,EAAOoO,KAAK8D,GAAMjI,MAAM6I,KAEnBA,EAAY3Q,WApBF,SAqBfuQ,EAAQC,IAAIvE,KAAKzO,GACjBiT,EAAMxE,KAvBA,OAwBNpO,EAAOoO,KAAK0E,KAGZJ,EAAQ1I,OAAOoE,KAAKzO,GACpBiT,EAAMxE,KAAKgE,IACXpS,EAAOoO,KAAKtE,WAAWgJ,OAEzBnT,EA7BU,SAgCQiJ,MAhCR,OAiChB,MAAO,CAAE5I,SAAQ4I,QAAO8J,UAASE,QACrC,CACA,SAASG,GAAkB9T,GACvB,OAAOsT,GAAoBtT,GAAGe,MAClC,CACA,SAASgT,GAAkBC,GACvB,MAAM,MAAErK,EAAK,MAAEgK,GAAUL,GAAoBU,GACvCC,EAActK,EAAMlJ,OAC1B,OAAQT,IACJ,IAAIkU,EAAS,GACb,IAAK,IAAIxT,EAAI,EAAGA,EAAIuT,EAAavT,IAE7B,GADAwT,GAAUvK,EAAMjJ,QACHe,IAATzB,EAAEU,GAAkB,CACpB,MAAM6B,EAAOoR,EAAMjT,GAEfwT,GADA3R,IAAS4Q,GACCrC,GAAS9Q,EAAEU,IAEhB6B,IAAS6Q,GACJH,GAAMhI,UAAUjL,EAAEU,IAGlBV,EAAEU,EAEpB,CAEJ,OAAOwT,CAAM,CAErB,CACA,MAAMC,GAAwBnU,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAMoU,GAAU,CACZjL,KAhFJ,SAAcnJ,GACV,IAAIuP,EAAI8E,EACR,OAAQC,MAAMtU,IACG,kBAANA,KAC0B,QAA9BuP,EAAKvP,EAAEmK,MAAM6G,WAAgC,IAAPzB,OAAgB,EAASA,EAAG9O,SAAW,KAC3C,QAA9B4T,EAAKrU,EAAEmK,MAAM+I,WAAgC,IAAPmB,OAAgB,EAASA,EAAG5T,SAAW,GAChF,CACZ,EA0EIuK,MAAO8I,GACPC,qBACAQ,kBATJ,SAA2BvU,GACvB,MAAMwU,EAASV,GAAkB9T,GAEjC,OADoB+T,GAAkB/T,EAC/ByU,CAAYD,EAAOzF,IAAIoF,IAClC,GC7EMO,GAAc,IAAIzS,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS0S,GAAmB3U,GACxB,MAAOkQ,EAAMjP,GAASjB,EAAE4U,MAAM,GAAI,GAAGjL,MAAM,KAC3C,GAAa,gBAATuG,EACA,OAAOlQ,EACX,MAAO+K,GAAU9J,EAAMkJ,MAAM6G,KAAe,GAC5C,IAAKjG,EACD,OAAO/K,EACX,MAAMsL,EAAOrK,EAAM2S,QAAQ7I,EAAQ,IACnC,IAAI8J,EAAeH,GAAY7U,IAAIqQ,GAAQ,EAAI,EAG/C,OAFInF,IAAW9J,IACX4T,GAAgB,KACb3E,EAAO,IAAM2E,EAAevJ,EAAO,GAC9C,CACA,MAAMwJ,GAAgB,uBAChB/Q,GAAS,IACRqQ,GACHG,kBAAoBvU,IAChB,MAAM+U,EAAY/U,EAAEmK,MAAM2K,IAC1B,OAAOC,EAAYA,EAAUhG,IAAI4F,IAAoBK,KAAK,KAAOhV,CAAC,GCvBpEiV,GAA0B,CAE5BC,YAAaxJ,GACbyJ,eAAgBzJ,GAChB0J,iBAAkB1J,GAClB2J,kBAAmB3J,GACnB4J,gBAAiB5J,GACjB6J,aAAc7J,GACd8J,OAAQ9J,GACR+J,oBAAqB/J,GACrBgK,qBAAsBhK,GACtBiK,wBAAyBjK,GACzBkK,uBAAwBlK,GAExBiB,MAAOjB,GACPmK,SAAUnK,GACVsB,OAAQtB,GACRoK,UAAWpK,GACX4B,IAAK5B,GACLmC,MAAOnC,GACPgC,OAAQhC,GACR8B,KAAM9B,GAENqK,QAASrK,GACT0B,WAAY1B,GACZqB,aAAcrB,GACd2B,cAAe3B,GACfoB,YAAapB,GACbsK,OAAQtK,GACRuK,UAAWvK,GACXwK,YAAaxK,GACbyK,aAAczK,GACd0K,WAAY1K,GAEZ2K,oBAAqB3K,GACrB4K,oBAAqB5K,IClCnB6K,GAAsB,CACxBC,OAAQhL,GACRiL,QAASjL,GACTkL,QAASlL,GACTmL,QAASnL,GACTL,MAAK,GACLyL,OAAQzL,GACR0L,OAAQ1L,GACR2L,OAAQ3L,GACR4L,KAAMvL,GACNwL,MAAOxL,GACPyL,MAAOzL,GACP0L,SAAUxL,GACVsC,WAAYtC,GACZuC,WAAYvC,GACZyL,WAAYzL,GACZ7D,EAAG6D,GACHyB,EAAGzB,GACH0L,EAAG1L,GACH2L,YAAa3L,GACb4L,qBAAsB5L,GACtB6L,QAASrM,GACTsM,QAAS3L,GACT4L,QAAS5L,GACT6L,QAAShM,ICzBPiM,GAAM,IACL5M,GACHE,UAAW9H,KAAK4N,OCEd6G,GAAmB,IAClB3C,MACAsB,GACHsB,OAAQF,GACRG,KAAMpM,GAENqM,YAAa7M,GACb8M,cAAe9M,GACf+M,WAAYN,ICPVO,GAAoB,IACnBN,GAEH3E,MAAK,GACLkF,gBAAiBlF,GACjBmF,aAAcnF,GACdoF,KAAMpF,GACNqF,OAAQrF,GAERsF,YAAatF,GACbuF,eAAgBvF,GAChBwF,iBAAkBxF,GAClByF,kBAAmBzF,GACnB0F,gBAAiB1F,GACjBlP,OAAM,GACN6U,aAAc7U,IAKZ8U,GAAuBjZ,GAAQsY,GAAkBtY,GCvBvD,SAAS2U,GAAkB3U,EAAKqB,GAC5B,IAAI6X,EAAmBD,GAAoBjZ,GAI3C,OAHIkZ,IAAqB/U,KACrB+U,EAAmB1E,IAEhB0E,EAAiBvE,kBAClBuE,EAAiBvE,kBAAkBtT,QACnCQ,CACV,CCHA,MAAMsX,GAAmB,IAAI9W,IAAI,CAAC,OAAQ,OAAQ,MCDlD,MAAM+W,WAA6BlJ,GAC/BC,WAAAA,CAAYC,EAAqBC,EAAYC,EAAMC,EAAapG,GAC5DkP,MAAMjJ,EAAqBC,EAAYC,EAAMC,EAAapG,GAAS,EACvE,CACA8F,aAAAA,GACI,MAAM,oBAAEG,EAAmB,QAAEjG,EAAO,KAAEmG,GAASG,KAC/C,IAAKtG,IAAYA,EAAQxI,QACrB,OACJ0X,MAAMpJ,gBAIN,IAAK,IAAInP,EAAI,EAAGA,EAAIsP,EAAoBvP,OAAQC,IAAK,CACjD,IAAIwY,EAAWlJ,EAAoBtP,GACnC,GAAwB,kBAAbwY,IACPA,EAAWA,EAAStP,OAChBH,EAAmByP,IAAW,CAC9B,MAAM1O,EAAWV,GAAiBoP,EAAUnP,EAAQxI,cACnCE,IAAb+I,IACAwF,EAAoBtP,GAAK8J,GAEzB9J,IAAMsP,EAAoBvP,OAAS,IACnC4P,KAAK1M,cAAgBuV,EAE7B,CAER,CAaA,GAPA7I,KAAK8I,wBAOArN,GAAejM,IAAIqQ,IAAwC,IAA/BF,EAAoBvP,OACjD,OAEJ,MAAO2Y,EAAQC,GAAUrJ,EACnBsJ,EAAalL,GAAuBgL,GACpCG,EAAanL,GAAuBiL,GAI1C,GAAIC,IAAeC,EAMnB,GAAIxN,GAAcuN,IAAevN,GAAcwN,GAC3C,IAAK,IAAI7Y,EAAI,EAAGA,EAAIsP,EAAoBvP,OAAQC,IAAK,CACjD,MAAMO,EAAQ+O,EAAoBtP,GACb,kBAAVO,IACP+O,EAAoBtP,GAAKmK,WAAW5J,GAE5C,MAMAoP,KAAKxB,kBAAmB,CAEhC,CACAsK,oBAAAA,GACI,MAAM,oBAAEnJ,EAAmB,KAAEE,GAASG,KAChCmJ,EAAsB,GAC5B,IAAK,IAAI9Y,EAAI,EAAGA,EAAIsP,EAAoBvP,OAAQC,KC7E/B,kBADTO,ED+EO+O,EAAoBtP,IC7ElB,IAAVO,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiBiI,EAAkBjI,KD2EtDuY,EAAoBrK,KAAKzO,GChFzC,IAAgBO,EDmFJuY,EAAoB/Y,QD3EhC,SAAqCuP,EAAqBwJ,EAAqBtJ,GAC3E,IACIuJ,EADA/Y,EAAI,EAER,KAAOA,EAAIsP,EAAoBvP,SAAWgZ,GAAoB,CAC1D,MAAMP,EAAWlJ,EAAoBtP,GACb,kBAAbwY,IACNH,GAAiBlZ,IAAIqZ,IACtB5F,GAAoB4F,GAAUnY,OAAON,SACrCgZ,EAAqBzJ,EAAoBtP,IAE7CA,GACJ,CACA,GAAI+Y,GAAsBvJ,EACtB,IAAK,MAAMwJ,KAAaF,EACpBxJ,EAAoB0J,GAAanF,GAAkBrE,EAAMuJ,EAGrE,CC2DYE,CAA4B3J,EAAqBwJ,EAAqBtJ,EAE9E,CACAb,mBAAAA,GACI,MAAM,QAAEtF,EAAO,oBAAEiG,EAAmB,KAAEE,GAASG,KAC/C,IAAKtG,IAAYA,EAAQxI,QACrB,OACS,WAAT2O,IACAG,KAAKZ,iBAAmBhF,OAAOmP,aAEnCvJ,KAAKwJ,eAAiBnN,GAAiBwD,GAAMnG,EAAQ+P,qBAAsBrP,OAAOC,iBAAiBX,EAAQxI,UAC3GyO,EAAoB,GAAKK,KAAKwJ,eAE9B,MAAME,EAAkB/J,EAAoBA,EAAoBvP,OAAS,QACjDgB,IAApBsY,GACAhQ,EAAQmF,SAASgB,EAAM6J,GAAiBC,KAAKD,GAAiB,EAEtE,CACAvK,eAAAA,GACI,IAAID,EACJ,MAAM,QAAExF,EAAO,KAAEmG,EAAI,oBAAEF,GAAwBK,KAC/C,IAAKtG,IAAYA,EAAQxI,QACrB,OACJ,MAAMN,EAAQ8I,EAAQmF,SAASgB,GAC/BjP,GAASA,EAAM+Y,KAAK3J,KAAKwJ,gBAAgB,GACzC,MAAMI,EAAqBjK,EAAoBvP,OAAS,EAClDkD,EAAgBqM,EAAoBiK,GAC1CjK,EAAoBiK,GAAsBvN,GAAiBwD,GAAMnG,EAAQ+P,qBAAsBrP,OAAOC,iBAAiBX,EAAQxI,UACzG,OAAlBoC,QAAiDlC,IAAvB4O,KAAK1M,gBAC/B0M,KAAK1M,cAAgBA,IAGa,QAAjC4L,EAAKc,KAAKpB,yBAAsC,IAAPM,OAAgB,EAASA,EAAG9O,SACtE4P,KAAKpB,kBAAkBjO,SAAQgC,IAA+C,IAA7CkX,EAAoBC,GAAoBnX,EACrE+G,EACKmF,SAASgL,GACTpa,IAAIqa,EAAoB,IAGrC9J,KAAK8I,sBACT,EE9HJ,SAASiB,GAAY7X,GACjB,MAAuB,oBAATA,CAClB,CCCA,IAAIiE,GACJ,SAAS6T,KACL7T,QAAM/E,CACV,CASA,MAAM6Y,GAAO,CACT9T,IAAKA,UACW/E,IAAR+E,IACA8T,GAAKxa,IAAI+F,EAAUpB,cAAgBlB,EAC7BsC,EAAUrB,UACV+B,YAAYC,OAEfA,IAEX1G,IAAMya,IACF/T,GAAM+T,EACNC,eAAeH,GAAU,GCf3BI,GAAeA,CAACxZ,EAAOiP,IAEZ,WAATA,MAKiB,kBAAVjP,IAAsBd,MAAMC,QAAQa,OAE1B,kBAAVA,IACNmT,GAAQjL,KAAKlI,IAAoB,MAAVA,GACvBA,EAAMiC,WAAW,UCT1B,SAASwX,GAAWzX,EAAWiN,EAAM3N,EAAMf,GAMvC,MAAMmZ,EAAiB1X,EAAU,GACjC,GAAuB,OAAnB0X,EACA,OAAO,EAMX,GAAa,YAATzK,GAA+B,eAATA,EACtB,OAAO,EACX,MAAM0K,EAAiB3X,EAAUA,EAAUxC,OAAS,GAC9Coa,EAAqBJ,GAAaE,EAAgBzK,GAClD4K,EAAqBL,GAAaG,EAAgB1K,GAGxD,OAFA6K,EAAAA,EAAAA,GAAQF,IAAuBC,EAAoB,6BAA6B5K,WAAcyK,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,oCAE3PC,IAAuBC,KA9BhC,SAA6B7X,GACzB,MAAM1B,EAAU0B,EAAU,GAC1B,GAAyB,IAArBA,EAAUxC,OACV,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIuC,EAAUxC,OAAQC,IAClC,GAAIuC,EAAUvC,KAAOa,EACjB,OAAO,CAEnB,CAyBYyZ,CAAoB/X,KACb,WAATV,GAAqB6X,GAAY7X,KAAUf,EACrD,CCxBA,MAAMyZ,GACFlL,WAAAA,CAAW/M,GAAmH,IAAlH,SAAEkY,GAAW,EAAI,MAAEC,EAAQ,EAAC,KAAE5Y,EAAO,YAAW,OAAEqB,EAAS,EAAC,YAAEwX,EAAc,EAAC,WAAEvX,EAAa,UAAWwX,GAASrY,EAExHqN,KAAKiL,WAAY,EACjBjL,KAAKkL,qBAAsB,EAC3BlL,KAAKmL,UAAYlB,GAAK9T,MACtB6J,KAAKgL,QAAU,CACXH,WACAC,QACA5Y,OACAqB,SACAwX,cACAvX,gBACGwX,GAEPhL,KAAKoL,uBACT,CAWAC,aAAAA,GACI,OAAKrL,KAAKsL,YAEHtL,KAAKsL,WAAatL,KAAKmL,UA/BZ,GAgCZnL,KAAKsL,WAFAtL,KAAKmL,SAIpB,CAMA,YAAIhR,GAIA,OAHK6F,KAAKuL,WAAcvL,KAAKkL,sB1BGjC3L,KACAnB,M0BDW4B,KAAKuL,SAChB,CAMAC,mBAAAA,CAAoB5Y,EAAWU,GAC3B0M,KAAKsL,WAAarB,GAAK9T,MACvB6J,KAAKkL,qBAAsB,EAC3B,MAAM,KAAErL,EAAI,KAAE3N,EAAI,SAAEf,EAAQ,MAAE2Z,EAAK,WAAElL,EAAU,SAAE6L,EAAQ,YAAE1B,GAAiB/J,KAAKgL,QAKjF,IAAKjB,IAAgBM,GAAWzX,EAAWiN,EAAM3N,EAAMf,GAAW,CAE9D,GAAIgC,IAAkC2X,EAIlC,OAHa,OAAbW,QAAkC,IAAbA,GAA+BA,EAASpY,EAAiBT,EAAWoN,KAAKgL,QAAS1X,IACxF,OAAfsM,QAAsC,IAAfA,GAAiCA,SACxDI,KAAK0L,yBAKL1L,KAAKgL,QAAQzY,SAAW,CAEhC,CACA,MAAMoZ,EAAoB3L,KAAK4L,aAAahZ,EAAWU,IAC7B,IAAtBqY,IAEJ3L,KAAKuL,UAAY,CACb3Y,YACAU,mBACGqY,GAEP3L,KAAK6L,iBACT,CACAA,cAAAA,GAAmB,CAMnBC,IAAAA,CAAKC,EAASC,GACV,OAAOhM,KAAKiM,uBAAuBH,KAAKC,EAASC,EACrD,CACAE,OAAAA,GACIlM,KAAKgL,QAAQ9Y,KAAO,YACpB8N,KAAKgL,QAAQxY,KAAO,QACxB,CACA4Y,qBAAAA,GACIpL,KAAKiM,uBAAyB,IAAIE,SAASJ,IACvC/L,KAAK0L,uBAAyBK,CAAO,GAE7C,ECrGJ,MAAMK,GAAWA,CAAC9N,EAAM+N,EAAIzb,KACxB,MAAM0b,EAAmBD,EAAK/N,EAC9B,OAA4B,IAArBgO,EAAyB,GAAK1b,EAAQ0N,GAAQgO,CAAgB,ECZnEC,GAAuB,SAACvU,EAAQzF,GAEjC,IADLia,EAAUpd,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAELqd,EAAS,GACb,MAAMC,EAAY5Z,KAAKsD,IAAItD,KAAK4N,MAAMnO,EAAWia,GAAa,GAC9D,IAAK,IAAInc,EAAI,EAAGA,EAAIqc,EAAWrc,IAC3Boc,GAAUzU,EAAOoU,GAAS,EAAGM,EAAY,EAAGrc,IAAM,KAEtD,MAAO,UAAUoc,EAAOnK,UAAU,EAAGmK,EAAOrc,OAAS,KACzD,ECLA,SAASuc,GAAkBxb,EAAUyb,GACjC,OAAOA,EAAgBzb,GAAY,IAAOyb,GAAiB,CAC/D,CCLA,SAASC,GAAsBC,EAAchW,EAAG5F,GAC5C,MAAM6b,EAAQja,KAAKsD,IAAIU,EAFI,EAEwB,GACnD,OAAO6V,GAAkBzb,EAAU4b,EAAaC,GAAQjW,EAAIiW,EAChE,CCNA,MAAMC,GAAiB,CAEnB7a,UAAW,IACXC,QAAS,GACT6a,KAAM,EACN9b,SAAU,EAEVoB,SAAU,IACV2a,OAAQ,GACRC,eAAgB,GAEhB9a,UAAW,CACP+a,SAAU,IACVrS,QAAS,GAEbsS,UAAW,CACPD,SAAU,KACVrS,QAAS,IAGbuS,YAAa,IACbC,YAAa,GACbC,WAAY,IACZC,WAAY,GClBVC,GAAU,KAChB,SAASC,GAAUhb,GAA0I,IACrJib,EACAC,GAFY,SAAEtb,EAAWya,GAAeza,SAAQ,OAAE2a,EAASF,GAAeE,OAAM,SAAE/b,EAAW6b,GAAe7b,SAAQ,KAAE8b,EAAOD,GAAeC,MAAOta,GAGvJ+X,EAAAA,EAAAA,GAAQnY,GAAYV,EAAsBmb,GAAeO,aAAc,8CACvE,IAAIO,EAAe,EAAIZ,EAIvBY,EAAerT,GAAMuS,GAAeQ,WAAYR,GAAeS,WAAYK,GAC3Evb,EAAWkI,GAAMuS,GAAeM,YAAaN,GAAeO,YAAaxb,EAAsBQ,IAC3Fub,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClC5Z,EAAQ8Z,EAAmBzb,EAC3BkP,EAAIuM,EAAmB7c,EACvBuQ,EAAIuM,GAAgBF,EAAcD,GAClCnM,EAAI7O,KAAKob,KAAKha,GACpB,OAAOwZ,GAAWjM,EAAIC,EAAKC,CAAC,EAEhCkM,EAAcE,IACV,MACM7Z,EADmB6Z,EAAeD,EACPvb,EAC3B4b,EAAIja,EAAQ/C,EAAWA,EACvBid,EAAItb,KAAKyF,IAAIuV,EAAc,GAAKhb,KAAKyF,IAAIwV,EAAc,GAAKxb,EAC5D8b,EAAIvb,KAAKob,KAAKha,GACdmO,EAAI4L,GAAgBnb,KAAKyF,IAAIwV,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBL,GAAU,GAAK,EAAI,KACzCS,EAAIC,GAAKC,GAAMhM,CAAC,IAOvCuL,EAAYG,GACEjb,KAAKob,KAAKH,EAAexb,KACxBwb,EAAe5c,GAAYoB,EAAW,GAC1C,KAEXsb,EAAcE,GACAjb,KAAKob,KAAKH,EAAexb,IACIA,EAAWA,GAAvCpB,EAAW4c,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYS,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIje,EAAI,EAAGA,EAAIme,GAAgBne,IAChCke,GAAkBX,EAASW,GAAUV,EAAWU,GAEpD,OAAOA,CACX,CAzByBE,CAAgBb,EAAUC,EAD1B,EAAItb,GAGzB,GADAA,EAAWV,EAAsBU,GAC7B0R,MAAM8J,GACN,MAAO,CACH5b,UAAW6a,GAAe7a,UAC1BC,QAAS4a,GAAe5a,QACxBG,YAGH,CACD,MAAMJ,EAAYW,KAAKyF,IAAIwV,EAAc,GAAKd,EAC9C,MAAO,CACH9a,YACAC,QAAwB,EAAf0b,EAAmBhb,KAAKC,KAAKka,EAAO9a,GAC7CI,WAER,CACJ,CACA,MAAMic,GAAiB,GAQvB,SAASP,GAAgBF,EAAcD,GACnC,OAAOC,EAAejb,KAAKC,KAAK,EAAI+a,EAAeA,EACvD,CC/EA,MAAMY,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAIrc,EAAW,EAEf,IAAI9B,EAAQme,EAAU3e,KAAKsC,GAC3B,MAAQ9B,EAAMoe,MAAQtc,EAAWmc,IAC7Bnc,GAHa,GAIb9B,EAAQme,EAAU3e,KAAKsC,GAE3B,OAAOA,GAAYmc,GAAuBI,IAAWvc,CACzD,CCNA,MAAMwc,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAajE,EAASkE,GAC3B,OAAOA,EAAKC,MAAM5f,QAAyB6B,IAAjB4Z,EAAQzb,IACtC,CAqCA,SAAS6f,KAAgG,IAAzFC,EAAuBjgB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG4d,GAAeG,eAAgBD,EAAM9d,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG4d,GAAeE,OAC7F,MAAMlC,EAA6C,kBAA5BqE,EACjB,CACElC,eAAgBkC,EAChBzc,UAAW,CAAC,EAAG,GACfsa,UAEFmC,EACN,IAAI,UAAEhd,EAAS,UAAEgb,GAAcrC,EAC/B,MAAMjC,EAASiC,EAAQpY,UAAU,GAC3BoW,EAASgC,EAAQpY,UAAUoY,EAAQpY,UAAUxC,OAAS,GAKtDK,EAAQ,CAAEoe,MAAM,EAAOje,MAAOmY,IAC9B,UAAE5W,EAAS,QAAEC,EAAO,KAAE6a,EAAI,SAAE1a,EAAQ,SAAEpB,EAAQ,uBAAEme,GApD1D,SAA0BtE,GACtB,IAAIuE,EAAgB,CAChBpe,SAAU6b,GAAe7b,SACzBgB,UAAW6a,GAAe7a,UAC1BC,QAAS4a,GAAe5a,QACxB6a,KAAMD,GAAeC,KACrBqC,wBAAwB,KACrBtE,GAGP,IAAKiE,GAAajE,EAASgE,KACvBC,GAAajE,EAAS+D,IACtB,GAAI/D,EAAQmC,eAAgB,CACxB,MAAMA,EAAiBnC,EAAQmC,eACzBqC,EAAQ,EAAI1c,KAAK2c,IAAwB,IAAjBtC,GACxBhb,EAAYqd,EAAOA,EACnBpd,EAAU,EAAIqI,GAAM,IAAM,EAAG,EAAIuQ,EAAQkC,QAAUpa,KAAKC,KAAKZ,GACnEod,EAAgB,IACTA,EACHtC,KAAMD,GAAeC,KACrB9a,YACAC,UAER,KACK,CACD,MAAMsd,EAAU/B,GAAW3C,GAC3BuE,EAAgB,IACTA,KACAG,EACHzC,KAAMD,GAAeC,MAEzBsC,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFI,CAAiB,IAC5F3E,EACH7Z,UAAWY,EAAsBiZ,EAAQ7Z,UAAY,KAEnDye,EAAkBze,GAAY,EAC9B2c,EAAe1b,GAAW,EAAIU,KAAKC,KAAKZ,EAAY8a,IACpD4C,EAAe7G,EAASD,EACxB+G,EAAsB/d,EAAsBe,KAAKC,KAAKZ,EAAY8a,IAQlE8C,EAAkBjd,KAAK+E,IAAIgY,GAAgB,EAOjD,IAAIG,EACJ,GAPA3d,IAAcA,EAAY0d,EACpB/C,GAAe3a,UAAU+a,SACzBJ,GAAe3a,UAAU0I,SAC/BsS,IAAcA,EAAY0C,EACpB/C,GAAeK,UAAUD,SACzBJ,GAAeK,UAAUtS,SAE3B+S,EAAe,EAAG,CAClB,MAAMmC,EAAchC,GAAgB6B,EAAqBhC,GAEzDkC,EAAiBlZ,IACb,MAAM8W,EAAW9a,KAAKob,KAAKJ,EAAegC,EAAsBhZ,GAChE,OAAQkS,EACJ4E,IACOgC,EACC9B,EAAegC,EAAsBD,GACrCI,EACAnd,KAAK2F,IAAIwX,EAAcnZ,GACvB+Y,EAAe/c,KAAKod,IAAID,EAAcnZ,GAAG,CAE7D,MACK,GAAqB,IAAjBgX,EAELkC,EAAiBlZ,GAAMkS,EACnBlW,KAAKob,KAAK4B,EAAsBhZ,IAC3B+Y,GACID,EAAkBE,EAAsBD,GAAgB/Y,OAEpE,CAED,MAAMqZ,EAAoBL,EAAsBhd,KAAKC,KAAK+a,EAAeA,EAAe,GACxFkC,EAAiBlZ,IACb,MAAM8W,EAAW9a,KAAKob,KAAKJ,EAAegC,EAAsBhZ,GAE1DsZ,EAAWtd,KAAKuD,IAAI8Z,EAAoBrZ,EAAG,KACjD,OAAQkS,EACH4E,IACKgC,EACE9B,EAAegC,EAAsBD,GACrC/c,KAAKud,KAAKD,GACVD,EACIN,EACA/c,KAAKwd,KAAKF,IAClBD,CAAiB,CAEjC,CACA,MAAMvB,EAAY,CACd2B,mBAAoBjB,GAAyB/c,GAAmB,KAChEtC,KAAO6G,IACH,MAAM5F,EAAU8e,EAAclZ,GAC9B,GAAKwY,EAmBD7e,EAAMoe,KAAO/X,GAAKvE,MAnBO,CACzB,IAAIie,EAAkB,EAMlB1C,EAAe,IACf0C,EACU,IAAN1Z,EACMjF,EAAsB+d,GACtB/C,GAAsBmD,EAAelZ,EAAG5F,IAEtD,MAAMuf,EAA2B3d,KAAK+E,IAAI2Y,IAAoBne,EACxDqe,EAA+B5d,KAAK+E,IAAImR,EAAS9X,IAAYmc,EACnE5c,EAAMoe,KACF4B,GAA4BC,CACpC,CAKA,OADAjgB,EAAMG,MAAQH,EAAMoe,KAAO7F,EAAS9X,EAC7BT,CAAK,EAEhB0S,SAAUA,KACN,MAAMoN,EAAqBzd,KAAKuD,IAAIsY,GAAsBC,GAAYF,IAChE1W,EAASuU,IAAsBH,GAAawC,EAAU3e,KAAKsgB,EAAqBnE,GAAUxb,OAAO2f,EAAoB,IAC3H,OAAOA,EAAqB,MAAQvY,CAAM,GAGlD,OAAO4W,CACX,CC/JA,SAAS+B,GAAOhe,GAAiK,IAAhK,UAAEC,EAAS,SAAEzB,EAAW,EAAG,MAAEyf,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAE3a,EAAG,IAAED,EAAG,UAAEiX,EAAY,GAAG,UAAEhb,GAAYM,EAC3K,MAAMoW,EAASnW,EAAU,GACnBnC,EAAQ,CACVoe,MAAM,EACNje,MAAOmY,GAGLkI,EAAmBthB,QACTyB,IAARiF,EACOD,OACChF,IAARgF,GAEGtD,KAAK+E,IAAIxB,EAAM1G,GAAKmD,KAAK+E,IAAIzB,EAAMzG,GAD/B0G,EAC0CD,EAEzD,IAAI8a,EAAYN,EAAQzf,EACxB,MAAMggB,EAAQpI,EAASmI,EACjBlI,OAA0B5X,IAAjB4f,EAA6BG,EAAQH,EAAaG,GAK7DnI,IAAWmI,IACXD,EAAYlI,EAASD,GACzB,MAAMqI,EAAata,IAAOoa,EAAYpe,KAAKob,KAAKpX,EAAI+Z,GAC9CQ,EAAcva,GAAMkS,EAASoI,EAAUta,GACvCwa,EAAiBxa,IACnB,MAAM5C,EAAQkd,EAAUta,GAClBya,EAASF,EAAWva,GAC1BrG,EAAMoe,KAAO/b,KAAK+E,IAAI3D,IAAUmZ,EAChC5c,EAAMG,MAAQH,EAAMoe,KAAO7F,EAASuI,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsB5a,IAjCLnH,SAkCAc,EAAMG,WAlCSQ,IAARiF,GAAqB1G,EAAI0G,QAAiBjF,IAARgF,GAAqBzG,EAAIyG,KAoCrFob,EAAsB1a,EACtB2a,EAAWrC,GAAO,CACdxc,UAAW,CAACnC,EAAMG,MAAOqgB,EAAgBxgB,EAAMG,QAC/CO,SAAU0b,GAAsBwE,EAAYva,EAAGrG,EAAMG,OACrDwB,QAAS0e,EACT3e,UAAW4e,EACX1D,YACAhb,cACF,EAGN,OADAqf,EAAmB,GACZ,CACHnB,mBAAoB,KACpBtgB,KAAO6G,IAOH,IAAI6a,GAAkB,EAUtB,OATKF,QAAoCrgB,IAAxBogB,IACbG,GAAkB,EAClBL,EAAcxa,GACd4a,EAAmB5a,SAMK1F,IAAxBogB,GAAqC1a,GAAK0a,EACnCC,EAASxhB,KAAK6G,EAAI0a,KAGxBG,GAAmBL,EAAcxa,GAC3BrG,EACX,EAGZ,CClFA,MAAMmhB,GAAuB3a,EAAY,IAAM,EAAG,EAAG,GAC/C4a,GAAwB5a,EAAY,EAAG,EAAG,IAAM,GAChD6a,GAA0B7a,EAAY,IAAM,EAAG,IAAM,GCJrD8a,GAAsB/Z,GAAWlI,MAAMC,QAAQiI,IAAgC,kBAAdA,EAAO,GCSxEga,GAAe,CACjBC,OAAQrb,EAAAA,EACRgb,OAAM,GACNE,UAAS,GACTD,QAAO,GACPrZ,OAAM,EACNI,UAAS,EACTD,QAAO,EACPP,OAAM,EACNC,UAAS,EACTF,QAAO,EACPG,WAAUA,GAER4Z,GAA8BlhB,IAChC,GAAI+gB,GAAmB/gB,GAAa,EAEhC4I,EAAAA,EAAAA,GAAgC,IAAtB5I,EAAWZ,OAAc,2DACnC,MAAO+hB,EAAIC,EAAIC,EAAIC,GAAMthB,EACzB,OAAOiG,EAAYkb,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAfthB,IAEZ4I,EAAAA,EAAAA,QAAuCxI,IAA7B4gB,GAAahhB,GAA2B,wBAAwBA,MACnEghB,GAAahhB,IAEjBA,CAAU,EC3BfuhB,GAAmBA,CAAC9Q,EAAGC,IAAO/R,GAAM+R,EAAED,EAAE9R,IACxC6iB,GAAO,mBAAAC,EAAArjB,UAAAgB,OAAIsiB,EAAY,IAAA5iB,MAAA2iB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAAvjB,UAAAujB,GAAA,OAAKD,EAAane,OAAOge,GAAiB,ECajEK,GAAYA,CAACtU,EAAM+N,EAAID,IAClB9N,GAAQ+N,EAAK/N,GAAQ8N,ECrBhC,SAASyG,GAAS5a,EAAG6a,EAAGhc,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDmB,EAAc,GAAT6a,EAAI7a,GAASnB,EACzBA,EAAI,GACGgc,EACPhc,EAAI,EAAI,EACDmB,GAAK6a,EAAI7a,IAAM,EAAI,EAAInB,GAAK,EAChCmB,CACX,CCbA,SAAS8a,GAAatR,EAAGC,GACrB,OAAQzJ,GAAOA,EAAI,EAAIyJ,EAAID,CAC/B,CCSA,MAAMuR,GAAiBA,CAAC1U,EAAM+N,EAAI1c,KAC9B,MAAMsjB,EAAW3U,EAAOA,EAClB4U,EAAOvjB,GAAK0c,EAAKA,EAAK4G,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAIpgB,KAAKC,KAAKmgB,EAAK,EAEnCC,GAAa,CAAChR,GAAKL,GAAMU,IAE/B,SAAS4Q,GAAOxQ,GACZ,MAAM1Q,GAFYvC,EAEQiT,EAFFuQ,GAAWnV,MAAM9L,GAASA,EAAK4G,KAAKnJ,MAA1CA,MAIlB,IADA+a,EAAAA,EAAAA,GAAQ3J,QAAQ7O,GAAO,IAAI0Q,0EACtB7B,QAAQ7O,GACT,OAAO,EACX,IAAImhB,EAAQnhB,EAAKyI,MAAMiI,GAKvB,OAJI1Q,IAASsQ,KAET6Q,EFZR,SAAmB1gB,GAAwC,IAAvC,IAAE8P,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAE9H,GAAOlI,EACrD8P,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKS,EAGA,CACD,MAAMoQ,EAAInQ,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCzK,EAAI,EAAI0K,EAAYmQ,EAC1B/Q,EAAM8Q,GAAS5a,EAAG6a,EAAGrQ,EAAM,EAAI,GAC/BT,EAAQ6Q,GAAS5a,EAAG6a,EAAGrQ,GACvBR,EAAO4Q,GAAS5a,EAAG6a,EAAGrQ,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAKjP,KAAK4N,MAAY,IAANqB,GAChBC,MAAOlP,KAAK4N,MAAc,IAARsB,GAClBC,KAAMnP,KAAK4N,MAAa,IAAPuB,GACjBpH,QAER,CEbgByY,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACjV,EAAM+N,KACpB,MAAMmH,EAAWJ,GAAO9U,GAClBmV,EAASL,GAAO/G,GACtB,IAAKmH,IAAaC,EACd,OAAOV,GAAazU,EAAM+N,GAE9B,MAAMqH,EAAU,IAAKF,GACrB,OAAQ7jB,IACJ+jB,EAAQ3R,IAAMiR,GAAeQ,EAASzR,IAAK0R,EAAO1R,IAAKpS,GACvD+jB,EAAQ1R,MAAQgR,GAAeQ,EAASxR,MAAOyR,EAAOzR,MAAOrS,GAC7D+jB,EAAQzR,KAAO+Q,GAAeQ,EAASvR,KAAMwR,EAAOxR,KAAMtS,GAC1D+jB,EAAQ7Y,MAAQ+X,GAAUY,EAAS3Y,MAAO4Y,EAAO5Y,MAAOlL,GACjDmS,GAAKlH,UAAU8Y,GACzB,EC3CCC,GAAkB,IAAI/hB,IAAI,CAAC,OAAQ,WCUzC,SAASghB,GAAUnR,EAAGC,GAClB,OAAQzJ,GAAM2b,GAAYnS,EAAGC,EAAGzJ,EACpC,CACA,SAAS4b,GAASpS,GACd,MAAiB,kBAANA,EACAmR,GAEW,kBAANnR,EACLrI,EAAmBqI,GACpBsR,GACAnQ,GAAM9J,KAAK2I,GACP8R,GACAO,GAELhkB,MAAMC,QAAQ0R,GACZsS,GAEW,kBAANtS,EACLmB,GAAM9J,KAAK2I,GAAK8R,GAAWS,GAE/BjB,EACX,CACA,SAASgB,GAAStS,EAAGC,GACjB,MAAMmC,EAAS,IAAIpC,GACbwS,EAAYpQ,EAAOzT,OACnB8jB,EAAazS,EAAE/C,KAAI,CAAC/O,EAAGU,IAAMwjB,GAASlkB,EAATkkB,CAAYlkB,EAAG+R,EAAErR,MACpD,OAAQ4H,IACJ,IAAK,IAAI5H,EAAI,EAAGA,EAAI4jB,EAAW5jB,IAC3BwT,EAAOxT,GAAK6jB,EAAW7jB,GAAG4H,GAE9B,OAAO4L,CAAM,CAErB,CACA,SAASmQ,GAAUvS,EAAGC,GAClB,MAAMmC,EAAS,IAAKpC,KAAMC,GACpBwS,EAAa,CAAC,EACpB,IAAK,MAAM3kB,KAAOsU,OACCzS,IAAXqQ,EAAElS,SAAiC6B,IAAXsQ,EAAEnS,KAC1B2kB,EAAW3kB,GAAOskB,GAASpS,EAAElS,GAAXskB,CAAiBpS,EAAElS,GAAMmS,EAAEnS,KAGrD,OAAQI,IACJ,IAAK,MAAMJ,KAAO2kB,EACdrQ,EAAOtU,GAAO2kB,EAAW3kB,GAAKI,GAElC,OAAOkU,CAAM,CAErB,CAcA,MAAMiQ,GAAaA,CAAC/K,EAAQC,KACxB,MAAMmL,EAAWpQ,GAAQL,kBAAkBsF,GACrCoL,EAAcnR,GAAoB8F,GAClCsL,EAAcpR,GAAoB+F,GAIxC,OAHuBoL,EAAYhR,QAAQC,IAAIjT,SAAWikB,EAAYjR,QAAQC,IAAIjT,QAC9EgkB,EAAYhR,QAAQR,MAAMxS,SAAWikB,EAAYjR,QAAQR,MAAMxS,QAC/DgkB,EAAYhR,QAAQ1I,OAAOtK,QAAUikB,EAAYjR,QAAQ1I,OAAOtK,OAE3DujB,GAAgBnkB,IAAIuZ,KACpBsL,EAAY3jB,OAAON,QACnBujB,GAAgBnkB,IAAIwZ,KAChBoL,EAAY1jB,OAAON,OD5EpC,SAAuB2Y,EAAQC,GAC3B,OAAI2K,GAAgBnkB,IAAIuZ,GACZ9Q,GAAOA,GAAK,EAAI8Q,EAASC,EAGzB/Q,GAAOA,GAAK,EAAI+Q,EAASD,CAEzC,CCsEmBuL,CAAcvL,EAAQC,GAE1BwJ,GAAKuB,GA3BpB,SAAoBhL,EAAQC,GACxB,IAAI9J,EACJ,MAAMqV,EAAgB,GAChBC,EAAW,CAAE5R,MAAO,EAAGS,IAAK,EAAG3I,OAAQ,GAC7C,IAAK,IAAIrK,EAAI,EAAGA,EAAI2Y,EAAOtY,OAAON,OAAQC,IAAK,CAC3C,MAAM6B,EAAO8W,EAAO1F,MAAMjT,GACpBokB,EAAc1L,EAAO3F,QAAQlR,GAAMsiB,EAAStiB,IAC5CwiB,EAAoD,QAArCxV,EAAK6J,EAAOrY,OAAO+jB,UAAiC,IAAPvV,EAAgBA,EAAK,EACvFqV,EAAclkB,GAAKqkB,EACnBF,EAAStiB,IACb,CACA,OAAOqiB,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAY3jB,QAASyjB,KAGhFzJ,EAAAA,EAAAA,IAAQ,EAAM,mBAAmB3B,WAAgBC,6KAC1C+J,GAAahK,EAAQC,GAChC,ECvFJ,SAAS4L,GAAItW,EAAM+N,EAAIpU,GACnB,GAAoB,kBAATqG,GACO,kBAAP+N,GACM,kBAANpU,EACP,OAAO2a,GAAUtU,EAAM+N,EAAIpU,GAG/B,OADc4b,GAASvV,EAChBuW,CAAMvW,EAAM+N,EACvB,CC6BA,SAASyI,GAAYC,EAAOlR,GAAqD,IAA3CpJ,MAAOua,GAAU,EAAI,KAAExiB,EAAI,MAAEqiB,GAAOzlB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAM6lB,EAAcF,EAAM3kB,OAM1B,IALAwJ,EAAAA,EAAAA,GAAUqb,IAAgBpR,EAAOzT,OAAQ,wDAKrB,IAAhB6kB,EACA,MAAO,IAAMpR,EAAO,GACxB,GAAoB,IAAhBoR,GAAqBF,EAAM,KAAOA,EAAM,GACxC,MAAO,IAAMlR,EAAO,GAEpBkR,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnBrR,EAAS,IAAIA,GAAQqR,WAEzB,MAAMC,EAjDV,SAAsBtR,EAAQrR,EAAM4iB,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAeR,GAC9BU,EAAYzR,EAAOzT,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIilB,EAAWjlB,IAAK,CAChC,IAAIwkB,EAAQQ,EAAaxR,EAAOxT,GAAIwT,EAAOxT,EAAI,IAC/C,GAAImC,EAAM,CACN,MAAM+iB,EAAiBzlB,MAAMC,QAAQyC,GAAQA,EAAKnC,IAAMuG,EAAAA,EAAOpE,EAC/DqiB,EAAQrC,GAAK+C,EAAgBV,EACjC,CACAM,EAAOrW,KAAK+V,EAChB,CACA,OAAOM,CACX,CAoCmBK,CAAa3R,EAAQrR,EAAMqiB,GACpCS,EAAYH,EAAO/kB,OACnBqlB,EAAgB9lB,IAClB,IAAIU,EAAI,EACR,GAAIilB,EAAY,EACZ,KAAOjlB,EAAI0kB,EAAM3kB,OAAS,KAClBT,EAAIolB,EAAM1kB,EAAI,IADOA,KAKjC,MAAMqlB,EAAkBtJ,GAAS2I,EAAM1kB,GAAI0kB,EAAM1kB,EAAI,GAAIV,GACzD,OAAOwlB,EAAO9kB,GAAGqlB,EAAgB,EAErC,OAAOV,EACArlB,GAAM8lB,EAAahb,GAAMsa,EAAM,GAAIA,EAAME,EAAc,GAAItlB,IAC5D8lB,CACV,CCtEA,SAASE,GAAcC,GACnB,MAAMC,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQC,GACxB,MAAMzf,EAAMwf,EAAOA,EAAOzlB,OAAS,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKylB,EAAWzlB,IAAK,CACjC,MAAM0lB,EAAiB3J,GAAS,EAAG0J,EAAWzlB,GAC9CwlB,EAAO/W,KAAK8T,GAAUvc,EAAK,EAAG0f,GAClC,CACJ,CDLIC,CAAWH,EAAQD,EAAIxlB,OAAS,GACzBylB,CACX,CEIA,SAASjjB,GAASD,GAA4E,IAA3E,SAAEJ,EAAW,IAAKK,UAAWqjB,EAAc,MAAEC,EAAK,KAAE1jB,EAAO,aAAcG,EAKxF,MAAMwjB,ECfa3jB,IACZ1C,MAAMC,QAAQyC,IAA4B,kBAAZA,EAAK,GDclB4jB,CAAc5jB,GAChCA,EAAKkM,IAAIwT,IACTA,GAA2B1f,GAK3B/B,EAAQ,CACVoe,MAAM,EACNje,MAAOqlB,EAAe,IAKpBI,EE7BV,SAA8BR,EAAQtjB,GAClC,OAAOsjB,EAAOnX,KAAK4X,GAAMA,EAAI/jB,GACjC,CF2B0BgkB,CAGtBL,GAASA,EAAM9lB,SAAW6lB,EAAe7lB,OACnC8lB,EACAP,GAAcM,GAAiB1jB,GAC/BikB,EAAoB1B,GAAYuB,EAAeJ,EAAgB,CACjEzjB,KAAM1C,MAAMC,QAAQomB,GACdA,GA9BSzlB,EA+BKulB,EA/BGje,EA+Bame,EA9BjCzlB,EAAOgO,KAAI,IAAM1G,GAAU8Z,KAAW2E,OAAO,EAAG/lB,EAAON,OAAS,MAD3E,IAAuBM,EAAQsH,EAiC3B,MAAO,CACHuY,mBAAoBhe,EACpBtC,KAAO6G,IACHrG,EAAMG,MAAQ4lB,EAAkB1f,GAChCrG,EAAMoe,KAAO/X,GAAKvE,EACX9B,GAGnB,CG7CA,MAAMimB,GAAmB7gB,IACrB,MAAM8gB,EAAgBhkB,IAAA,IAAC,UAAEwB,GAAWxB,EAAA,OAAKkD,EAAO1B,EAAU,EAC1D,MAAO,CACHvE,MAAOA,IAAM4G,EAAMX,OAAO8gB,GAAe,GACzCC,KAAMA,IAAMngB,EAAYkgB,GAKxBxgB,IAAKA,IAAOX,EAAUpB,aAAeoB,EAAUrB,UAAY8V,GAAK9T,MACnE,ECEC0gB,GAAa,CACfC,MAAOnG,GACPA,QAAO,GACPoG,MAAOnkB,GACPA,UAAWA,GACXwc,OAAMA,IAEJ4H,GAAqB5b,GAAYA,EAAU,IAMjD,MAAM6b,WAA4BrM,GAC9BlL,WAAAA,CAAYsL,GACRpC,MAAMoC,GAINhL,KAAKkX,SAAW,KAIhBlX,KAAKmX,WAAa,KAIlBnX,KAAKoX,YAAc,EAInBpX,KAAKqX,cAAgB,EAMrBrX,KAAKsX,iBAAmB,UAIxBtX,KAAKuX,UAAY,KACjBvX,KAAKvP,MAAQ,OAKbuP,KAAK4W,KAAO,KAGR,GAFA5W,KAAKzB,SAASlJ,SACd2K,KAAKiL,WAAY,EACE,SAAfjL,KAAKvP,MACL,OACJuP,KAAKwX,WACL,MAAM,OAAEC,GAAWzX,KAAKgL,QACxByM,GAAUA,GAAQ,EAEtB,MAAM,KAAE5X,EAAI,YAAEC,EAAW,QAAEpG,EAAO,UAAE9G,GAAcoN,KAAKgL,QACjD0M,GAAkC,OAAZhe,QAAgC,IAAZA,OAAqB,EAASA,EAAQ+F,mBAAqBA,GAE3GO,KAAKzB,SAAW,IAAImZ,EAAmB9kB,GADpB+kB,CAAClkB,EAAmBH,IAAkB0M,KAAKwL,oBAAoB/X,EAAmBH,IACvCuM,EAAMC,EAAapG,GACjFsG,KAAKzB,SAAS2B,iBAClB,CACAgM,OAAAA,GACItD,MAAMsD,UAEFlM,KAAKuL,WACLtK,OAAO2W,OAAO5X,KAAKuL,UAAWvL,KAAK4L,aAAa5L,KAAKuL,UAAU3Y,WAEvE,CACAgZ,YAAAA,CAAaiM,GACT,MAAM,KAAE3lB,EAAO,YAAW,OAAEqB,EAAS,EAAC,YAAEwX,EAAc,EAAC,WAAEvX,EAAU,SAAErC,EAAW,GAAO6O,KAAKgL,QACtF8M,EAAmB/N,GAAY7X,GAC/BA,EACA2kB,GAAW3kB,IAASU,GAO1B,IAAImlB,EACAC,EACAF,IAAqBllB,IACK,kBAAnBilB,EAAY,KAInBE,EAAwBvF,GAAKwE,GAAmBpC,GAAIiD,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMjJ,EAAYkJ,EAAiB,IAAK9X,KAAKgL,QAASpY,UAAWilB,IAK9C,WAAfrkB,IACAwkB,EAAoBF,EAAiB,IAC9B9X,KAAKgL,QACRpY,UAAW,IAAIilB,GAAa3C,UAC5B/jB,UAAWA,KAWkB,OAAjCyd,EAAU2B,qBACV3B,EAAU2B,mBAAqB5B,GAAsBC,IAEzD,MAAM,mBAAE2B,GAAuB3B,EACzBqJ,EAAmB1H,EAAqBxF,EAE9C,MAAO,CACH6D,YACAoJ,oBACAD,wBACAxH,qBACA0H,mBACAC,cAPkBD,GAAoB1kB,EAAS,GAAKwX,EAS5D,CACAc,cAAAA,GACI,MAAM,SAAEhB,GAAW,GAAS7K,KAAKgL,QACjChL,KAAKmY,OACyB,WAA1BnY,KAAKsX,kBAAkCzM,EAIvC7K,KAAKvP,MAAQuP,KAAKsX,iBAHlBtX,KAAKoY,OAKb,CACAC,IAAAA,CAAKlkB,GAA2B,IAAhBmkB,EAAMlpB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAClB,MAAM,SAAE+K,GAAa6F,KAErB,IAAK7F,EAAU,CACX,MAAM,UAAEvH,GAAcoN,KAAKgL,QAC3B,MAAO,CAAE6D,MAAM,EAAMje,MAAOgC,EAAUA,EAAUxC,OAAS,GAC7D,CACA,MAAM,cAAEkD,EAAa,UAAEsb,EAAS,kBAAEoJ,EAAiB,sBAAED,EAAqB,UAAEnlB,EAAS,mBAAE2d,EAAkB,cAAE2H,EAAa,iBAAED,GAAsB9d,EAChJ,GAAuB,OAAnB6F,KAAKuX,UACL,OAAO3I,EAAU3e,KAAK,GAC1B,MAAM,MAAE6a,EAAK,OAAEvX,EAAM,WAAEC,EAAU,YAAEuX,EAAW,SAAEU,GAAazL,KAAKgL,QAO9DhL,KAAKuY,MAAQ,EACbvY,KAAKuX,UAAYzkB,KAAKuD,IAAI2J,KAAKuX,UAAWpjB,GAErC6L,KAAKuY,MAAQ,IAClBvY,KAAKuX,UAAYzkB,KAAKuD,IAAIlC,EAAY+jB,EAAgBlY,KAAKuY,MAAOvY,KAAKuX,YAGvEe,EACAtY,KAAKoX,YAAcjjB,EAEI,OAAlB6L,KAAKkX,SACVlX,KAAKoX,YAAcpX,KAAKkX,SAMxBlX,KAAKoX,YACDtkB,KAAK4N,MAAMvM,EAAY6L,KAAKuX,WAAavX,KAAKuY,MAGtD,MAAMC,EAAmBxY,KAAKoX,YAActM,GAAS9K,KAAKuY,OAAS,EAAI,GAAK,GACtEE,EAAiBzY,KAAKuY,OAAS,EAC/BC,EAAmB,EACnBA,EAAmBN,EACzBlY,KAAKoX,YAActkB,KAAKsD,IAAIoiB,EAAkB,GAE3B,aAAfxY,KAAKvP,OAA0C,OAAlBuP,KAAKkX,WAClClX,KAAKoX,YAAcc,GAEvB,IAAIQ,EAAU1Y,KAAKoX,YACfuB,EAAiB/J,EACrB,GAAIrb,EAAQ,CAMR,MAAM6Y,EAAWtZ,KAAKuD,IAAI2J,KAAKoX,YAAac,GAAiBD,EAK7D,IAAIW,EAAmB9lB,KAAK+lB,MAAMzM,GAK9B0M,EAAoB1M,EAAW,GAK9B0M,GAAqB1M,GAAY,IAClC0M,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB9lB,KAAKuD,IAAIuiB,EAAkBrlB,EAAS,GAIhCwN,QAAQ6X,EAAmB,KAE3B,YAAfplB,GACAslB,EAAoB,EAAIA,EACpB/N,IACA+N,GAAqB/N,EAAckN,IAGnB,WAAfzkB,IACLmlB,EAAiBX,IAGzBU,EAAUje,GAAM,EAAG,EAAGqe,GAAqBb,CAC/C,CAMA,MAAMxnB,EAAQgoB,EACR,CAAE5J,MAAM,EAAOje,MAAOgC,EAAU,IAChC+lB,EAAe1oB,KAAKyoB,GACtBX,IACAtnB,EAAMG,MAAQmnB,EAAsBtnB,EAAMG,QAE9C,IAAI,KAAEie,GAASpe,EACVgoB,GAAyC,OAAvBlI,IACnB1B,EACI7O,KAAKuY,OAAS,EACRvY,KAAKoX,aAAec,EACpBlY,KAAKoX,aAAe,GAElC,MAAM2B,EAAwC,OAAlB/Y,KAAKkX,WACb,aAAflX,KAAKvP,OAAwC,YAAfuP,KAAKvP,OAAuBoe,GAU/D,OATIkK,QAAyC3nB,IAAlBkC,IACvB7C,EAAMG,MAAQyC,EAAiBT,EAAWoN,KAAKgL,QAAS1X,IAExDmY,GACAA,EAAShb,EAAMG,OAEfmoB,GACA/Y,KAAKgZ,SAEFvoB,CACX,CACA,YAAI8B,GACA,MAAM,SAAE4H,GAAa6F,KACrB,OAAO7F,EAAWpI,EAAsBoI,EAASoW,oBAAsB,CAC3E,CACA,QAAItG,GACA,OAAOlY,EAAsBiO,KAAKoX,YACtC,CACA,QAAInN,CAAKC,GACLA,EAAUrY,EAAsBqY,GAChClK,KAAKoX,YAAclN,EACG,OAAlBlK,KAAKkX,UAAoC,IAAflX,KAAKuY,MAC/BvY,KAAKkX,SAAWhN,EAEXlK,KAAKiZ,SACVjZ,KAAKuX,UAAYvX,KAAKiZ,OAAO9iB,MAAQ+T,EAAUlK,KAAKuY,MAE5D,CACA,SAAIA,GACA,OAAOvY,KAAKqX,aAChB,CACA,SAAIkB,CAAMW,GACN,MAAMC,EAAanZ,KAAKqX,gBAAkB6B,EAC1ClZ,KAAKqX,cAAgB6B,EACjBC,IACAnZ,KAAKiK,KAAOlY,EAAsBiO,KAAKoX,aAE/C,CACAe,IAAAA,GAII,GAHKnY,KAAKzB,SAASL,aACf8B,KAAKzB,SAASiC,UAEbR,KAAKuL,UAEN,YADAvL,KAAKsX,iBAAmB,WAG5B,GAAItX,KAAKiL,UACL,OACJ,MAAM,OAAEgO,EAASvC,GAAe,OAAE0C,EAAM,UAAE7B,GAAcvX,KAAKgL,QACxDhL,KAAKiZ,SACNjZ,KAAKiZ,OAASA,GAAQ9kB,GAAc6L,KAAKqY,KAAKlkB,MAElDilB,GAAUA,IACV,MAAMjjB,EAAM6J,KAAKiZ,OAAO9iB,MACF,OAAlB6J,KAAKkX,SACLlX,KAAKuX,UAAYphB,EAAM6J,KAAKkX,SAEtBlX,KAAKuX,UAGS,aAAfvX,KAAKvP,QACVuP,KAAKuX,UAAYphB,GAHjB6J,KAAKuX,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAYvX,KAAKqL,gBAKhE,aAAfrL,KAAKvP,OACLuP,KAAKoL,wBAETpL,KAAKmX,WAAanX,KAAKuX,UACvBvX,KAAKkX,SAAW,KAKhBlX,KAAKvP,MAAQ,UACbuP,KAAKiZ,OAAOrpB,OAChB,CACAwoB,KAAAA,GACI,IAAIlZ,EACCc,KAAKuL,WAIVvL,KAAKvP,MAAQ,SACbuP,KAAKkX,SAAuC,QAA3BhY,EAAKc,KAAKoX,mBAAgC,IAAPlY,EAAgBA,EAAK,GAJrEc,KAAKsX,iBAAmB,QAKhC,CACAhY,QAAAA,GACuB,YAAfU,KAAKvP,OACLuP,KAAKmY,OAETnY,KAAKsX,iBAAmBtX,KAAKvP,MAAQ,WACrCuP,KAAKkX,SAAW,IACpB,CACA8B,MAAAA,GACIhZ,KAAKwX,WACLxX,KAAKvP,MAAQ,WACb,MAAM,WAAEmP,GAAeI,KAAKgL,QAC5BpL,GAAcA,GAClB,CACAvK,MAAAA,GAC4B,OAApB2K,KAAKmX,YACLnX,KAAKqY,KAAKrY,KAAKmX,YAEnBnX,KAAKwX,WACLxX,KAAKoL,uBACT,CACAoM,QAAAA,GACIxX,KAAKvP,MAAQ,OACbuP,KAAKqZ,aACLrZ,KAAK0L,yBACL1L,KAAKoL,wBACLpL,KAAKuX,UAAYvX,KAAKmX,WAAa,KACnCnX,KAAKzB,SAASlJ,QAClB,CACAgkB,UAAAA,GACSrZ,KAAKiZ,SAEVjZ,KAAKiZ,OAAOrC,OACZ5W,KAAKiZ,YAAS7nB,EAClB,CACAknB,MAAAA,CAAOrO,GAEH,OADAjK,KAAKuX,UAAY,EACVvX,KAAKqY,KAAKpO,GAAM,EAC3B,EC5XJ,MAAMqP,GAAoB,IAAI1nB,IAAI,CAC9B,UACA,WACA,SACA,cCPJ,SAAS2nB,GAAKvkB,GACV,IAAIuZ,EACJ,MAAO,UACYnd,IAAXmd,IACAA,EAASvZ,KACNuZ,EAEf,CCHA,MAAMiL,GAAgB,CAClBC,kBAAcroB,GCFlB,SAASsoB,GAAa1kB,EAAU2kB,GAC5B,MAAMC,EAAWL,GAAKvkB,GACtB,MAAO,KAAQ,IAAIkK,EAAI,OAA8C,QAAtCA,EAAKsa,GAAcG,UAAkC,IAAPza,EAAgBA,EAAK0a,GAAU,CAChH,CCJA,MAAMC,GAAqCH,IAAa,KACpD,IACII,SACKC,cAAc,OACdC,QAAQ,CAAE9S,QAAS,GAAK,CAAElP,OAAQ,gBAC3C,CACA,MAAOoW,GACH,OAAO,CACX,CACA,OAAO,CAAI,GACZ,gBCRH,SAAS6L,GAAuBjiB,GAC5B,OAAO+I,QAA2B,oBAAX/I,GAAyB6hB,OAC3C7hB,GACkB,kBAAXA,IACHA,KAAUkiB,IAAwBL,OACvC9H,GAAmB/Z,IAClBlI,MAAMC,QAAQiI,IAAWA,EAAOmiB,MAAMF,IAC/C,CACA,MAAMG,GAAsBznB,IAAA,IAAE8O,EAAGC,EAAGC,EAAGwM,GAAExb,EAAA,MAAK,gBAAgB8O,MAAMC,MAAMC,MAAMwM,IAAI,EAC9E+L,GAAuB,CACzBjI,OAAQ,SACRzf,KAAM,OACNof,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXtZ,OAAsB4hB,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DzhB,QAAuByhB,GAAoB,CAAC,IAAM,EAAG,EAAG,MACxDhiB,OAAsBgiB,GAAoB,CAAC,IAAM,IAAM,KAAO,MAC9DjiB,QAAuBiiB,GAAoB,CAAC,IAAM,KAAM,IAAM,OAElE,SAASC,GAAwBriB,EAAQzF,GACrC,OAAKyF,EAGsB,oBAAXA,GAAyB6hB,KAC9BtN,GAAqBvU,EAAQzF,GAE/Bwf,GAAmB/Z,GACjBoiB,GAAoBpiB,GAEtBlI,MAAMC,QAAQiI,GACZA,EAAO0G,KAAK4b,GAAkBD,GAAwBC,EAAe/nB,IACxE2nB,GAAqBrI,UAGlBqI,GAAqBliB,QAb5B,CAeR,CCvCA,SAASuiB,GAAoB7gB,EAAS8gB,EAAW5nB,GAA4G,IAAjG,MAAEkY,EAAQ,EAAC,SAAEvY,EAAW,IAAG,OAAEgB,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAEhB,EAAO,YAAW,MAAE0jB,GAAQ9mB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtJ,MAAMqrB,EAAkB,CAAE,CAACD,GAAY5nB,GACnCsjB,IACAuE,EAAgB5E,OAASK,GAC7B,MAAMle,EAASqiB,GAAwB7nB,EAAMD,GAM7C,OAFIzC,MAAMC,QAAQiI,KACdyiB,EAAgBziB,OAASA,GACtB0B,EAAQsgB,QAAQS,EAAiB,CACpC3P,QACAvY,WACAyF,OAASlI,MAAMC,QAAQiI,GAAmB,SAATA,EACjCgQ,KAAM,OACN0S,WAAYnnB,EAAS,EACrBonB,UAA0B,YAAfnnB,EAA2B,YAAc,UAE5D,CCpBA,SAASonB,GAAeC,EAAWC,GAC/BD,EAAUC,SAAWA,EACrBD,EAAUE,SAAW,IACzB,CCDA,MAAMC,GAA8BzB,IAAK,IAAMtY,OAAOE,eAAeC,KAAK6Z,QAAQ/Z,UAAW,aCoE7F,MAAMga,GAA6B,CAC/B5iB,WAAU,EACVD,UAAS,EACTO,UAASA,GAKb,MAAMuiB,WAA6BvQ,GAC/BlL,WAAAA,CAAYsL,GACRpC,MAAMoC,GACN,MAAM,KAAEnL,EAAI,YAAEC,EAAW,QAAEpG,EAAO,UAAE9G,GAAcoN,KAAKgL,QACvDhL,KAAKzB,SAAW,IAAIoK,GAAqB/V,GAAW,CAACa,EAAmBH,IAAkB0M,KAAKwL,oBAAoB/X,EAAmBH,IAAgBuM,EAAMC,EAAapG,GACzKsG,KAAKzB,SAAS2B,iBAClB,CACA0L,YAAAA,CAAahZ,EAAWU,GACpB,IAAI4L,EACJ,IAAI,SAAE3M,EAAW,IAAG,MAAE2jB,EAAK,KAAE1jB,EAAI,KAAEN,EAAI,YAAE4N,EAAW,KAAED,EAAI,UAAE0X,GAAevX,KAAKgL,QAKhF,KAAmC,QAA5B9L,EAAKY,EAAYsb,aAA0B,IAAPlc,OAAgB,EAASA,EAAGhO,SACnE,OAAO,EAlBnB,IA1CuC8Z,EA2E/B,GARoB,kBAATxY,GACPqnB,MACkBrnB,KA1BZ0oB,KA2BN1oB,EAAO0oB,GAA2B1oB,IArElCuX,IAD2BiB,EA2EGhL,KAAKgL,SA1Ef9Y,OACP,WAAjB8Y,EAAQ9Y,OACP+nB,GAAuBjP,EAAQxY,MAwEiB,CAC7C,MAAM,WAAEoN,EAAU,SAAE6L,EAAQ,YAAE3L,EAAW,QAAEpG,KAAYsR,GAAYhL,KAAKgL,QAClEqQ,EAxElB,SAA8BzoB,EAAWoY,GAMrC,MAAMsQ,EAAkB,IAAIrE,GAAoB,IACzCjM,EACHpY,YACAW,OAAQ,EACRuX,MAAO,EACPf,aAAa,IAEjB,IAAItZ,EAAQ,CAAEoe,MAAM,EAAOje,MAAOgC,EAAU,IAC5C,MAAM2oB,EAAwB,GAK9B,IAAIzkB,EAAI,EACR,MAAQrG,EAAMoe,MAAQ/X,EA/BN,KAgCZrG,EAAQ6qB,EAAgBhD,OAAOxhB,GAC/BykB,EAAsBzc,KAAKrO,EAAMG,OACjCkG,GAvCY,GAyChB,MAAO,CACHof,WAAO9kB,EACPwB,UAAW2oB,EACXhpB,SAAUuE,EA5CE,GA6CZtE,KAAM,SAEd,CAyC0CgpB,CAAqB5oB,EAAWoY,GAKrC,KAJzBpY,EAAYyoB,EAAsBzoB,WAIpBxC,SACVwC,EAAU,GAAKA,EAAU,IAE7BL,EAAW8oB,EAAsB9oB,SACjC2jB,EAAQmF,EAAsBnF,MAC9B1jB,EAAO6oB,EAAsB7oB,KAC7BN,EAAO,WACX,CACA,MAAM2oB,EAAYN,GAAoBza,EAAYsb,MAAMlqB,QAAS2O,EAAMjN,EAAW,IAAKoN,KAAKgL,QAASzY,WAAU2jB,QAAO1jB,SAyBtH,OAtBAqoB,EAAUtD,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAYvX,KAAKqL,gBAChFrL,KAAKyb,iBACLb,GAAeC,EAAW7a,KAAKyb,iBAC/Bzb,KAAKyb,qBAAkBrqB,GAWvBypB,EAAUE,SAAW,KACjB,MAAM,WAAEnb,GAAeI,KAAKgL,QAC5BlL,EAAYrQ,IAAI4D,EAAiBT,EAAWoN,KAAKgL,QAAS1X,IAC1DsM,GAAcA,IACdI,KAAK3K,SACL2K,KAAK0L,wBAAwB,EAG9B,CACHmP,YACAtoB,WACA2jB,QACAhkB,OACAM,OACAI,UAAWA,EAEnB,CACA,YAAIL,GACA,MAAM,SAAE4H,GAAa6F,KACrB,IAAK7F,EACD,OAAO,EACX,MAAM,SAAE5H,GAAa4H,EACrB,OAAOpI,EAAsBQ,EACjC,CACA,QAAI0X,GACA,MAAM,SAAE9P,GAAa6F,KACrB,IAAK7F,EACD,OAAO,EACX,MAAM,UAAE0gB,GAAc1gB,EACtB,OAAOpI,EAAsB8oB,EAAUzD,aAAe,EAC1D,CACA,QAAInN,CAAKC,GACL,MAAM,SAAE/P,GAAa6F,KACrB,IAAK7F,EACD,OACJ,MAAM,UAAE0gB,GAAc1gB,EACtB0gB,EAAUzD,YAAcvlB,EAAsBqY,EAClD,CACA,SAAIqO,GACA,MAAM,SAAEpe,GAAa6F,KACrB,IAAK7F,EACD,OAAO,EACX,MAAM,UAAE0gB,GAAc1gB,EACtB,OAAO0gB,EAAUa,YACrB,CACA,SAAInD,CAAMW,GACN,MAAM,SAAE/e,GAAa6F,KACrB,IAAK7F,EACD,OACJ,MAAM,UAAE0gB,GAAc1gB,EACtB0gB,EAAUa,aAAexC,CAC7B,CACA,SAAIzoB,GACA,MAAM,SAAE0J,GAAa6F,KACrB,IAAK7F,EACD,MAAO,OACX,MAAM,UAAE0gB,GAAc1gB,EACtB,OAAO0gB,EAAUc,SACrB,CACA,aAAIpE,GACA,MAAM,SAAEpd,GAAa6F,KACrB,IAAK7F,EACD,OAAO,KACX,MAAM,UAAE0gB,GAAc1gB,EAGtB,OAAO0gB,EAAUtD,SACrB,CAKAqD,cAAAA,CAAeE,GACX,GAAK9a,KAAKuL,UAGL,CACD,MAAM,SAAEpR,GAAa6F,KACrB,IAAK7F,EACD,OAAOvD,EAAAA,EACX,MAAM,UAAEikB,GAAc1gB,EACtBygB,GAAeC,EAAWC,EAC9B,MARI9a,KAAKyb,gBAAkBX,EAS3B,OAAOlkB,EAAAA,CACX,CACAuhB,IAAAA,GACI,GAAInY,KAAKiL,UACL,OACJ,MAAM,SAAE9Q,GAAa6F,KACrB,IAAK7F,EACD,OACJ,MAAM,UAAE0gB,GAAc1gB,EACM,aAAxB0gB,EAAUc,WACV3b,KAAKoL,wBAETyP,EAAU1C,MACd,CACAC,KAAAA,GACI,MAAM,SAAEje,GAAa6F,KACrB,IAAK7F,EACD,OACJ,MAAM,UAAE0gB,GAAc1gB,EACtB0gB,EAAUzC,OACd,CACAxB,IAAAA,GAGI,GAFA5W,KAAKzB,SAASlJ,SACd2K,KAAKiL,WAAY,EACE,SAAfjL,KAAKvP,MACL,OACJuP,KAAK0L,yBACL1L,KAAKoL,wBACL,MAAM,SAAEjR,GAAa6F,KACrB,IAAK7F,EACD,OACJ,MAAM,UAAE0gB,EAAS,UAAEjoB,EAAS,SAAEL,EAAQ,KAAEL,EAAI,KAAEM,EAAI,MAAE0jB,GAAU/b,EAC9D,GAA4B,SAAxB0gB,EAAUc,WACc,aAAxBd,EAAUc,UACV,OAUJ,GAAI3b,KAAKiK,KAAM,CACX,MAAM,YAAEnK,EAAW,SAAE2L,EAAQ,WAAE7L,EAAU,QAAElG,KAAYsR,GAAYhL,KAAKgL,QAClEsQ,EAAkB,IAAIrE,GAAoB,IACzCjM,EACHpY,YACAL,WACAL,OACAM,OACA0jB,QACAnM,aAAa,IAEX6R,EAAa/pB,EAAsBmO,KAAKiK,MAC9CnK,EAAY+b,gBAAgBP,EAAgBhD,OAAOsD,EAjQ3C,IAiQqEhrB,MAAO0qB,EAAgBhD,OAAOsD,GAAYhrB,MAjQ/G,GAkQZ,CACA,MAAM,OAAE6mB,GAAWzX,KAAKgL,QACxByM,GAAUA,IACVzX,KAAK3K,QACT,CACAiK,QAAAA,GACI,MAAM,SAAEnF,GAAa6F,KAChB7F,GAELA,EAAS0gB,UAAU7B,QACvB,CACA3jB,MAAAA,GACI,MAAM,SAAE8E,GAAa6F,KAChB7F,GAELA,EAAS0gB,UAAUxlB,QACvB,CACA,eAAOymB,CAAS9Q,GACZ,MAAM,YAAElL,EAAW,KAAED,EAAI,YAAEkL,EAAW,WAAEvX,EAAU,QAAEpB,EAAO,KAAEF,GAAS8Y,EACtE,OAAQgQ,MACJnb,GACAyZ,GAAkB9pB,IAAIqQ,IACtBC,GACAA,EAAYsb,OACZtb,EAAYsb,MAAMlqB,mBAAmB6qB,cAKpCjc,EAAYsb,MAAM7pB,WAAWka,WAC7BV,GACc,WAAfvX,GACY,IAAZpB,GACS,YAATF,CACR,ECxTJ,MAAM8pB,GAAyBzC,IAAK,SAAgCnoB,IAA1BgJ,OAAO6hB,iBCAjD,MAAMC,GACFxc,WAAAA,CAAYyc,GAERnc,KAAK4W,KAAO,IAAM5W,KAAKoc,OAAO,QAC9Bpc,KAAKmc,WAAaA,EAAWzoB,OAAOqN,QACxC,CACA+K,IAAAA,CAAKuQ,EAAWC,GACZ,OAAOnQ,QAAQoQ,IAAIvc,KAAKmc,YAAYrQ,KAAKuQ,GAAWG,MAAMF,EAC9D,CAIAG,MAAAA,CAAOC,GACH,OAAO1c,KAAKmc,WAAW,GAAGO,EAC9B,CACAC,MAAAA,CAAOD,EAAUE,GACb,IAAK,IAAIvsB,EAAI,EAAGA,EAAI2P,KAAKmc,WAAW/rB,OAAQC,IACxC2P,KAAKmc,WAAW9rB,GAAGqsB,GAAYE,CAEvC,CACAhC,cAAAA,CAAeE,EAAUjhB,GACrB,MAAMgjB,EAAgB7c,KAAKmc,WAAWzd,KAAKmc,GACnCmB,MAA4BnB,EAAUD,eAC/BC,EAAUD,eAAeE,GAGzBjhB,EAASghB,KAGxB,MAAO,KACHgC,EAAclsB,SAAQ,CAAC0E,EAAQhF,KAC3BgF,GAAUA,IACV2K,KAAKmc,WAAW9rB,GAAGumB,MAAM,GAC3B,CAEV,CACA,QAAI3M,GACA,OAAOjK,KAAKyc,OAAO,OACvB,CACA,QAAIxS,CAAKA,GACLjK,KAAK2c,OAAO,OAAQ1S,EACxB,CACA,SAAIsO,GACA,OAAOvY,KAAKyc,OAAO,QACvB,CACA,SAAIlE,CAAMA,GACNvY,KAAK2c,OAAO,QAASpE,EACzB,CACA,aAAIhB,GACA,OAAOvX,KAAKyc,OAAO,YACvB,CACA,YAAIlqB,GACA,IAAI6D,EAAM,EACV,IAAK,IAAI/F,EAAI,EAAGA,EAAI2P,KAAKmc,WAAW/rB,OAAQC,IACxC+F,EAAMtD,KAAKsD,IAAIA,EAAK4J,KAAKmc,WAAW9rB,GAAGkC,UAE3C,OAAO6D,CACX,CACAgmB,MAAAA,CAAOU,GACH9c,KAAKmc,WAAWxrB,SAASosB,GAAaA,EAASD,MACnD,CACA5Q,OAAAA,GACIlM,KAAKoc,OAAO,UAChB,CACAjE,IAAAA,GACInY,KAAKoc,OAAO,OAChB,CACAhE,KAAAA,GACIpY,KAAKoc,OAAO,QAChB,CACA/mB,MAAAA,GACI2K,KAAKoc,OAAO,SAChB,CACA9c,QAAAA,GACIU,KAAKoc,OAAO,WAChB,ECjEJ,MAAMY,GAAqB,SAACnd,EAAMjP,EAAOoY,GAAM,IAAE/V,EAAU7D,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsK,EAAOtK,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAAE6rB,EAAS7tB,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAAA,OAAMwO,IACtF,MAAMsd,EAAkBlqB,EAAmBC,EAAY4M,IAAS,CAAC,EAM3DiL,EAAQoS,EAAgBpS,OAAS7X,EAAW6X,OAAS,EAK3D,IAAI,QAAE4N,EAAU,GAAMzlB,EACtBylB,GAAoB7mB,EAAsBiZ,GAC1C,IAAIE,EAAU,CACVpY,UAAW9C,MAAMC,QAAQiZ,GAAUA,EAAS,CAAC,KAAMA,GACnDxW,KAAM,UACNrB,SAAUP,EAAMC,iBACbqsB,EACHpS,OAAQ4N,EACRjN,SAAW9b,IACPiB,EAAMnB,IAAIE,GACVutB,EAAgBzR,UAAYyR,EAAgBzR,SAAS9b,EAAE,EAE3DiQ,WAAYA,KACRA,IACAsd,EAAgBtd,YAAcsd,EAAgBtd,YAAY,EAE9DC,OACAC,YAAalP,EACb8I,QAASujB,OAAY7rB,EAAYsI,ICrCzC,SAA4B/G,GAA2I,IAA1I,KAAEwqB,EAAMrS,MAAOsS,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEhqB,EAAM,WAAEC,EAAU,YAAEuX,EAAW,KAAEzM,EAAI,QAAEoa,KAAYzlB,GAAYN,EACjK,QAASsO,OAAOiO,KAAKjc,GAAY7C,MACrC,EDyCSotB,CAAoBN,KACrBlS,EAAU,IACHA,KACAvY,EAAqBoN,EAAMmL,KAQlCA,EAAQzY,WACRyY,EAAQzY,SAAWV,EAAsBmZ,EAAQzY,WAEjDyY,EAAQD,cACRC,EAAQD,YAAclZ,EAAsBmZ,EAAQD,mBAEnC3Z,IAAjB4Z,EAAQ1M,OACR0M,EAAQpY,UAAU,GAAKoY,EAAQ1M,MAEnC,IAAImf,GAAa,EAmBjB,KAlBqB,IAAjBzS,EAAQ9Y,MACc,IAArB8Y,EAAQzY,WAAmByY,EAAQD,eACpCC,EAAQzY,SAAW,EACG,IAAlByY,EAAQF,QACR2S,GAAa,KAGjBtqB,GACAD,KACAuqB,GAAa,EACbzS,EAAQzY,SAAW,EACnByY,EAAQF,MAAQ,GAOhB2S,IAAeR,QAA6B7rB,IAAhBR,EAAMvB,MAAqB,CACvD,MAAMiE,EAAgBD,EAAiB2X,EAAQpY,UAAWsqB,GAC1D,QAAsB9rB,IAAlBkC,EAOA,OANAkD,EAAMX,QAAO,KACTmV,EAAQS,SAASnY,GACjB0X,EAAQpL,YAAY,IAIjB,IAAIsc,GAAsB,GAEzC,CAMA,OAAKe,GAAa9B,GAAqBW,SAAS9Q,GACrC,IAAImQ,GAAqBnQ,GAGzB,IAAIiM,GAAoBjM,EACnC,CACH,EE9GD,SAAS0S,GAAc9H,EAAK+H,IACG,IAAvB/H,EAAIgI,QAAQD,IACZ/H,EAAI9W,KAAK6e,EACjB,CACA,SAASE,GAAWjI,EAAK+H,GACrB,MAAMhqB,EAAQiiB,EAAIgI,QAAQD,GACtBhqB,GAAS,GACTiiB,EAAIa,OAAO9iB,EAAO,EAC1B,CCNA,MAAMmqB,GACFpe,WAAAA,GACIM,KAAK6c,cAAgB,EACzB,CACAznB,GAAAA,CAAI2oB,GAEA,OADAL,GAAc1d,KAAK6c,cAAekB,GAC3B,IAAMF,GAAW7d,KAAK6c,cAAekB,EAChD,CACAC,MAAAA,CAAOvc,EAAGC,EAAGC,GACT,MAAMsc,EAAmBje,KAAK6c,cAAczsB,OAC5C,GAAK6tB,EAEL,GAAyB,IAArBA,EAIAje,KAAK6c,cAAc,GAAGpb,EAAGC,EAAGC,QAG5B,IAAK,IAAItR,EAAI,EAAGA,EAAI4tB,EAAkB5tB,IAAK,CAKvC,MAAM0tB,EAAU/d,KAAK6c,cAAcxsB,GACnC0tB,GAAWA,EAAQtc,EAAGC,EAAGC,EAC7B,CAER,CACAuc,OAAAA,GACI,OAAOle,KAAK6c,cAAczsB,MAC9B,CACAqF,KAAAA,GACIuK,KAAK6c,cAAczsB,OAAS,CAChC,EC1BJ,MAIM+tB,GAAsB,CACxBjtB,aAASE,GAOb,MAAMgtB,GASF1e,WAAAA,CAAY2e,GAAoB,IAAAC,EAAA,SAAdtT,EAAO5b,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKzB4Q,KAAKue,QAAU,UAQfve,KAAKwe,iBAAmB,KAIxBxe,KAAKye,OAAS,CAAC,EACfze,KAAK0e,gBAAkB,SAAC/uB,GAAqB,IAAlBoG,IAAM3G,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAC7B,MAAMgoB,EAAcnN,GAAK9T,MAMrBmoB,EAAKK,YAAcvH,GACnBkH,EAAKM,oBAETN,EAAKpuB,KAAOouB,EAAKptB,QACjBotB,EAAKO,WAAWlvB,GAEZ2uB,EAAKptB,UAAYotB,EAAKpuB,MAAQouB,EAAKG,OAAOK,QAC1CR,EAAKG,OAAOK,OAAOd,OAAOM,EAAKptB,SAG/B6E,GAAUuoB,EAAKG,OAAOM,eACtBT,EAAKG,OAAOM,cAAcf,OAAOM,EAAKptB,QAE9C,EACA8O,KAAKgf,aAAc,EACnBhf,KAAK6e,WAAWR,GAChBre,KAAKob,MAAQpQ,EAAQoQ,KACzB,CACAyD,UAAAA,CAAW3tB,GA/DEN,MAgEToP,KAAK9O,QAAUA,EACf8O,KAAK2e,UAAY1U,GAAK9T,MACQ,OAA1B6J,KAAKwe,uBAAyCptB,IAAZF,IAClC8O,KAAKwe,kBAnEA5tB,EAmE2BoP,KAAK9O,SAlErC+S,MAAMzJ,WAAW5J,KAoEzB,CACAguB,iBAAAA,GAAiD,IAA/BK,EAAc7vB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG4Q,KAAK9O,QACpC8O,KAAKif,eAAiBA,EACtBjf,KAAKkf,cAAgBlf,KAAK2e,SAC9B,CAyCAQ,QAAAA,CAASC,GAIL,OAAOpf,KAAKqf,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGC,EAAWtqB,GACLgL,KAAKye,OAAOa,KACbtf,KAAKye,OAAOa,GAAa,IAAIxB,IAEjC,MAAMyB,EAAcvf,KAAKye,OAAOa,GAAWlqB,IAAIJ,GAC/C,MAAkB,WAAdsqB,EACO,KACHC,IAKA/oB,EAAMb,MAAK,KACFqK,KAAKye,OAAOK,OAAOZ,WACpBle,KAAK4W,MACT,GACF,EAGH2I,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiBzf,KAAKye,OAC7Bze,KAAKye,OAAOgB,GAAehqB,OAEnC,CAMAiqB,MAAAA,CAAOC,EAAeC,GAClB5f,KAAK2f,cAAgBA,EACrB3f,KAAK4f,kBAAoBA,CAC7B,CAgBAnwB,GAAAA,CAAIE,GAAkB,IAAfoG,IAAM3G,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GACJ2G,GAAWiK,KAAK2f,cAIjB3f,KAAK2f,cAAchwB,EAAGqQ,KAAK0e,iBAH3B1e,KAAK0e,gBAAgB/uB,EAAGoG,EAKhC,CACA8lB,eAAAA,CAAgB3rB,EAAMgB,EAASgD,GAC3B8L,KAAKvQ,IAAIyB,GACT8O,KAAK9P,UAAOkB,EACZ4O,KAAKif,eAAiB/uB,EACtB8P,KAAKkf,cAAgBlf,KAAK2e,UAAYzqB,CAC1C,CAKAyV,IAAAA,CAAKha,GAAwB,IAArBkwB,IAAYzwB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAChB4Q,KAAK0e,gBAAgB/uB,GACrBqQ,KAAK9P,KAAOP,EACZqQ,KAAKkf,cAAgBlf,KAAKif,oBAAiB7tB,EAC3CyuB,GAAgB7f,KAAK4W,OACjB5W,KAAK4f,mBACL5f,KAAK4f,mBACb,CAQAvwB,GAAAA,GAII,OAHI8uB,GAAoBjtB,SACpBitB,GAAoBjtB,QAAQ4N,KAAKkB,MAE9BA,KAAK9O,OAChB,CAIA4uB,WAAAA,GACI,OAAO9f,KAAK9P,IAChB,CAQAW,WAAAA,GACI,MAAMumB,EAAcnN,GAAK9T,MACzB,IAAK6J,KAAKwe,uBACkBptB,IAAxB4O,KAAKif,gBACL7H,EAAcpX,KAAK2e,UAnOJ,GAoOf,OAAO,EAEX,MAAMzqB,EAAQpB,KAAKuD,IAAI2J,KAAK2e,UAAY3e,KAAKkf,cAtO1B,IAwOnB,OAAOvS,GAAkBnS,WAAWwF,KAAK9O,SACrCsJ,WAAWwF,KAAKif,gBAAiB/qB,EACzC,CAaAtE,KAAAA,CAAMmwB,GAEF,OADA/f,KAAK4W,OACE,IAAIzK,SAASJ,IAChB/L,KAAKgf,aAAc,EACnBhf,KAAK6a,UAAYkF,EAAehU,GAC5B/L,KAAKye,OAAOuB,gBACZhgB,KAAKye,OAAOuB,eAAehC,QAC/B,IACDlS,MAAK,KACA9L,KAAKye,OAAOwB,mBACZjgB,KAAKye,OAAOwB,kBAAkBjC,SAElChe,KAAKkgB,gBAAgB,GAE7B,CAMAtJ,IAAAA,GACQ5W,KAAK6a,YACL7a,KAAK6a,UAAUjE,OACX5W,KAAKye,OAAO0B,iBACZngB,KAAKye,OAAO0B,gBAAgBnC,UAGpChe,KAAKkgB,gBACT,CAMAE,WAAAA,GACI,QAASpgB,KAAK6a,SAClB,CACAqF,cAAAA,UACWlgB,KAAK6a,SAChB,CAUAwF,OAAAA,GACIrgB,KAAKwf,iBACLxf,KAAK4W,OACD5W,KAAK4f,mBACL5f,KAAK4f,mBAEb,EAEJ,SAAS9f,GAAYue,EAAMrT,GACvB,OAAO,IAAIoT,GAAYC,EAAMrT,EACjC,CCpTA,SAASsV,GAAe9vB,EAAejB,EAAKqB,GACpCJ,EAAc+vB,SAAShxB,GACvBiB,EAAcqO,SAAStP,GAAKE,IAAImB,GAGhCJ,EAAcgwB,SAASjxB,EAAKuQ,GAAYlP,GAEhD,CCZA,MAAM6vB,GAAeC,GAAQA,EAAInd,QAAQ,mBAAoB,SAASod,cCAhEC,GAA+B,QAAUH,GADjB,kBCA9B,SAASI,GAAqBrwB,GAC1B,OAAOA,EAAcO,MAAM6vB,GAC/B,CCJA,MAAME,GAAiBlwB,GAAUmQ,QAAQnQ,GAASA,EAAMC,aCExD,SAASkwB,GAAqBvwB,EAAejB,GACzC,MAAMyxB,EAAaxwB,EAAcqO,SAAS,cAK1C,GCN6BjO,EDMDowB,ECLrBjgB,QAAQ+f,GAAclwB,IAAUA,EAAMwE,KDMzC,OAAO4rB,EAAW5rB,IAAI7F,GCP9B,IAAiCqB,CDSjC,CEGA,SAASqwB,GAAoBtuB,EAAoCpD,GAAK,IAAxC,cAAE2xB,EAAa,eAAEC,GAAgBxuB,EAC3D,MAAMyuB,EAAcF,EAAc/f,eAAe5R,KAAgC,IAAxB4xB,EAAe5xB,GAExE,OADA4xB,EAAe5xB,IAAO,EACf6xB,CACX,CACA,SAASC,GAAc7wB,EAAe8wB,GAAmE,IAA9C,MAAExW,EAAQ,EAAC,mBAAEyW,EAAkB,KAAErvB,GAAM9C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClG,IAAI8P,EACJ,IAAI,WAAEjM,EAAazC,EAAciC,uBAAsB,cAAE+uB,KAAkBxY,GAAWsY,EAClFC,IACAtuB,EAAasuB,GACjB,MAAMpF,EAAa,GACbsF,EAAqBvvB,GACvB1B,EAAckxB,gBACdlxB,EAAckxB,eAAeC,WAAWzvB,GAC5C,IAAK,MAAM3C,KAAOyZ,EAAQ,CACtB,MAAMpY,EAAQJ,EAAcqO,SAAStP,EAAgD,QAA1C2P,EAAK1O,EAAcoxB,aAAaryB,UAAyB,IAAP2P,EAAgBA,EAAK,MAC5G2iB,EAAc7Y,EAAOzZ,GAC3B,QAAoB6B,IAAhBywB,GACCJ,GACGR,GAAqBQ,EAAoBlyB,GAC7C,SAEJ,MAAM2tB,EAAkB,CACpBpS,WACG9X,EAAmBC,GAAc,CAAC,EAAG1D,IAM5C,IAAI0tB,GAAY,EAChB,GAAI7iB,OAAO0nB,uBAAwB,CAC/B,MAAMC,EAAWlB,GAAqBrwB,GACtC,GAAIuxB,EAAU,CACV,MAAMxK,EAAYnd,OAAO0nB,uBAAuBC,EAAUxyB,EAAKiH,GAC7C,OAAd+gB,IACA2F,EAAgB3F,UAAYA,EAC5B0F,GAAY,EAEpB,CACJ,CACA8D,GAAqBvwB,EAAejB,GACpCqB,EAAMhB,MAAMotB,GAAmBztB,EAAKqB,EAAOixB,EAAarxB,EAAcwxB,oBAAsBrwB,EAAenC,IAAID,GACzG,CAAE2C,MAAM,GACRgrB,EAAiB1sB,EAAeysB,IACtC,MAAMpC,EAAYjqB,EAAMiqB,UACpBA,GACAsB,EAAWrd,KAAK+b,EAExB,CAQA,OAPI2G,GACArV,QAAQoQ,IAAIJ,GAAYrQ,MAAK,KACzBtV,EAAMX,QAAO,KACT2rB,GPnDhB,SAAmBhxB,EAAeQ,GAC9B,MAAMmJ,EAAW7I,EAAed,EAAeQ,GAC/C,IAAI,cAAEwwB,EAAgB,CAAC,EAAC,WAAEvuB,EAAa,CAAC,KAAM+V,GAAW7O,GAAY,CAAC,EACtE6O,EAAS,IAAKA,KAAWwY,GACzB,IAAK,MAAMjyB,KAAOyZ,EAEdsX,GAAe9vB,EAAejB,GQjBAI,ERgBaqZ,EAAOzZ,GQd/CM,EAAkBF,GAAKA,EAAEA,EAAES,OAAS,IAAM,EAAIT,IAFnBA,KRmBtC,CO2CiCsyB,CAAUzxB,EAAegxB,EAAc,GAC1D,IAGHrF,CACX,CErEA,SAAS+F,GAAe1xB,EAAe2xB,GAAuB,IAAdnX,EAAO5b,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,IAAI8P,EACJ,MAAM/E,EAAW7I,EAAed,EAAe2xB,EAA0B,SAAjBnX,EAAQ9Y,KACjB,QAAxCgN,EAAK1O,EAAc4xB,uBAAoC,IAAPljB,OAAgB,EAASA,EAAGjO,YAC7EG,GACN,IAAI,WAAE6B,EAAazC,EAAciC,wBAA0B,CAAC,GAAM0H,GAAY,CAAC,EAC3E6Q,EAAQuW,qBACRtuB,EAAa+X,EAAQuW,oBAMzB,MAAMc,EAAeloB,EACf,IAAMgS,QAAQoQ,IAAI8E,GAAc7wB,EAAe2J,EAAU6Q,IACzD,IAAMmB,QAAQJ,UAKduW,EAAqB9xB,EAAc+xB,iBAAmB/xB,EAAc+xB,gBAAgB9a,KACpF,WAAsB,IAArB+a,EAAYpzB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEiuB,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBtqB,EAClE,OAkBZ,SAAyBzC,EAAe2xB,GAAgF,IAAvE9E,EAAajuB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGkuB,EAAeluB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGmuB,EAAgBnuB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAG4b,EAAO5b,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAClH,MAAM+qB,EAAa,GACbsG,GAAsBjyB,EAAc+xB,gBAAgB9a,KAAO,GAAK6V,EAChEoF,EAA+C,IAArBnF,EAC1B,WAAM,OAAJnuB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAAUkuB,CAAe,EAC9B,WAAM,OAAKmF,GAATrzB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAA+BkuB,CAAe,EAUzD,OATAxtB,MAAMwO,KAAK9N,EAAc+xB,iBACpBI,KAAKC,IACLjyB,SAAQ,CAACkyB,EAAOxyB,KACjBwyB,EAAM7E,OAAO,iBAAkBmE,GAC/BhG,EAAWrd,KAAKojB,GAAeW,EAAOV,EAAS,IACxCnX,EACHF,MAAOuS,EAAgBqF,EAAwBryB,KAChDyb,MAAK,IAAM+W,EAAM7E,OAAO,oBAAqBmE,KAAU,IAEvDhW,QAAQoQ,IAAIJ,EACvB,CAlCmB2G,CAAgBtyB,EAAe2xB,EAAS9E,EAAgBmF,EAAclF,EAAiBC,EAAkBvS,EACpH,EACE,IAAMmB,QAAQJ,WAKd,KAAEoR,GAASlqB,EACjB,GAAIkqB,EAAM,CACN,MAAO4F,EAAOC,GAAiB,mBAAT7F,EAChB,CAACkF,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOU,IAAQjX,MAAK,IAAMkX,KAC9B,CAEI,OAAO7W,QAAQoQ,IAAI,CAAC8F,IAAgBC,EAAmBtX,EAAQF,QAEvE,CAkBA,SAAS8X,GAAgBnhB,EAAGC,GACxB,OAAOD,EAAEwhB,iBAAiBvhB,EAC9B,CC5DA,MAAMwhB,GAAkBzxB,EAAarB,OACrC,SAAS+yB,GAAkB3yB,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAc4yB,sBAAuB,CACtC,MAAMC,EAAU7yB,EAAc8yB,QACxBH,GAAkB3yB,EAAc8yB,SAChC,CAAC,EAIP,YAHoClyB,IAAhCZ,EAAcO,MAAMwyB,UACpBF,EAAQE,QAAU/yB,EAAcO,MAAMwyB,SAEnCF,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIhzB,EAAI,EAAGA,EAAI6yB,GAAiB7yB,IAAK,CACtC,MAAMwP,EAAOpO,EAAapB,GACpBmzB,EAAOhzB,EAAcO,MAAM8O,IAC7BvP,EAAekzB,KAAkB,IAATA,KACxBH,EAAQxjB,GAAQ2jB,EAExB,CACA,OAAOH,CACX,CChBA,MAAMI,GAAuB,IAAIjyB,GAAsB0jB,UACjDwO,GAAoBlyB,EAAqBpB,OAC/C,SAASuzB,GAAYnzB,GACjB,OAAQ2rB,GAAehQ,QAAQoQ,IAAIJ,EAAWzd,KAAI/L,IAAA,IAAC,UAAEkoB,EAAS,QAAE7P,GAASrY,EAAA,OCR7E,SAA8BnC,EAAeQ,GAA0B,IAE/D6pB,EAFiD7P,EAAO5b,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAoB,EAAcwtB,OAAO,iBAAkBhtB,GAEnClB,MAAMC,QAAQiB,GAAa,CAC3B,MAAMmrB,EAAanrB,EAAW0N,KAAKyjB,GAAYD,GAAe1xB,EAAe2xB,EAASnX,KACtF6P,EAAY1O,QAAQoQ,IAAIJ,EAC5B,MACK,GAA0B,kBAAfnrB,EACZ6pB,EAAYqH,GAAe1xB,EAAeQ,EAAYga,OAErD,CACD,MAAM4Y,EAA2C,oBAAf5yB,EAC5BM,EAAed,EAAeQ,EAAYga,EAAQ/Z,QAClDD,EACN6pB,EAAY1O,QAAQoQ,IAAI8E,GAAc7wB,EAAeozB,EAAoB5Y,GAC7E,CACA,OAAO6P,EAAU/O,MAAK,KAClBtb,EAAcwtB,OAAO,oBAAqBhtB,EAAW,GAE7D,CDXkF6yB,CAAqBrzB,EAAeqqB,EAAW7P,EAAQ,IACzI,CACA,SAAS8Y,GAAqBtzB,GAC1B,IAAIwpB,EAAU2J,GAAYnzB,GACtBC,EAAQszB,KACRC,GAAkB,EAKtB,MAAMC,EAA2B/xB,GAAS,CAACsC,EAAKxD,KAC5C,IAAIkO,EACJ,MAAM/E,EAAW7I,EAAed,EAAeQ,EAAqB,SAATkB,EACZ,QAAxCgN,EAAK1O,EAAc4xB,uBAAoC,IAAPljB,OAAgB,EAASA,EAAGjO,YAC7EG,GACN,GAAI+I,EAAU,CACV,MAAM,WAAElH,EAAU,cAAEuuB,KAAkBxY,GAAW7O,EACjD3F,EAAM,IAAKA,KAAQwU,KAAWwY,EAClC,CACA,OAAOhtB,CAAG,EAmBd,SAAS0vB,EAAeC,GACpB,MAAM,MAAEpzB,GAAUP,EACZ6yB,EAAUF,GAAkB3yB,EAAc8yB,SAAW,CAAC,EAKtDnH,EAAa,GAKbiI,EAAc,IAAIxyB,IAMxB,IAAIyyB,EAAkB,CAAC,EAKnBC,EAAsBxV,IAO1B,IAAK,IAAIze,EAAI,EAAGA,EAAIqzB,GAAmBrzB,IAAK,CACxC,MAAM6B,EAAOuxB,GAAqBpzB,GAC5Bk0B,EAAY9zB,EAAMyB,GAClBsxB,OAAuBpyB,IAAhBL,EAAMmB,GACbnB,EAAMmB,GACNmxB,EAAQnxB,GACRsyB,EAAgBl0B,EAAekzB,GAK/BiB,EAAcvyB,IAASiyB,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsBj0B,GAO1B,IAAIs0B,EAAcnB,IAASH,EAAQnxB,IAC/BsxB,IAASzyB,EAAMmB,IACfsyB,EAeJ,GAXIG,GACAX,GACAxzB,EAAco0B,yBACdD,GAAc,GAMlBJ,EAAUrD,cAAgB,IAAKmD,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElBjB,IAASe,EAAUM,UAErBn1B,EAAoB8zB,IACJ,mBAATA,EACP,SAOJ,MAAMsB,EAAmBC,GAAuBR,EAAUM,SAAUrB,GACpE,IAAIwB,EAAoBF,GAEnB5yB,IAASiyB,GACNI,EAAUG,WACTC,GACDH,GAEHn0B,EAAIi0B,GAAuBE,EAC5BS,GAAuB,EAK3B,MAAMC,EAAiBp1B,MAAMC,QAAQyzB,GAAQA,EAAO,CAACA,GAKrD,IAAI2B,EAAiBD,EAAe3wB,OAAO0vB,EAAwB/xB,GAAO,CAAC,IACvD,IAAhBuyB,IACAU,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMb,EAC9Bc,EAAU,IACTD,KACAD,GAEDG,EAAiB/1B,IACnBy1B,GAAoB,EAChBZ,EAAY50B,IAAID,KAChB01B,GAAuB,EACvBb,EAAY9uB,OAAO/F,IAEvBg1B,EAAUpD,eAAe5xB,IAAO,EAChC,MAAMuQ,EAActP,EAAcqO,SAAStP,GACvCuQ,IACAA,EAAYylB,WAAY,EAAK,EAErC,IAAK,MAAMh2B,KAAO81B,EAAS,CACvB,MAAMp1B,EAAOk1B,EAAe51B,GACtBW,EAAOk1B,EAAmB71B,GAEhC,GAAI80B,EAAgBljB,eAAe5R,GAC/B,SAIJ,IAAIi2B,GAAkB,EAElBA,EADA31B,EAAkBI,IAASJ,EAAkBK,IAC1BF,EAAeC,EAAMC,GAGtBD,IAASC,EAE3Bs1B,OACap0B,IAATnB,GAA+B,OAATA,EAEtBq1B,EAAc/1B,GAId60B,EAAYhvB,IAAI7F,QAGN6B,IAATnB,GAAsBm0B,EAAY50B,IAAID,GAK3C+1B,EAAc/1B,GAOdg1B,EAAUrD,cAAc3xB,IAAO,CAEvC,CAKAg1B,EAAUM,SAAWrB,EACrBe,EAAUa,mBAAqBD,EAI3BZ,EAAUG,WACVL,EAAkB,IAAKA,KAAoBc,IAE3CnB,GAAmBxzB,EAAci1B,wBACjCT,GAAoB,GAQpBA,MAFyBL,GAAeG,IACIG,IAE5C9I,EAAWrd,QAAQomB,EAAexmB,KAAKmc,IAAS,CAC5CA,UAAWA,EACX7P,QAAS,CAAE9Y,YAGvB,CAMA,GAAIkyB,EAAY3c,KAAM,CAClB,MAAMie,EAAoB,CAAC,EAC3BtB,EAAYzzB,SAASpB,IACjB,MAAMo2B,EAAiBn1B,EAAco1B,cAAcr2B,GAC7CuQ,EAActP,EAAcqO,SAAStP,GACvCuQ,IACAA,EAAYylB,WAAY,GAE5BG,EAAkBn2B,GAA0B,OAAnBo2B,QAA8C,IAAnBA,EAA4BA,EAAiB,IAAI,IAEzGxJ,EAAWrd,KAAK,CAAE+b,UAAW6K,GACjC,CACA,IAAIG,EAAgB9kB,QAAQob,EAAW/rB,QAOvC,OANI4zB,IACmB,IAAlBjzB,EAAMwyB,SAAqBxyB,EAAMwyB,UAAYxyB,EAAMipB,SACnDxpB,EAAco0B,yBACfiB,GAAgB,GAEpB7B,GAAkB,EACX6B,EAAgB7L,EAAQmC,GAAchQ,QAAQJ,SACzD,CAkBA,MAAO,CACHmY,iBACA4B,UAhBJ,SAAmB5zB,EAAMwyB,GACrB,IAAIxlB,EAEJ,GAAIzO,EAAMyB,GAAMwyB,WAAaA,EACzB,OAAOvY,QAAQJ,UAEsB,QAAxC7M,EAAK1O,EAAc+xB,uBAAoC,IAAPrjB,GAAyBA,EAAGvO,SAASkyB,IAAY,IAAI3jB,EAAI,OAAuC,QAA/BA,EAAK2jB,EAAMnB,sBAAmC,IAAPxiB,OAAgB,EAASA,EAAG4mB,UAAU5zB,EAAMwyB,EAAS,IAC9Mj0B,EAAMyB,GAAMwyB,SAAWA,EACvB,MAAMvI,EAAa+H,EAAehyB,GAClC,IAAK,MAAM3C,KAAOkB,EACdA,EAAMlB,GAAK2xB,cAAgB,CAAC,EAEhC,OAAO/E,CACX,EAII4J,mBAjQJ,SAA4BC,GACxBhM,EAAUgM,EAAax1B,EAC3B,EAgQImxB,SAAUA,IAAMlxB,EAChBw1B,MAAOA,KACHx1B,EAAQszB,KACRC,GAAkB,CAAI,EAGlC,CACA,SAASe,GAAuB70B,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEXJ,MAAMC,QAAQE,KACXD,EAAeC,EAAMC,EAGrC,CACA,SAASg2B,KACL,MAAO,CACHxB,SAFyBt1B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAGzB8xB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBiE,mBAAoB,CAAC,EAE7B,CACA,SAASrB,KACL,MAAO,CACH/J,QAASkM,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZG,SAAUH,KACVI,UAAWJ,KACXK,WAAYL,KACZM,KAAMN,KAEd,CEzUA,MAAMO,GACF/mB,WAAAA,CAAYgnB,GACR1mB,KAAK2mB,WAAY,EACjB3mB,KAAK0mB,KAAOA,CAChB,CACA7wB,MAAAA,GAAW,ECHf,IAAI+wB,GAAK,ECCT,MAAMzK,GAAa,CACftB,UAAW,CACP4L,QCDR,cAA+BA,GAM3B/mB,WAAAA,CAAYgnB,GACR9d,MAAM8d,GACNA,EAAKhF,iBAAmBgF,EAAKhF,eAAiBoC,GAAqB4C,GACvE,CACAG,mCAAAA,GACI,MAAM,QAAE7M,GAAYha,KAAK0mB,KAAKn1B,WAC1B7B,EAAoBsqB,KACpBha,KAAK8mB,gBAAkB9M,EAAQ+M,UAAU/mB,KAAK0mB,MAEtD,CAIAM,KAAAA,GACIhnB,KAAK6mB,qCACT,CACAhxB,MAAAA,GACI,MAAM,QAAEmkB,GAAYha,KAAK0mB,KAAKn1B,YACtByoB,QAASiN,GAAgBjnB,KAAK0mB,KAAKQ,WAAa,CAAC,EACrDlN,IAAYiN,GACZjnB,KAAK6mB,qCAEb,CACAM,OAAAA,GACI,IAAIjoB,EACJc,KAAK0mB,KAAKhF,eAAeuE,QACO,QAA/B/mB,EAAKc,KAAK8mB,uBAAoC,IAAP5nB,GAAyBA,EAAGkC,KAAKpB,KAC7E,ID9BAwmB,KAAM,CACFC,QDLR,cAAmCA,GAC/B/mB,WAAAA,GACIkJ,SAASxZ,WACT4Q,KAAK4mB,GAAKA,IACd,CACA/wB,MAAAA,GACI,IAAKmK,KAAK0mB,KAAKtE,gBACX,OACJ,MAAM,UAAEgF,EAAS,eAAEC,GAAmBrnB,KAAK0mB,KAAKtE,iBACxCgF,UAAWE,GAAkBtnB,KAAK0mB,KAAKa,qBAAuB,CAAC,EACvE,IAAKvnB,KAAK0mB,KAAKhF,gBAAkB0F,IAAcE,EAC3C,OAEJ,MAAME,EAAgBxnB,KAAK0mB,KAAKhF,eAAeoE,UAAU,QAASsB,GAC9DC,IAAmBD,GACnBI,EAAc1b,MAAK,IAAMub,EAAernB,KAAK4mB,KAErD,CACAI,KAAAA,GACI,MAAM,SAAES,GAAaznB,KAAK0mB,KAAKtE,iBAAmB,CAAC,EAC/CqF,IACAznB,KAAKmnB,QAAUM,EAASznB,KAAK4mB,IAErC,CACAO,OAAAA,GAAY,KG3BVO,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GAA2B,IAApBK,EAAS54B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACH64B,MAAO,CACHzwB,EAAGmwB,EAAM,GAAGK,MACZlrB,EAAG6qB,EAAM,GAAGK,OAGxB,CCTA,SAASE,GAAYlf,EAAQsW,EAAWvB,GAAsC,IAA7B/S,EAAO5b,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAE+4B,SAAS,GAElE,OADAnf,EAAOof,iBAAiB9I,EAAWvB,EAAS/S,GACrC,IAAMhC,EAAOqf,oBAAoB/I,EAAWvB,EACvD,CCAA,SAASuK,GAAgBtf,EAAQsW,EAAWvB,EAAS/S,GACjD,OAAOkd,GAAYlf,EAAQsW,EFMPvB,IACZ4J,GAAUD,GAAiBC,IAAU5J,EAAQ4J,EAAOI,GAAiBJ,IEPvCY,CAAexK,GAAU/S,EACnE,CCLA,MAAMnE,GAAWA,CAACpF,EAAGC,IAAM5O,KAAK+E,IAAI4J,EAAIC,GCWxC,MAAM8mB,GACF9oB,WAAAA,CAAYioB,EAAOc,GAAgF,IAAtE,mBAAEC,EAAkB,cAAEC,EAAa,iBAAEC,GAAmB,GAAOx5B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE5F,GA5DA4Q,KAAK6oB,WAAa,KAIlB7oB,KAAK8oB,cAAgB,KAIrB9oB,KAAK+oB,kBAAoB,KAIzB/oB,KAAKyoB,SAAW,CAAC,EAIjBzoB,KAAK2oB,cAAgBvuB,OACrB4F,KAAKgpB,YAAc,KACf,IAAMhpB,KAAK8oB,gBAAiB9oB,KAAK+oB,kBAC7B,OACJ,MAAME,EAAOC,GAAWlpB,KAAK+oB,kBAAmB/oB,KAAKmpB,SAC/CC,EAAmC,OAApBppB,KAAK6oB,WAIpBQ,EDxClB,SAAoB5nB,EAAGC,GAEnB,MAAM4nB,EAASziB,GAASpF,EAAEjK,EAAGkK,EAAElK,GACzB+xB,EAAS1iB,GAASpF,EAAE3E,EAAG4E,EAAE5E,GAC/B,OAAOhK,KAAKC,KAAKu2B,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWP,EAAKpT,OAAQ,CAAEre,EAAG,EAAGsF,EAAG,KAAQ,EAC3E,IAAKssB,IAAiBC,EAClB,OACJ,MAAM,MAAEpB,GAAUgB,GACZ,UAAE90B,GAAcqB,EACtBwK,KAAKmpB,QAAQrqB,KAAK,IAAKmpB,EAAO9zB,cAC9B,MAAM,QAAEs1B,EAAO,OAAEC,GAAW1pB,KAAKyoB,SAC5BW,IACDK,GAAWA,EAAQzpB,KAAK8oB,cAAeG,GACvCjpB,KAAK6oB,WAAa7oB,KAAK8oB,eAE3BY,GAAUA,EAAO1pB,KAAK8oB,cAAeG,EAAK,EAE9CjpB,KAAK2pB,kBAAoB,CAAChC,EAAOsB,KAC7BjpB,KAAK8oB,cAAgBnB,EACrB3nB,KAAK+oB,kBAAoBa,GAAeX,EAAMjpB,KAAK0oB,oBAEnDlyB,EAAMX,OAAOmK,KAAKgpB,aAAa,EAAK,EAExChpB,KAAK6pB,gBAAkB,CAAClC,EAAOsB,KAC3BjpB,KAAK8pB,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBjqB,KAAKyoB,SAGtD,GAFIzoB,KAAK4oB,kBACLqB,GAAmBA,KACjBjqB,KAAK8oB,gBAAiB9oB,KAAK+oB,kBAC7B,OACJ,MAAMmB,EAAUhB,GAA0B,kBAAfvB,EAAMz1B,KAC3B8N,KAAK+oB,kBACLa,GAAeX,EAAMjpB,KAAK0oB,oBAAqB1oB,KAAKmpB,SACtDnpB,KAAK6oB,YAAckB,GACnBA,EAAMpC,EAAOuC,GAEjBF,GAAgBA,EAAarC,EAAOuC,EAAQ,GAG3CxC,GAAiBC,GAClB,OACJ3nB,KAAK4oB,iBAAmBA,EACxB5oB,KAAKyoB,SAAWA,EAChBzoB,KAAK0oB,mBAAqBA,EAC1B1oB,KAAK2oB,cAAgBA,GAAiBvuB,OACtC,MACM+vB,EAAcP,GADP7B,GAAiBJ,GACW3nB,KAAK0oB,qBACxC,MAAET,GAAUkC,GACZ,UAAEh2B,GAAcqB,EACtBwK,KAAKmpB,QAAU,CAAC,IAAKlB,EAAO9zB,cAC5B,MAAM,eAAEi2B,GAAmB3B,EAC3B2B,GACIA,EAAezC,EAAOuB,GAAWiB,EAAanqB,KAAKmpB,UACvDnpB,KAAKqqB,gBAAkB7X,GAAK8V,GAAgBtoB,KAAK2oB,cAAe,cAAe3oB,KAAK2pB,mBAAoBrB,GAAgBtoB,KAAK2oB,cAAe,YAAa3oB,KAAK6pB,iBAAkBvB,GAAgBtoB,KAAK2oB,cAAe,gBAAiB3oB,KAAK6pB,iBAC9O,CACAS,cAAAA,CAAe7B,GACXzoB,KAAKyoB,SAAWA,CACpB,CACAqB,GAAAA,GACI9pB,KAAKqqB,iBAAmBrqB,KAAKqqB,kBAC7B5zB,EAAYuJ,KAAKgpB,YACrB,EAEJ,SAASY,GAAeX,EAAMP,GAC1B,OAAOA,EAAqB,CAAET,MAAOS,EAAmBO,EAAKhB,QAAWgB,CAC5E,CACA,SAASsB,GAAc9oB,EAAGC,GACtB,MAAO,CAAElK,EAAGiK,EAAEjK,EAAIkK,EAAElK,EAAGsF,EAAG2E,EAAE3E,EAAI4E,EAAE5E,EACtC,CACA,SAASosB,GAAUv2B,EAAYw2B,GAAS,IAApB,MAAElB,GAAOt1B,EACzB,MAAO,CACHs1B,QACA/zB,MAAOq2B,GAActC,EAAOuC,GAAgBrB,IAC5CtT,OAAQ0U,GAActC,EAAOwC,GAAiBtB,IAC9Ch4B,SAAUN,GAAYs4B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQ/4B,OAAS,EACpC,CACA,SAASS,GAAYs4B,EAASuB,GAC1B,GAAIvB,EAAQ/4B,OAAS,EACjB,MAAO,CAAEoH,EAAG,EAAGsF,EAAG,GAEtB,IAAIzM,EAAI84B,EAAQ/4B,OAAS,EACrBu6B,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBrB,GAClC,KAAO94B,GAAK,IACRs6B,EAAmBxB,EAAQ94B,KACvBu6B,EAAUz2B,UAAYw2B,EAAiBx2B,UACvCtC,EAAsB64B,MAG1Br6B,IAEJ,IAAKs6B,EACD,MAAO,CAAEnzB,EAAG,EAAGsF,EAAG,GAEtB,MAAMmN,EAAOlY,EAAsB64B,EAAUz2B,UAAYw2B,EAAiBx2B,WAC1E,GAAa,IAAT8V,EACA,MAAO,CAAEzS,EAAG,EAAGsF,EAAG,GAEtB,MAAM0T,EAAkB,CACpBhZ,GAAIozB,EAAUpzB,EAAImzB,EAAiBnzB,GAAKyS,EACxCnN,GAAI8tB,EAAU9tB,EAAI6tB,EAAiB7tB,GAAKmN,GAQ5C,OANIuG,EAAgBhZ,IAAMsX,MACtB0B,EAAgBhZ,EAAI,GAEpBgZ,EAAgB1T,IAAMgS,MACtB0B,EAAgB1T,EAAI,GAEjB0T,CACX,CCzJA,SAASqa,GAAWhrB,GAChB,IAAIirB,EAAO,KACX,MAAO,KACH,MAAMC,EAAWA,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAOjrB,EACAkrB,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcC,GACnB,IAAIL,GAAO,EACX,GAAa,MAATK,EACAL,EAAOG,UAEN,GAAa,MAATE,EACLL,EAAOE,SAEN,CACD,MAAMI,EAAiBJ,KACjBK,EAAeJ,KACjBG,GAAkBC,EAClBP,EAAOA,KACHM,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOP,CACX,CACA,SAASQ,KAGL,MAAMC,EAAkBL,IAAc,GACtC,OAAKK,IAELA,KACO,EACX,CClDA,SAASC,GAAYC,GACjB,OAAQA,GACW,kBAARA,GACPxqB,OAAOC,UAAUC,eAAeC,KAAKqqB,EAAK,UAClD,CCIA,SAASC,GAAWC,GAChB,OAAOA,EAAKv1B,IAAMu1B,EAAKt1B,GAC3B,CAIA,SAASu1B,GAAc13B,EAAOyP,EAAQqF,GAAsB,IAAdD,EAAM3Z,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GACnD8E,EAAM6U,OAASA,EACf7U,EAAM23B,YAAcjZ,GAAUjP,EAAOtN,IAAKsN,EAAOvN,IAAKlC,EAAM6U,QAC5D7U,EAAM4G,MAAQ4wB,GAAW1iB,GAAU0iB,GAAW/nB,GAC9CzP,EAAM43B,UACFlZ,GAAU5J,EAAO3S,IAAK2S,EAAO5S,IAAKlC,EAAM6U,QAAU7U,EAAM23B,aACvD33B,EAAM4G,OAjBG,OAiBmB5G,EAAM4G,OAhBzB,QAiBVmJ,MAAM/P,EAAM4G,UACZ5G,EAAM4G,MAAQ,IAEb5G,EAAM43B,YAlBO,KAmBd53B,EAAM43B,WAlBQ,KAmBd7nB,MAAM/P,EAAM43B,cACZ53B,EAAM43B,UAAY,EAE1B,CACA,SAASC,GAAa73B,EAAOyP,EAAQqF,EAAQD,GACzC6iB,GAAc13B,EAAMsD,EAAGmM,EAAOnM,EAAGwR,EAAOxR,EAAGuR,EAASA,EAAO5B,aAAU/V,GACrEw6B,GAAc13B,EAAM4I,EAAG6G,EAAO7G,EAAGkM,EAAOlM,EAAGiM,EAASA,EAAO3B,aAAUhW,EACzE,CACA,SAAS46B,GAAiBhjB,EAAQijB,EAAU3I,GACxCta,EAAO3S,IAAMitB,EAAOjtB,IAAM41B,EAAS51B,IACnC2S,EAAO5S,IAAM4S,EAAO3S,IAAMq1B,GAAWO,EACzC,CAKA,SAASC,GAAyBljB,EAAQmjB,EAAQ7I,GAC9Cta,EAAO3S,IAAM81B,EAAO91B,IAAMitB,EAAOjtB,IACjC2S,EAAO5S,IAAM4S,EAAO3S,IAAMq1B,GAAWS,EACzC,CACA,SAASC,GAAqBpjB,EAAQmjB,EAAQ7I,GAC1C4I,GAAyBljB,EAAOxR,EAAG20B,EAAO30B,EAAG8rB,EAAO9rB,GACpD00B,GAAyBljB,EAAOlM,EAAGqvB,EAAOrvB,EAAGwmB,EAAOxmB,EACxD,CCnBA,SAASuvB,GAA4BV,EAAMt1B,EAAKD,GAC5C,MAAO,CACHC,SAAajF,IAARiF,EAAoBs1B,EAAKt1B,IAAMA,OAAMjF,EAC1CgF,SAAahF,IAARgF,EACCu1B,EAAKv1B,IAAMA,GAAOu1B,EAAKv1B,IAAMu1B,EAAKt1B,UAClCjF,EAEd,CAcA,SAASk7B,GAA4BC,EAAYC,GAC7C,IAAIn2B,EAAMm2B,EAAgBn2B,IAAMk2B,EAAWl2B,IACvCD,EAAMo2B,EAAgBp2B,IAAMm2B,EAAWn2B,IAO3C,OAJIo2B,EAAgBp2B,IAAMo2B,EAAgBn2B,IACtCk2B,EAAWn2B,IAAMm2B,EAAWl2B,OAC3BA,EAAKD,GAAO,CAACA,EAAKC,IAEhB,CAAEA,MAAKD,MAClB,CAuCA,MAAMq2B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHx2B,IAAKy2B,GAAoBH,EAAaC,GACtCx2B,IAAK02B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAWMC,GAAYA,KAAA,CACdx1B,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,KCVzC,SAAS62B,GAASj4B,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASk4B,GAAuBv6B,GAAgC,IAA/B,IAAEsK,EAAG,KAAEE,EAAI,MAAEK,EAAK,OAAEH,GAAS1K,EAC1D,MAAO,CACH6E,EAAG,CAAEnB,IAAK8G,EAAM/G,IAAKoH,GACrBV,EAAG,CAAEzG,IAAK4G,EAAK7G,IAAKiH,GAE5B,CCVA,SAAS8vB,GAAgBryB,GACrB,YAAiB1J,IAAV0J,GAAiC,IAAVA,CAClC,CACA,SAASsyB,GAAQz6B,GAA4B,IAA3B,MAAEmI,EAAK,OAAEyL,EAAM,OAAEC,GAAQ7T,EACvC,OAASw6B,GAAgBryB,KACpBqyB,GAAgB5mB,KAChB4mB,GAAgB3mB,EACzB,CACA,SAAS6mB,GAAa38B,GAClB,OAAQ08B,GAAS18B,IACb48B,GAAe58B,IACfA,EAAOqW,GACPrW,EAAOyV,QACPzV,EAAO0V,SACP1V,EAAO2V,SACP3V,EAAOiW,OACPjW,EAAOkW,KACf,CACA,SAAS0mB,GAAe58B,GACpB,OAAO68B,GAAc78B,EAAO8G,IAAM+1B,GAAc78B,EAAOoM,EAC3D,CACA,SAASywB,GAAc38B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAAS48B,GAAWvF,EAAOntB,EAAO+wB,GAG9B,OAAOA,EADQ/wB,GADYmtB,EAAQ4D,EAGvC,CAIA,SAAS4B,GAAgBxF,EAAO6D,EAAWhxB,EAAO+wB,EAAa6B,GAI3D,YAHiBt8B,IAAbs8B,IACAzF,EAAQuF,GAAWvF,EAAOyF,EAAU7B,IAEjC2B,GAAWvF,EAAOntB,EAAO+wB,GAAeC,CACnD,CAIA,SAAS6B,GAAehC,GAAuD,IAAjDG,EAAS18B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAG0L,EAAK1L,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGy8B,EAAWz8B,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAAEs8B,EAAQt+B,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EACzEu6B,EAAKt1B,IAAMo3B,GAAgB9B,EAAKt1B,IAAKy1B,EAAWhxB,EAAO+wB,EAAa6B,GACpE/B,EAAKv1B,IAAMq3B,GAAgB9B,EAAKv1B,IAAK01B,EAAWhxB,EAAO+wB,EAAa6B,EACxE,CAIA,SAASE,GAAcC,EAAGl7B,GAAY,IAAV,EAAE6E,EAAC,EAAEsF,GAAGnK,EAChCg7B,GAAeE,EAAIr2B,EAAGA,EAAEs0B,UAAWt0B,EAAEsD,MAAOtD,EAAEq0B,aAC9C8B,GAAeE,EAAI/wB,EAAGA,EAAEgvB,UAAWhvB,EAAEhC,MAAOgC,EAAE+uB,YAClD,CACA,MAAMiC,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAAcrC,EAAM9kB,GACzB8kB,EAAKt1B,IAAMs1B,EAAKt1B,IAAMwQ,EACtB8kB,EAAKv1B,IAAMu1B,EAAKv1B,IAAMyQ,CAC1B,CAMA,SAASonB,GAActC,EAAMuC,EAAeC,EAAWT,GAA4B,IAAlBU,EAAUh/B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAG1Eu+B,GAAehC,EAAMuC,EAAeC,EAFhBvb,GAAU+Y,EAAKt1B,IAAKs1B,EAAKv1B,IAAKg4B,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAKjzB,GACvBqzB,GAAcJ,EAAIr2B,EAAGoD,EAAUpD,EAAGoD,EAAU2L,OAAQ3L,EAAUE,MAAOF,EAAUuM,SAC/E8mB,GAAcJ,EAAI/wB,EAAGlC,EAAUkC,EAAGlC,EAAU4L,OAAQ5L,EAAUE,MAAOF,EAAUwM,QACnF,CCjHA,SAASqC,GAAmB6kB,EAAU1E,GAClC,OAAOsD,GHeX,SAA4BjF,EAAO2B,GAC/B,IAAKA,EACD,OAAO3B,EACX,MAAMsG,EAAU3E,EAAe,CAAEpyB,EAAGywB,EAAM9qB,KAAML,EAAGmrB,EAAMhrB,MACnDuxB,EAAc5E,EAAe,CAAEpyB,EAAGywB,EAAMzqB,MAAOV,EAAGmrB,EAAM5qB,SAC9D,MAAO,CACHJ,IAAKsxB,EAAQzxB,EACbK,KAAMoxB,EAAQ/2B,EACd6F,OAAQmxB,EAAY1xB,EACpBU,MAAOgxB,EAAYh3B,EAE3B,CG1BmCi3B,CAAmBH,EAASI,wBAAyB9E,GACxF,CCJA,MAAM+E,GAAmBh8B,IAAiB,IAAhB,QAAEzB,GAASyB,EACjC,OAAOzB,EAAUA,EAAQ09B,cAAcC,YAAc,IAAI,ECkBvDC,GAAsB,IAAIC,QAKhC,MAAMC,GACFtvB,WAAAA,CAAYlP,GAIRwP,KAAKivB,eAAiB,KACtBjvB,KAAKkvB,YAAa,EAClBlvB,KAAKmvB,iBAAmB,KACxBnvB,KAAK6rB,YAAc,CAAEr0B,EAAG,EAAGsF,EAAG,GAI9BkD,KAAKovB,aAAc,EACnBpvB,KAAKqvB,uBAAwB,EAI7BrvB,KAAKsvB,QP/BK,CACd93B,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,IOiCjC4J,KAAKxP,cAAgBA,CACzB,CACAZ,KAAAA,CAAM2/B,GAA4C,IAA/B,aAAEC,GAAe,GAAOpgC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAEgzB,GAAoBpiB,KAAKxP,cACjC,GAAI4xB,IAAiD,IAA9BA,EAAgBgF,UACnC,OACJ,MA6FM,iBAAEwB,GAAqB5oB,KAAKzO,WAClCyO,KAAKyvB,WAAa,IAAIjH,GAAW+G,EAAa,CAC1CnF,eA/FoBzC,IACpB,MAAM,iBAAEiB,GAAqB5oB,KAAKzO,WAGlCq3B,EAAmB5oB,KAAK0vB,iBAAmB1vB,KAAK2vB,gBAC5CH,GACAxvB,KAAKwvB,aAAazH,GAAiBJ,EAAO,QAAQM,MACtD,EAyFAwB,QAvFYA,CAAC9B,EAAOsB,KAEpB,MAAM,KAAEkC,EAAI,gBAAEyE,EAAe,YAAEC,GAAgB7vB,KAAKzO,WACpD,GAAI45B,IAASyE,IACL5vB,KAAKivB,gBACLjvB,KAAKivB,iBACTjvB,KAAKivB,eAAiB/D,GAAcC,IAE/BnrB,KAAKivB,gBACN,OAERjvB,KAAKkvB,YAAa,EAClBlvB,KAAKmvB,iBAAmB,KACxBnvB,KAAK8vB,qBACD9vB,KAAKxP,cAAcu/B,aACnB/vB,KAAKxP,cAAcu/B,WAAWC,oBAAqB,EACnDhwB,KAAKxP,cAAcu/B,WAAW/mB,YAAS5X,GAK3C67B,IAAUtB,IACN,IAAIz6B,EAAU8O,KAAKiwB,mBAAmBtE,GAAMt8B,OAAS,EAIrD,GAAI+L,GAAQtC,KAAK5H,GAAU,CACvB,MAAM,WAAE6+B,GAAe/vB,KAAKxP,cAC5B,GAAIu/B,GAAcA,EAAW5D,OAAQ,CACjC,MAAM+D,EAAeH,EAAW5D,OAAOgE,UAAUxE,GACjD,GAAIuE,EAAc,CAEdh/B,EADew6B,GAAWwE,IACN11B,WAAWtJ,GAAW,IAC9C,CACJ,CACJ,CACA8O,KAAK6rB,YAAYF,GAAQz6B,CAAO,IAGhC2+B,GACAr5B,EAAMR,YAAW,IAAM65B,EAAYlI,EAAOsB,KAE9ClI,GAAqB/gB,KAAKxP,cAAe,aACzC,MAAM,eAAEkxB,GAAmB1hB,KAAKxP,cAChCkxB,GAAkBA,EAAeoE,UAAU,aAAa,EAAK,EA4C7D4D,OA1CWA,CAAC/B,EAAOsB,KAEnB,MAAM,gBAAE2G,EAAe,kBAAEQ,EAAiB,gBAAEC,EAAe,OAAEC,GAAYtwB,KAAKzO,WAE9E,IAAKq+B,IAAoB5vB,KAAKivB,eAC1B,OACJ,MAAM,OAAEpZ,GAAWoT,EAEnB,GAAImH,GAA+C,OAA1BpwB,KAAKmvB,iBAM1B,OALAnvB,KAAKmvB,iBAuWrB,SAA6BtZ,GAA4B,IAApB0a,EAAanhC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAC7CurB,EAAY,KACZ7nB,KAAK+E,IAAIge,EAAO/Y,GAAKyzB,EACrB5V,EAAY,IAEP7nB,KAAK+E,IAAIge,EAAOre,GAAK+4B,IAC1B5V,EAAY,KAEhB,OAAOA,CACX,CAhXwC6V,CAAoB3a,QAEd,OAA1B7V,KAAKmvB,kBACLkB,GAAmBA,EAAgBrwB,KAAKmvB,mBAKhDnvB,KAAKywB,WAAW,IAAKxH,EAAKhB,MAAOpS,GACjC7V,KAAKywB,WAAW,IAAKxH,EAAKhB,MAAOpS,GAOjC7V,KAAKxP,cAAcuF,SAKnBu6B,GAAUA,EAAO3I,EAAOsB,EAAK,EAa7Be,aAXiBA,CAACrC,EAAOsB,IAASjpB,KAAK4W,KAAK+Q,EAAOsB,GAYnDgB,gBAXoBA,IAAMgD,IAAUtB,IACpC,IAAIzsB,EACJ,MAAwC,WAAjCc,KAAK0wB,kBAAkB/E,KAC0B,QAAlDzsB,EAAKc,KAAKiwB,mBAAmBtE,GAAM9Q,iBAA8B,IAAP3b,OAAgB,EAASA,EAAGiZ,OAAO,KASpG,CACCuQ,mBAAoB1oB,KAAKxP,cAAcmgC,wBACvC/H,mBACAD,cAAegG,GAAiB3uB,KAAKxP,gBAE7C,CACAomB,IAAAA,CAAK+Q,EAAOsB,GACR,MAAMiG,EAAalvB,KAAKkvB,WAExB,GADAlvB,KAAK3K,UACA65B,EACD,OACJ,MAAM,SAAE/9B,GAAa83B,EACrBjpB,KAAK+f,eAAe5uB,GACpB,MAAM,UAAEy/B,GAAc5wB,KAAKzO,WACvBq/B,GACAp6B,EAAMR,YAAW,IAAM46B,EAAUjJ,EAAOsB,IAEhD,CACA5zB,MAAAA,GACI2K,KAAKkvB,YAAa,EAClB,MAAM,WAAEa,EAAU,eAAErO,GAAmB1hB,KAAKxP,cACxCu/B,IACAA,EAAWC,oBAAqB,GAEpChwB,KAAKyvB,YAAczvB,KAAKyvB,WAAW3F,MACnC9pB,KAAKyvB,gBAAar+B,EAClB,MAAM,gBAAEw+B,GAAoB5vB,KAAKzO,YAC5Bq+B,GAAmB5vB,KAAKivB,iBACzBjvB,KAAKivB,iBACLjvB,KAAKivB,eAAiB,MAE1BvN,GAAkBA,EAAeoE,UAAU,aAAa,EAC5D,CACA2K,UAAAA,CAAW9E,EAAMkF,EAAQhb,GACrB,MAAM,KAAEsV,GAASnrB,KAAKzO,WAEtB,IAAKskB,IAAWib,GAAWnF,EAAMR,EAAMnrB,KAAKmvB,kBACxC,OACJ,MAAM4B,EAAY/wB,KAAKiwB,mBAAmBtE,GAC1C,IAAI17B,EAAO+P,KAAK6rB,YAAYF,GAAQ9V,EAAO8V,GAEvC3rB,KAAKovB,aAAepvB,KAAKovB,YAAYzD,KACrC17B,ERxLZ,SAA0Bg4B,EAAKt1B,EAAgB28B,GAAS,IAAvB,IAAEj5B,EAAG,IAAED,GAAKzD,EAazC,YAZYvB,IAARiF,GAAqB4xB,EAAQ5xB,EAE7B4xB,EAAQqH,EACF1c,GAAUvc,EAAK4xB,EAAOqH,EAAQj5B,KAC9BvD,KAAKsD,IAAI6xB,EAAO5xB,QAETjF,IAARgF,GAAqB6xB,EAAQ7xB,IAElC6xB,EAAQqH,EACF1c,GAAUxc,EAAK6xB,EAAOqH,EAAQl5B,KAC9BtD,KAAKuD,IAAI4xB,EAAO7xB,IAEnB6xB,CACX,CQ0KmB+I,CAAiB/gC,EAAM+P,KAAKovB,YAAYzD,GAAO3rB,KAAKsvB,QAAQ3D,KAEvEoF,EAAUthC,IAAIQ,EAClB,CACA6/B,kBAAAA,GACI,IAAI5wB,EACJ,MAAM,gBAAE+xB,EAAe,YAAEtE,GAAgB3sB,KAAKzO,WACxC46B,EAASnsB,KAAKxP,cAAcu/B,aAC7B/vB,KAAKxP,cAAcu/B,WAAW5D,OAC7BnsB,KAAKxP,cAAcu/B,WAAWmB,SAAQ,GACG,QAAxChyB,EAAKc,KAAKxP,cAAcu/B,kBAA+B,IAAP7wB,OAAgB,EAASA,EAAGitB,OAC7EgF,EAAkBnxB,KAAKovB,YACzB6B,GAAmBzF,GAAYyF,GAC1BjxB,KAAKovB,cACNpvB,KAAKovB,YAAcpvB,KAAKoxB,yBAKxBpxB,KAAKovB,eADL6B,IAAmB9E,IR1KnC,SAAiCgE,EAAS5zB,GAAgC,IAA9B,IAAEU,EAAG,KAAEE,EAAI,OAAEE,EAAM,MAAEG,GAAOjB,EACpE,MAAO,CACH/E,EAAG60B,GAA4B8D,EAAU34B,EAAG2F,EAAMK,GAClDV,EAAGuvB,GAA4B8D,EAAUrzB,EAAGG,EAAKI,GAEzD,CQsKmCg0B,CAAwBlF,EAAOgE,UAAWc,GAMrEjxB,KAAKsvB,QRnHb,WAA0D,IAA9B3C,EAAWv9B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAGq9B,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHj1B,EAAGk1B,GAAmBC,EAAa,OAAQ,SAC3C7vB,EAAG4vB,GAAmBC,EAAa,MAAO,UAElD,CQwGuB2E,CAAmB3E,GAK9BwE,IAAoBnxB,KAAKovB,aACzBjD,GACAnsB,KAAKovB,cACJpvB,KAAKqvB,uBACNpC,IAAUtB,KACmB,IAArB3rB,KAAKovB,aACLpvB,KAAKiwB,mBAAmBtE,KACxB3rB,KAAKovB,YAAYzD,GR7IrC,SAA+BQ,EAAQiD,GACnC,MAAMmC,EAAsB,CAAC,EAO7B,YANwBngC,IAApBg+B,EAAY/4B,MACZk7B,EAAoBl7B,IAAM+4B,EAAY/4B,IAAM81B,EAAO91B,UAE/BjF,IAApBg+B,EAAYh5B,MACZm7B,EAAoBn7B,IAAMg5B,EAAYh5B,IAAM+1B,EAAO91B,KAEhDk7B,CACX,CQoI6CC,CAAsBrF,EAAOgE,UAAUxE,GAAO3rB,KAAKovB,YAAYzD,IAC5F,GAGZ,CACAyF,qBAAAA,GACI,MAAQH,gBAAiB7B,EAAW,yBAAEqC,GAA6BzxB,KAAKzO,WACxE,IAAK69B,IAAgB5D,GAAY4D,GAC7B,OAAO,EACX,MAAMsC,EAAqBtC,EAAYl+B,SACvC0I,EAAAA,EAAAA,GAAiC,OAAvB83B,EAA6B,0GACvC,MAAM,WAAE3B,GAAe/vB,KAAKxP,cAE5B,IAAKu/B,IAAeA,EAAW5D,OAC3B,OAAO,EACX,MAAMwF,EFhPd,SAAwBj4B,EAASk4B,EAAoBlJ,GACjD,MAAMmJ,EAAcpoB,GAAmB/P,EAASgvB,IAC1C,OAAEoJ,GAAWF,EAKnB,OAJIE,IACA9D,GAAc6D,EAAYr6B,EAAGs6B,EAAOjc,OAAOre,GAC3Cw2B,GAAc6D,EAAY/0B,EAAGg1B,EAAOjc,OAAO/Y,IAExC+0B,CACX,CEwO+BE,CAAeL,EAAoB3B,EAAWvgB,KAAMxP,KAAKxP,cAAcmgC,yBAC9F,IAAIqB,ERtLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHn6B,EAAG80B,GAA4B6D,EAAU34B,EAAGm6B,EAAen6B,GAC3DsF,EAAGwvB,GAA4B6D,EAAUrzB,EAAG60B,EAAe70B,GAEnE,CQiLkCm1B,CAAwBlC,EAAW5D,OAAOgE,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,ELlPpC,SAAgCl1B,GAAW,IAAV,EAAE/E,EAAC,EAAEsF,GAAGP,EACrC,MAAO,CAAEU,IAAKH,EAAEzG,IAAKmH,MAAOhG,EAAEpB,IAAKiH,OAAQP,EAAE1G,IAAK+G,KAAM3F,EAAEnB,IAC9D,CKgP6D87B,CAAwBH,IACzEhyB,KAAKqvB,wBAA0B6C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACAjS,cAAAA,CAAe5uB,GACX,MAAM,KAAEg6B,EAAI,aAAEiH,EAAY,YAAEzF,EAAW,eAAE0F,EAAc,iBAAEzJ,EAAgB,oBAAE0J,GAAyBtyB,KAAKzO,WACnG69B,EAAcpvB,KAAKovB,aAAe,CAAC,EACnCmD,EAAqBtF,IAAUtB,IACjC,IAAKmF,GAAWnF,EAAMR,EAAMnrB,KAAKmvB,kBAC7B,OAEJ,IAAIl8B,EAAcm8B,GAAeA,EAAYzD,IAAU,CAAC,EACpD/C,IACA31B,EAAa,CAAEoD,IAAK,EAAGD,IAAK,IAOhC,MAAM2a,EAAkB4b,EAAc,IAAM,IACtC7b,EAAgB6b,EAAc,GAAK,IACnChc,EAAU,CACZze,KAAM,UACNf,SAAUihC,EAAejhC,EAASw6B,GAAQ,EAC1C5a,kBACAD,gBACAD,aAAc,IACdxD,UAAW,EACXhb,UAAW,MACRggC,KACAp/B,GAKP,OAAO+M,KAAKwyB,wBAAwB7G,EAAMhb,EAAQ,IAGtD,OAAOxE,QAAQoQ,IAAIgW,GAAoBzmB,KAAKwmB,EAChD,CACAE,uBAAAA,CAAwB7G,EAAM14B,GAC1B,MAAM89B,EAAY/wB,KAAKiwB,mBAAmBtE,GAE1C,OADA5K,GAAqB/gB,KAAKxP,cAAem7B,GAClCoF,EAAUnhC,MAAMotB,GAAmB2O,EAAMoF,EAAW,EAAG99B,EAAY+M,KAAKxP,eAAe,GAClG,CACAm/B,aAAAA,GACI1C,IAAUtB,GAAS3rB,KAAKiwB,mBAAmBtE,GAAM/U,QACrD,CACA8Y,cAAAA,GACIzC,IAAUtB,IAAW,IAAIzsB,EAAI,OAA0D,QAAlDA,EAAKc,KAAKiwB,mBAAmBtE,GAAM9Q,iBAA8B,IAAP3b,OAAgB,EAASA,EAAGkZ,OAAO,GACtI,CACAsY,iBAAAA,CAAkB/E,GACd,IAAIzsB,EACJ,OAA0D,QAAlDA,EAAKc,KAAKiwB,mBAAmBtE,GAAM9Q,iBAA8B,IAAP3b,OAAgB,EAASA,EAAGzO,KAClG,CAOAw/B,kBAAAA,CAAmBtE,GACf,MAAM8G,EAAU,QAAQ9G,EAAK+G,gBACvB3hC,EAAQiP,KAAKxP,cAAce,WAC3BohC,EAAsB5hC,EAAM0hC,GAClC,OAAOE,GAED3yB,KAAKxP,cAAcqO,SAAS8sB,GAAO56B,EAAMwyB,QACrCxyB,EAAMwyB,QAAQoI,QACdv6B,IAAc,EAC5B,CACAo+B,YAAAA,CAAavH,GACTgF,IAAUtB,IACN,MAAM,KAAER,GAASnrB,KAAKzO,WAEtB,IAAKu/B,GAAWnF,EAAMR,EAAMnrB,KAAKmvB,kBAC7B,OACJ,MAAM,WAAEY,GAAe/vB,KAAKxP,cACtBugC,EAAY/wB,KAAKiwB,mBAAmBtE,GAC1C,GAAIoE,GAAcA,EAAW5D,OAAQ,CACjC,MAAM,IAAE91B,EAAG,IAAED,GAAQ25B,EAAW5D,OAAOgE,UAAUxE,GACjDoF,EAAUthC,IAAIw4B,EAAM0D,GAAQ/Y,GAAUvc,EAAKD,EAAK,IACpD,IAER,CAMAw8B,8BAAAA,GACI,IAAK5yB,KAAKxP,cAAcU,QACpB,OACJ,MAAM,KAAEi6B,EAAI,gBAAE8F,GAAoBjxB,KAAKzO,YACjC,WAAEw+B,GAAe/vB,KAAKxP,cAC5B,IAAKg7B,GAAYyF,KAAqBlB,IAAe/vB,KAAKovB,YACtD,OAKJpvB,KAAK2vB,gBAKL,MAAMkD,EAAc,CAAEr7B,EAAG,EAAGsF,EAAG,GAC/BmwB,IAAUtB,IACN,MAAMoF,EAAY/wB,KAAKiwB,mBAAmBtE,GAC1C,GAAIoF,IAAkC,IAArB/wB,KAAKovB,YAAuB,CACzC,MAAM7d,EAASwf,EAAU1hC,MACzBwjC,EAAYlH,GRtS5B,SAAoBhoB,EAAQqF,GACxB,IAAID,EAAS,GACb,MAAM+pB,EAAepH,GAAW/nB,GAC1BovB,EAAerH,GAAW1iB,GAOhC,OANI+pB,EAAeD,EACf/pB,EAASqD,GAASpD,EAAO3S,IAAK2S,EAAO5S,IAAM08B,EAAcnvB,EAAOtN,KAE3Dy8B,EAAeC,IACpBhqB,EAASqD,GAASzI,EAAOtN,IAAKsN,EAAOvN,IAAM28B,EAAc/pB,EAAO3S,MAE7DoE,GAAM,EAAG,EAAGsO,EACvB,CQ2RoCiqB,CAAW,CAAE38B,IAAKkb,EAAQnb,IAAKmb,GAAUvR,KAAKovB,YAAYzD,GAClF,KAKJ,MAAM,kBAAEsH,GAAsBjzB,KAAKxP,cAAce,WACjDyO,KAAKxP,cAAcU,QAAQgiC,MAAMt4B,UAAYq4B,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNlD,EAAWvgB,MAAQugB,EAAWvgB,KAAK2jB,eACnCpD,EAAWqD,eACXpzB,KAAK8vB,qBAKL7C,IAAUtB,IACN,IAAKmF,GAAWnF,EAAMR,EAAM,MACxB,OAIJ,MAAM4F,EAAY/wB,KAAKiwB,mBAAmBtE,IACpC,IAAEt1B,EAAG,IAAED,GAAQ4J,KAAKovB,YAAYzD,GACtCoF,EAAUthC,IAAImjB,GAAUvc,EAAKD,EAAKy8B,EAAYlH,IAAO,GAE7D,CACA0H,YAAAA,GACI,IAAKrzB,KAAKxP,cAAcU,QACpB,OACJ49B,GAAoBr/B,IAAIuQ,KAAKxP,cAAewP,MAC5C,MAIMszB,EAAsBhL,GAJZtoB,KAAKxP,cAAcU,QAIkB,eAAgBy2B,IACjE,MAAM,KAAEwD,EAAI,aAAEoI,GAAe,GAASvzB,KAAKzO,WAC3C45B,GAAQoI,GAAgBvzB,KAAKpQ,MAAM+3B,EAAM,IAEvC6L,EAAyBA,KAC3B,MAAM,gBAAEvC,GAAoBjxB,KAAKzO,WAC7Bi6B,GAAYyF,IAAoBA,EAAgB//B,UAChD8O,KAAKovB,YAAcpvB,KAAKoxB,wBAC5B,GAEE,WAAErB,GAAe/vB,KAAKxP,cACtBijC,EAA4B1D,EAAW3H,iBAAiB,UAAWoL,GACrEzD,IAAeA,EAAW5D,SAC1B4D,EAAWvgB,MAAQugB,EAAWvgB,KAAK2jB,eACnCpD,EAAWqD,gBAEf58B,EAAMb,KAAK69B,GAKX,MAAME,EAAqBxL,GAAY9tB,OAAQ,UAAU,IAAM4F,KAAK4yB,mCAK9De,EAA2B5D,EAAW3H,iBAAiB,aAAcz1B,IAAiC,IAAhC,MAAEuB,EAAK,iBAAE0/B,GAAkBjhC,EAC/FqN,KAAKkvB,YAAc0E,IACnB3G,IAAUtB,IACN,MAAM7rB,EAAcE,KAAKiwB,mBAAmBtE,GACvC7rB,IAELE,KAAK6rB,YAAYF,IAASz3B,EAAMy3B,GAAMG,UACtChsB,EAAYrQ,IAAIqQ,EAAYzQ,MAAQ6E,EAAMy3B,GAAMG,WAAU,IAE9D9rB,KAAKxP,cAAcuF,SACvB,IAEJ,MAAO,KACH29B,IACAJ,IACAG,IACAE,GAA4BA,GAA0B,CAE9D,CACApiC,QAAAA,GACI,MAAMR,EAAQiP,KAAKxP,cAAce,YAC3B,KAAE45B,GAAO,EAAK,kBAAEiF,GAAoB,EAAK,gBAAER,GAAkB,EAAK,gBAAEqB,GAAkB,EAAK,YAAEtE,EAAcF,GAAc,aAAE2F,GAAe,GAAUrhC,EAC1J,MAAO,IACAA,EACHo6B,OACAiF,oBACAR,kBACAqB,kBACAtE,cACAyF,eAER,EAEJ,SAAStB,GAAWnW,EAAWwQ,EAAMgE,GACjC,QAAkB,IAAThE,GAAiBA,IAASxQ,KACT,OAArBwU,GAA6BA,IAAqBxU,EAC3D,CC5cA,MAAMkZ,GAAgB9V,GAAY,CAAC4J,EAAOsB,KAClClL,GACAvnB,EAAMR,YAAW,IAAM+nB,EAAQ4J,EAAOsB,IAC1C,E,mDCJJ,MAAM6K,IAA2BC,EAAAA,GAAAA,eAAc,CAAC,GCD1CC,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQzI,GAC7B,OAAIA,EAAKv1B,MAAQu1B,EAAKt1B,IACX,EACH+9B,GAAUzI,EAAKv1B,IAAMu1B,EAAKt1B,KAAQ,GAC9C,CAQA,MAAMg+B,GAAsB,CACxBC,QAASA,CAAC/iB,EAAQmV,KACd,IAAKA,EAAK1d,OACN,OAAOuI,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIlW,GAAGvC,KAAKyY,GAIR,OAAOA,EAHPA,EAAS/W,WAAW+W,EAK5B,CAOA,MAAO,GAFG4iB,GAAgB5iB,EAAQmV,EAAK1d,OAAOxR,OACpC28B,GAAgB5iB,EAAQmV,EAAK1d,OAAOlM,KAC1B,GCjCtBy3B,GAAmB,CACrBD,QAASA,CAAC/iB,EAAM5e,KAAqC,IAAnC,UAAE6hC,EAAS,gBAAEC,GAAiB9hC,EAC5C,MAAM+hC,EAAWnjB,EACXojB,EAAS5wB,GAAQpJ,MAAM4W,GAE7B,GAAIojB,EAAOvkC,OAAS,EAChB,OAAOskC,EACX,MAAMvgB,EAAWpQ,GAAQL,kBAAkB6N,GACrCsE,EAA8B,kBAAd8e,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBj9B,EAAEsD,MAAQ05B,EAAUh9B,EAC7Cq9B,EAASJ,EAAgB33B,EAAEhC,MAAQ05B,EAAU13B,EACnD63B,EAAO,EAAI9e,IAAW+e,EACtBD,EAAO,EAAI9e,IAAWgf,EAOtB,MAAMC,EAAeliB,GAAUgiB,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBF,EAAO,EAAI9e,KAClB8e,EAAO,EAAI9e,IAAWif,GAEQ,kBAAvBH,EAAO,EAAI9e,KAClB8e,EAAO,EAAI9e,IAAWif,GACnB3gB,EAASwgB,EAAO,GC9BzBI,GAAkB,CAAC,ECEzB,MAAQ7/B,SAAU8/B,GAAW3/B,OAAQ4/B,IAAoBphC,EAAoBsW,gBAAgB,GCW7F,MAAM+qB,WAAiCC,GAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAE5kC,EAAa,YAAE6kC,EAAW,kBAAEC,EAAiB,SAAEC,GAAav1B,KAAKjP,OACnE,WAAEg/B,GAAev/B,EFpB/B,IAA2BglC,IEqBDC,GFpBtBx0B,OAAO2W,OAAOmd,GAAiBS,GEqBvBzF,IACIsF,EAAYK,OACZL,EAAYK,MAAMtgC,IAAI26B,GACtBuF,GAAqBA,EAAkB7N,UAAY8N,GACnDD,EAAkB7N,SAASsI,GAE/BA,EAAWvgB,KAAKmmB,YAChB5F,EAAW3H,iBAAiB,qBAAqB,KAC7CpoB,KAAK41B,cAAc,IAEvB7F,EAAW8F,WAAW,IACf9F,EAAW/kB,QACdqc,eAAgBA,IAAMrnB,KAAK41B,kBAGnC5B,GAAsBE,gBAAiB,CAC3C,CACA4B,uBAAAA,CAAwB5O,GACpB,MAAM,iBAAE6O,EAAgB,cAAEvlC,EAAa,KAAE26B,EAAI,UAAE/D,GAAcpnB,KAAKjP,MAC5Dg/B,EAAav/B,EAAcu/B,WACjC,OAAKA,GASLA,EAAW3I,UAAYA,EACnB+D,GACAjE,EAAU6O,mBAAqBA,QACV3kC,IAArB2kC,EACAhG,EAAWiG,aAGXh2B,KAAK41B,eAEL1O,EAAUE,YAAcA,IACpBA,EACA2I,EAAWkG,UAELlG,EAAWmG,YAMjB1/B,EAAMR,YAAW,KACb,MAAMmgC,EAAQpG,EAAWqG,WACpBD,GAAUA,EAAME,QAAQjmC,QACzB4P,KAAK41B,cACT,KAIL,MAnCI,IAoCf,CACAU,kBAAAA,GACI,MAAM,WAAEvG,GAAe/vB,KAAKjP,MAAMP,cAC9Bu/B,IACAA,EAAWvgB,KAAKmmB,YAChBX,GAAUh/B,YAAW,MACZ+5B,EAAWwG,kBAAoBxG,EAAWyG,UAC3Cx2B,KAAK41B,cACT,IAGZ,CACAa,oBAAAA,GACI,MAAM,cAAEjmC,EAAa,YAAE6kC,EAAaC,kBAAmBoB,GAAoB12B,KAAKjP,OAC1E,WAAEg/B,GAAev/B,EACnBu/B,IACAA,EAAW4G,4BACPtB,GAAeA,EAAYK,OAC3BL,EAAYK,MAAMkB,OAAO7G,GACzB2G,GAAkBA,EAAeG,YACjCH,EAAeG,WAAW9G,GAEtC,CACA6F,YAAAA,GACI,MAAM,aAAEA,GAAiB51B,KAAKjP,MAC9B6kC,GAAgBA,GACpB,CACA7/B,MAAAA,GACI,OAAO,IACX,EAEJ,SAAS+gC,GAAc/lC,GACnB,MAAOq2B,EAAWwO,GCtFtB,WACI,MAAMvS,GAAU0T,EAAAA,GAAAA,YAAWC,GAAAA,GAC3B,GAAgB,OAAZ3T,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE+D,EAAS,eAAEC,EAAc,SAAEI,GAAapE,EAG1CuD,GAAKqQ,EAAAA,GAAAA,UACXC,EAAAA,GAAAA,YAAU,IAAMzP,EAASb,IAAK,IAC9B,MAAMgP,GAAeuB,EAAAA,GAAAA,cAAY,IAAM9P,GAAkBA,EAAeT,IAAK,CAACA,EAAIS,IAClF,OAAQD,GAAaC,EAAiB,EAAC,EAAOuO,GAAgB,EAAC,EACnE,CD2EsCwB,GAC5B/B,GAAc0B,EAAAA,GAAAA,YAAWM,GAAAA,GAC/B,OAAQC,EAAAA,GAAAA,KAAIpC,GAA0B,IAAKnkC,EAAOskC,YAAaA,EAAaC,mBAAmByB,EAAAA,GAAAA,YAAWjD,IAA2B1M,UAAWA,EAAWwO,aAAcA,GAC7K,CACA,MAAMH,GAAyB,CAC3BvwB,aAAc,IACPmvB,GACHkD,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRnyB,oBAAqBivB,GACrBhvB,qBAAsBgvB,GACtB9uB,uBAAwB8uB,GACxB/uB,wBAAyB+uB,GACzBmD,UAAWjD,IE5HTkD,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQrnC,OACrBunC,GAAY/mC,GAA2B,kBAAVA,EAAqB4J,WAAW5J,GAASA,EACtEgnC,GAAQhnC,GAA2B,kBAAVA,GAAsByK,GAAGvC,KAAKlI,GA0C7D,SAASinC,GAAUnnC,EAAQonC,GACvB,YAA8B1mC,IAAvBV,EAAOonC,GACRpnC,EAAOonC,GACPpnC,EAAOwU,YACjB,CAwBA,MAAM6yB,GAAgCC,GAAS,EAAG,GAAKr/B,GACjDs/B,GAAiCD,GAAS,GAAK,IAAMphC,EAAAA,GAC3D,SAASohC,GAAS3hC,EAAKD,EAAK4B,GACxB,OAAQC,GAEAA,EAAI5B,EACG,EACP4B,EAAI7B,EACG,EACJ4B,EAAOoU,GAAS/V,EAAKD,EAAK6B,GAEzC,CCrFA,SAASigC,GAAavM,EAAMwM,GACxBxM,EAAKt1B,IAAM8hC,EAAW9hC,IACtBs1B,EAAKv1B,IAAM+hC,EAAW/hC,GAC1B,CAMA,SAASgiC,GAAYvK,EAAKwK,GACtBH,GAAarK,EAAIr2B,EAAG6gC,EAAU7gC,GAC9B0gC,GAAarK,EAAI/wB,EAAGu7B,EAAUv7B,EAClC,CAMA,SAASw7B,GAAkBpkC,EAAOqkC,GAC9BrkC,EAAM43B,UAAYyM,EAAYzM,UAC9B53B,EAAM4G,MAAQy9B,EAAYz9B,MAC1B5G,EAAM23B,YAAc0M,EAAY1M,YAChC33B,EAAM6U,OAASwvB,EAAYxvB,MAC/B,CCrBA,SAASyvB,GAAiBvQ,EAAO6D,EAAWhxB,EAAO+wB,EAAa6B,GAM5D,OAJAzF,EAAQuF,GADRvF,GAAS6D,EACiB,EAAIhxB,EAAO+wB,QACpBz6B,IAAbs8B,IACAzF,EAAQuF,GAAWvF,EAAO,EAAIyF,EAAU7B,IAErC5D,CACX,CAsBA,SAASwQ,GAAqB9M,EAAM+M,EAAU/lC,EAA8BoW,EAAQ4vB,GAAY,IAA/CppC,EAAKqpC,EAAUC,GAAUlmC,GAlB1E,SAAyBg5B,GAA8F,IAAxFG,EAAS18B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAG0L,EAAK1L,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAG2Z,EAAM3Z,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,GAAKs+B,EAAQt+B,UAAAgB,OAAA,EAAAhB,UAAA,QAAAgC,EAAE+mC,EAAU/oC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAGu8B,EAAMgN,EAAUvpC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAGu8B,EACzGvwB,GAAQtC,KAAKgzB,KACbA,EAAYtxB,WAAWsxB,GAEvBA,EADyBlZ,GAAU+lB,EAAWtiC,IAAKsiC,EAAWviC,IAAK01B,EAAY,KAChD6M,EAAWtiC,KAE9C,GAAyB,kBAAdy1B,EACP,OACJ,IAAID,EAAcjZ,GAAUulB,EAAW9hC,IAAK8hC,EAAW/hC,IAAK2S,GACxD4iB,IAASwM,IACTtM,GAAeC,GACnBH,EAAKt1B,IAAMmiC,GAAiB7M,EAAKt1B,IAAKy1B,EAAWhxB,EAAO+wB,EAAa6B,GACrE/B,EAAKv1B,IAAMoiC,GAAiB7M,EAAKv1B,IAAK01B,EAAWhxB,EAAO+wB,EAAa6B,EACzE,CAMIoL,CAAgBnN,EAAM+M,EAAWnpC,GAAMmpC,EAAWE,GAAWF,EAAWG,GAAYH,EAAW59B,MAAOiO,EAAQ4vB,EAClH,CAIA,MAAMI,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoBpL,EAAK6K,EAAYL,EAAWa,GACrDT,GAAqB5K,EAAIr2B,EAAGkhC,EAAYK,GAAOV,EAAYA,EAAU7gC,OAAIpG,EAAW8nC,EAAYA,EAAU1hC,OAAIpG,GAC9GqnC,GAAqB5K,EAAI/wB,EAAG47B,EAAYM,GAAOX,EAAYA,EAAUv7B,OAAI1L,EAAW8nC,EAAYA,EAAUp8B,OAAI1L,EAClH,CCjDA,SAAS+nC,GAAgBjlC,GACrB,OAA2B,IAApBA,EAAM43B,WAAmC,IAAhB53B,EAAM4G,KAC1C,CACA,SAASs+B,GAAYllC,GACjB,OAAOilC,GAAgBjlC,EAAMsD,IAAM2hC,GAAgBjlC,EAAM4I,EAC7D,CACA,SAASu8B,GAAW53B,EAAGC,GACnB,OAAOD,EAAEpL,MAAQqL,EAAErL,KAAOoL,EAAErL,MAAQsL,EAAEtL,GAC1C,CAIA,SAASkjC,GAAkB73B,EAAGC,GAC1B,OAAQ5O,KAAK4N,MAAMe,EAAEpL,OAASvD,KAAK4N,MAAMgB,EAAErL,MACvCvD,KAAK4N,MAAMe,EAAErL,OAAStD,KAAK4N,MAAMgB,EAAEtL,IAC3C,CACA,SAASmjC,GAAiB93B,EAAGC,GACzB,OAAO43B,GAAkB73B,EAAEjK,EAAGkK,EAAElK,IAAM8hC,GAAkB73B,EAAE3E,EAAG4E,EAAE5E,EACnE,CACA,SAAS08B,GAAY3L,GACjB,OAAOnC,GAAWmC,EAAIr2B,GAAKk0B,GAAWmC,EAAI/wB,EAC9C,CACA,SAAS28B,GAAgBh4B,EAAGC,GACxB,OAAQD,EAAEqqB,YAAcpqB,EAAEoqB,WACtBrqB,EAAE3G,QAAU4G,EAAE5G,OACd2G,EAAEoqB,cAAgBnqB,EAAEmqB,WAC5B,CC1BA,MAAM6N,GACFh6B,WAAAA,GACIM,KAAKq2B,QAAU,EACnB,CACAjhC,GAAAA,CAAIsxB,GACAhJ,GAAc1d,KAAKq2B,QAAS3P,GAC5BA,EAAKiT,gBACT,CACA/C,MAAAA,CAAOlQ,GAKH,GAJA7I,GAAW7d,KAAKq2B,QAAS3P,GACrBA,IAAS1mB,KAAK45B,WACd55B,KAAK45B,cAAWxoC,GAEhBs1B,IAAS1mB,KAAK65B,KAAM,CACpB,MAAMD,EAAW55B,KAAKq2B,QAAQr2B,KAAKq2B,QAAQjmC,OAAS,GAChDwpC,GACA55B,KAAKi2B,QAAQ2D,EAErB,CACJ,CACA1D,QAAAA,CAASxP,GACL,MAAMoT,EAAc95B,KAAKq2B,QAAQ0D,WAAWC,GAAWtT,IAASsT,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIvpC,EAAIypC,EAAazpC,GAAK,EAAGA,IAAK,CACnC,MAAM2pC,EAASh6B,KAAKq2B,QAAQhmC,GAC5B,IAAyB,IAArB2pC,EAAO5S,UAAqB,CAC5BwS,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA55B,KAAKi2B,QAAQ2D,IACN,EAKf,CACA3D,OAAAA,CAAQvP,EAAMuT,GACV,MAAML,EAAW55B,KAAK65B,KACtB,GAAInT,IAASkT,IAEb55B,KAAK45B,SAAWA,EAChB55B,KAAK65B,KAAOnT,EACZA,EAAKwT,OACDN,GAAU,CACVA,EAAStL,UAAYsL,EAASD,iBAC9BjT,EAAKiT,iBACLjT,EAAKyT,WAAaP,EACdK,IACAvT,EAAKyT,WAAWC,iBAAkB,GAElCR,EAASS,WACT3T,EAAK2T,SAAWT,EAASS,SACzB3T,EAAK2T,SAASzY,aACVgY,EAASU,iBAAmBV,EAAShY,cAEzC8E,EAAKlX,MAAQkX,EAAKlX,KAAK+qB,aACvB7T,EAAK8T,eAAgB,GAEzB,MAAM,UAAEC,GAAc/T,EAAK1b,SACT,IAAdyvB,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACI36B,KAAKq2B,QAAQ1lC,SAAS+1B,IAClB,MAAM,QAAE1b,EAAO,aAAE4vB,GAAiBlU,EAClC1b,EAAQqc,gBAAkBrc,EAAQqc,iBAC9BuT,GACAA,EAAa5vB,QAAQqc,gBACjBuT,EAAa5vB,QAAQqc,gBAC7B,GAER,CACAsS,cAAAA,GACI35B,KAAKq2B,QAAQ1lC,SAAS+1B,IAClBA,EAAK4H,UAAY5H,EAAKiT,gBAAe,EAAM,GAEnD,CAKAkB,kBAAAA,GACQ76B,KAAK65B,MAAQ75B,KAAK65B,KAAKQ,WACvBr6B,KAAK65B,KAAKQ,cAAWjpC,EAE7B,EC5GJ,MAAM0pC,GAAiBA,CAACr5B,EAAGC,IAAMD,EAAE9H,MAAQ+H,EAAE/H,MCG7C,MAAMohC,GACFr7B,WAAAA,GACIM,KAAKg7B,SAAW,GAChBh7B,KAAKi7B,SAAU,CACnB,CACA7lC,GAAAA,CAAIytB,GACAnF,GAAc1d,KAAKg7B,SAAUnY,GAC7B7iB,KAAKi7B,SAAU,CACnB,CACArE,MAAAA,CAAO/T,GACHhF,GAAW7d,KAAKg7B,SAAUnY,GAC1B7iB,KAAKi7B,SAAU,CACnB,CACAtqC,OAAAA,CAAQqE,GACJgL,KAAKi7B,SAAWj7B,KAAKg7B,SAASrY,KAAKmY,IACnC96B,KAAKi7B,SAAU,EACfj7B,KAAKg7B,SAASrqC,QAAQqE,EAC1B,ECZJ,SAASkmC,GAAmBtqC,GACxB,MAAMuqC,EAAiBra,GAAclwB,GAASA,EAAMvB,MAAQuB,EAC5D,O3CRmBjB,E2CQEwrC,E3CPdp6B,QAAQpR,GAAkB,kBAANA,GAAkBA,EAAEilB,KAAOjlB,EAAEyrC,S2CQlDD,EAAeC,UACfD,E3CVaxrC,K2CWvB,CCNA,SAASmb,GAAM9V,EAAUqmC,GACrB,MAAMzrC,EAAQqa,GAAK9T,MACbmlC,EAAe3oC,IAAmB,IAAlB,UAAEwB,GAAWxB,EAC/B,MAAM+lB,EAAUvkB,EAAYvE,EACxB8oB,GAAW2iB,IACX5kC,EAAY6kC,GACZtmC,EAAS0jB,EAAU2iB,GACvB,EAGJ,OADA7kC,EAAMb,KAAK2lC,GAAc,GAClB,IAAM7kC,EAAY6kC,EAC7B,CCUA,MAAMC,GAAU,CACZrpC,KAAM,kBACNspC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAEtBC,GAA4B,qBAAXvhC,aAAiDhJ,IAAvBgJ,OAAOwhC,YAClDC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAInV,GAAK,EACT,SAASoV,GAAyBzsC,EAAKiB,EAAeE,EAAQurC,GAC1D,MAAM,aAAEra,GAAiBpxB,EAErBoxB,EAAaryB,KACbmB,EAAOnB,GAAOqyB,EAAaryB,GAC3BiB,EAAc0rC,eAAe3sC,EAAK,GAC9B0sC,IACAA,EAAsB1sC,GAAO,GAGzC,CACA,SAAS4sC,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAe5sB,OAAS4sB,EACxB,OACJ,MAAM,cAAE5rC,GAAkB4rC,EAAepxB,QACzC,IAAKxa,EACD,OACJ,MAAMuxB,EAAWlB,GAAqBrwB,GACtC,GAAI4J,OAAOkiC,4BAA4Bva,EAAU,aAAc,CAC3D,MAAM,OAAEoK,EAAM,SAAEoJ,GAAa6G,EAAepxB,QAC5C5Q,OAAOmiC,+BAA+Bxa,EAAU,YAAavrB,IAAS21B,GAAUoJ,GACpF,CACA,MAAM,OAAEjS,GAAW8Y,EACf9Y,IAAWA,EAAO+Y,2BAClBF,GAAuC7Y,EAE/C,CACA,SAASkZ,GAAoB7pC,GAA6F,IAA5F,qBAAE8pC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBlqC,EACpH,OAAO,MACH+M,WAAAA,GAAuH,IAA3GkiB,EAAYxyB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGk0B,EAAMl0B,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAqB,OAAlBstC,QAA4C,IAAlBA,OAA2B,EAASA,IAIlG18B,KAAK4mB,GAAKA,KAIV5mB,KAAK88B,YAAc,EAOnB98B,KAAKg7B,SAAW,IAAIppC,IAKpBoO,KAAKgL,QAAU,CAAC,EAMhBhL,KAAK+8B,iBAAkB,EACvB/8B,KAAKgwB,oBAAqB,EAO1BhwB,KAAKw6B,eAAgB,EAKrBx6B,KAAKg9B,mBAAoB,EAKzBh9B,KAAKi9B,yBAA0B,EAK/Bj9B,KAAKk9B,kBAAmB,EAIxBl9B,KAAKm9B,uBAAwB,EAC7Bn9B,KAAKo9B,uBAAwB,EAK7Bp9B,KAAKu6B,YAAa,EAIlBv6B,KAAKq9B,OAAQ,EAKbr9B,KAAKs9B,YAAa,EAIlBt9B,KAAKu9B,sBAAuB,EAO5Bv9B,KAAKq8B,2BAA4B,EASjCr8B,KAAKw0B,UAAY,CAAEh9B,EAAG,EAAGsF,EAAG,GAI5BkD,KAAKw9B,cAAgB,IAAIruC,IACzB6Q,KAAKy9B,iBAAkB,EAEvBz9B,KAAK09B,iBAAkB,EACvB19B,KAAK29B,eAAiB,IAAM39B,KAAKnK,SACjCmK,KAAK49B,2BAA4B,EACjC59B,KAAK69B,kBAAoB,KACjB79B,KAAKu6B,aACLv6B,KAAKu6B,YAAa,EAClBv6B,KAAK89B,oBACT,EAOJ99B,KAAK+9B,iBAAmB,KACpB/9B,KAAK49B,2BAA4B,EAK7BjC,KACAJ,GAAQC,WACJD,GAAQE,qBACJF,GAAQG,uBACJ,GAEhB17B,KAAKg+B,MAAMrtC,QAAQstC,IACnBj+B,KAAKg+B,MAAMrtC,QAAQutC,IACnBl+B,KAAKg+B,MAAMrtC,QAAQwtC,IACnBn+B,KAAKg+B,MAAMrtC,QAAQytC,IACfzC,IACAvhC,OAAOwhC,YAAYyC,OAAO9C,GAC9B,EAKJv7B,KAAKs+B,yBAA2B,EAChCt+B,KAAKu+B,cAAe,EACpBv+B,KAAKw+B,WAAY,EACjBx+B,KAAKy+B,kBAAoB,EAKzBz+B,KAAK0+B,YAAc,IAAIvvC,IACvB6Q,KAAK4hB,aAAeA,EACpB5hB,KAAKwP,KAAO8T,EAASA,EAAO9T,MAAQ8T,EAAStjB,KAC7CA,KAAK2+B,KAAOrb,EAAS,IAAIA,EAAOqb,KAAMrb,GAAU,GAChDtjB,KAAKsjB,OAASA,EACdtjB,KAAKrG,MAAQ2pB,EAASA,EAAO3pB,MAAQ,EAAI,EACzC,IAAK,IAAItJ,EAAI,EAAGA,EAAI2P,KAAK2+B,KAAKvuC,OAAQC,IAClC2P,KAAK2+B,KAAKtuC,GAAGktC,sBAAuB,EAEpCv9B,KAAKwP,OAASxP,OACdA,KAAKg+B,MAAQ,IAAIjD,GACzB,CACA3S,gBAAAA,CAAiBvoB,EAAMke,GAInB,OAHK/d,KAAKw9B,cAAchuC,IAAIqQ,IACxBG,KAAKw9B,cAAc/tC,IAAIoQ,EAAM,IAAIie,IAE9B9d,KAAKw9B,cAAcnuC,IAAIwQ,GAAMzK,IAAI2oB,EAC5C,CACA6gB,eAAAA,CAAgB/+B,GACZ,MAAMg/B,EAAsB7+B,KAAKw9B,cAAcnuC,IAAIwQ,GAAM,QAAA4S,EAAArjB,UAAAgB,OADpC0uC,EAAI,IAAAhvC,MAAA2iB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJmsB,EAAInsB,EAAA,GAAAvjB,UAAAujB,GAEzBksB,GAAuBA,EAAoB7gB,UAAU8gB,EACzD,CACAC,YAAAA,CAAal/B,GACT,OAAOG,KAAKw9B,cAAchuC,IAAIqQ,EAClC,CAIAmnB,KAAAA,CAAMsH,GAAqD,IAA3CkM,EAAaprC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG4Q,KAAKwP,KAAKiuB,gBACtC,GAAIz9B,KAAKsuB,SACL,OCnPhB,IAAsB50B,EDoPVsG,KAAKq9B,OCpPK3jC,EDoPgB40B,aCnPR0Q,YAAkC,QAApBtlC,EAAQulC,QDoPxCj/B,KAAKsuB,SAAWA,EAChB,MAAM,SAAEiH,EAAQ,OAAEpJ,EAAM,cAAE37B,GAAkBwP,KAAKgL,QASjD,GARIxa,IAAkBA,EAAcU,SAChCV,EAAcw2B,MAAMsH,GAExBtuB,KAAKwP,KAAKwuB,MAAM5oC,IAAI4K,MACpBA,KAAKsjB,QAAUtjB,KAAKsjB,OAAO0X,SAAS5lC,IAAI4K,MACpCw6B,IAAkBrO,GAAUoJ,KAC5Bv1B,KAAKw6B,eAAgB,GAErBiC,EAAsB,CACtB,IAAIyC,EACJ,MAAMC,EAAsBA,IAAOn/B,KAAKwP,KAAK4tB,uBAAwB,EACrEX,EAAqBnO,GAAU,KAC3BtuB,KAAKwP,KAAK4tB,uBAAwB,EAClC8B,GAAeA,IACfA,EAAcp0B,GAAMq0B,EAAqB,KACrCnL,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/Cj0B,KAAKg+B,MAAMrtC,QAAQyuC,IACvB,GAER,CACI7J,GACAv1B,KAAKwP,KAAK6vB,mBAAmB9J,EAAUv1B,OAGd,IAAzBA,KAAKgL,QAAQgP,SACbxpB,IACC+kC,GAAYpJ,IACbnsB,KAAKooB,iBAAiB,aAAa7rB,IAA+E,IAA9E,MAAErI,EAAK,iBAAE0/B,EAAgB,yBAAE0L,EAA0BnT,OAAQoT,GAAYhjC,EACzG,GAAIyD,KAAKw/B,yBAGL,OAFAx/B,KAAKgJ,YAAS5X,OACd4O,KAAKy/B,oBAAiBruC,GAI1B,MAAMsuC,EAAmB1/B,KAAKgL,QAAQ/X,YAClCzC,EAAciC,wBACdktC,IACE,uBAAEC,EAAsB,0BAAEC,GAA+BrvC,EAAce,WAKvEuuC,GAAiB9/B,KAAK+/B,eACvBxG,GAAiBv5B,KAAK+/B,aAAcR,IACrCD,EAMEU,GAAgCpM,GAAoB0L,EAC1D,GAAIt/B,KAAKgL,QAAQi1B,YACZjgC,KAAKm6B,YAAcn6B,KAAKm6B,WAAW7L,UACpC0R,GACCpM,IACIkM,IAAkB9/B,KAAKu2B,kBAAoB,CAC5Cv2B,KAAKm6B,aACLn6B,KAAK46B,aAAe56B,KAAKm6B,WACzBn6B,KAAK46B,aAAaA,kBAAexpC,GAErC4O,KAAKkgC,mBAAmBhsC,EAAO8rC,GAC/B,MAAMG,EAAmB,IAClBntC,EAAmB0sC,EAAkB,UACxCtmB,OAAQwmB,EACRhgC,WAAYigC,IAEZrvC,EAAcwxB,oBACdhiB,KAAKgL,QAAQi1B,cACbE,EAAiBr1B,MAAQ,EACzBq1B,EAAiBjuC,MAAO,GAE5B8N,KAAK+f,eAAeogB,EACxB,MAOSvM,GACDwL,GAAgBp/B,MAEhBA,KAAKw2B,UAAYx2B,KAAKgL,QAAQqc,gBAC9BrnB,KAAKgL,QAAQqc,iBAGrBrnB,KAAK+/B,aAAeR,CAAS,GAGzC,CACApY,OAAAA,GACInnB,KAAKgL,QAAQuqB,UAAYv1B,KAAKg2B,aAC9Bh2B,KAAKwP,KAAKwuB,MAAMpH,OAAO52B,MACvB,MAAMm2B,EAAQn2B,KAAKo2B,WACnBD,GAASA,EAAMS,OAAO52B,MACtBA,KAAKsjB,QAAUtjB,KAAKsjB,OAAO0X,SAAS1lC,OAAO0K,MAC3CA,KAAKsuB,cAAWl9B,EAChBqF,EAAYuJ,KAAK+9B,iBACrB,CAEAqC,WAAAA,GACIpgC,KAAKm9B,uBAAwB,CACjC,CACAkD,aAAAA,GACIrgC,KAAKm9B,uBAAwB,CACjC,CACAmD,eAAAA,GACI,OAAOtgC,KAAKm9B,uBAAyBn9B,KAAKo9B,qBAC9C,CACAoC,sBAAAA,GACI,OAAQx/B,KAAKgwB,oBACRhwB,KAAKsjB,QAAUtjB,KAAKsjB,OAAOkc,2BAC5B,CACR,CAEAe,WAAAA,GACQvgC,KAAKsgC,oBAETtgC,KAAKu6B,YAAa,EAClBv6B,KAAKg+B,OAASh+B,KAAKg+B,MAAMrtC,QAAQ6vC,IACjCxgC,KAAK88B,cACT,CACA2D,oBAAAA,GACI,MAAM,cAAEjwC,GAAkBwP,KAAKgL,QAC/B,OAAOxa,GAAiBA,EAAce,WAAW0hC,iBACrD,CACA+C,UAAAA,GAAyC,IAA9B0K,IAAqBtxC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAE5B,GADA4Q,KAAKwP,KAAKiuB,iBAAkB,EACxBz9B,KAAKwP,KAAK8wB,kBAEV,YADAtgC,KAAKgL,QAAQqc,gBAAkBrnB,KAAKgL,QAAQqc,kBAoBhD,GALIjtB,OAAOmiC,iCACNv8B,KAAKq8B,2BACNF,GAAuCn8B,OAE1CA,KAAKwP,KAAK+qB,YAAcv6B,KAAKwP,KAAK+wB,cAC/BvgC,KAAKw6B,cACL,OACJx6B,KAAKw6B,eAAgB,EACrB,IAAK,IAAInqC,EAAI,EAAGA,EAAI2P,KAAK2+B,KAAKvuC,OAAQC,IAAK,CACvC,MAAMq2B,EAAO1mB,KAAK2+B,KAAKtuC,GACvBq2B,EAAK6W,sBAAuB,EAC5B7W,EAAKyM,aAAa,YACdzM,EAAK1b,QAAQi1B,YACbvZ,EAAKsP,YAAW,EAExB,CACA,MAAM,SAAET,EAAQ,OAAEpJ,GAAWnsB,KAAKgL,QAClC,QAAiB5Z,IAAbmkC,IAA2BpJ,EAC3B,OACJ,MAAM8G,EAAoBjzB,KAAKygC,uBAC/BzgC,KAAK2gC,2BAA6B1N,EAC5BA,EAAkBjzB,KAAK4hB,aAAc,SACrCxwB,EACN4O,KAAK4gC,iBACLF,GAAyB1gC,KAAK4+B,gBAAgB,aAClD,CACA/oC,MAAAA,GACImK,KAAK09B,iBAAkB,EAKvB,GAJyB19B,KAAKsgC,kBAQ1B,OAHAtgC,KAAKqgC,gBACLrgC,KAAK89B,yBACL99B,KAAKg+B,MAAMrtC,QAAQkwC,IAGlB7gC,KAAKu6B,YACNv6B,KAAKg+B,MAAMrtC,QAAQmwC,IAEvB9gC,KAAKu6B,YAAa,EAIlBv6B,KAAKg+B,MAAMrtC,QAAQowC,IAKnB/gC,KAAKg+B,MAAMrtC,QAAQyiC,IAKnBpzB,KAAKg+B,MAAMrtC,QAAQqwC,IACnBhhC,KAAK89B,oBAML,MAAM3nC,EAAM8T,GAAK9T,MACjBX,EAAUtB,MAAQuG,GAAM,EAAG,IAAO,GAAItE,EAAMX,EAAUrB,WACtDqB,EAAUrB,UAAYgC,EACtBX,EAAUpB,cAAe,EACzBsC,EAAWb,OAAON,QAAQC,GAC1BkB,EAAWZ,UAAUP,QAAQC,GAC7BkB,EAAWX,OAAOR,QAAQC,GAC1BA,EAAUpB,cAAe,CAC7B,CACAuhC,SAAAA,GACS31B,KAAK09B,kBACN19B,KAAK09B,iBAAkB,EACvB1I,GAAUr/B,KAAKqK,KAAK29B,gBAE5B,CACAG,iBAAAA,GACI99B,KAAKg+B,MAAMrtC,QAAQswC,IACnBjhC,KAAK0+B,YAAY/tC,QAAQuwC,GAC7B,CACAC,wBAAAA,GACSnhC,KAAK49B,4BACN59B,KAAK49B,2BAA4B,EACjCpnC,EAAMV,UAAUkK,KAAK+9B,kBAAkB,GAAO,GAEtD,CACApH,yBAAAA,GAMIngC,EAAMR,YAAW,KACTgK,KAAKw6B,cACLx6B,KAAKwP,KAAKmmB,YAGV31B,KAAKwP,KAAKquB,mBACd,GAER,CAIA+C,cAAAA,IACQ5gC,KAAKq6B,UAAar6B,KAAKsuB,WAE3BtuB,KAAKq6B,SAAWr6B,KAAKkxB,UACzB,CACAkC,YAAAA,GACI,IAAKpzB,KAAKsuB,SACN,OAGJ,GADAtuB,KAAKmzB,iBACCnzB,KAAKgL,QAAQo2B,sBAAuBphC,KAAKw2B,YAC1Cx2B,KAAKw6B,cACN,OASJ,GAAIx6B,KAAKm6B,aAAen6B,KAAKm6B,WAAW7L,SACpC,IAAK,IAAIj+B,EAAI,EAAGA,EAAI2P,KAAK2+B,KAAKvuC,OAAQC,IAAK,CAC1B2P,KAAK2+B,KAAKtuC,GAClB8iC,cACT,CAEJ,MAAMkO,EAAarhC,KAAKmsB,OACxBnsB,KAAKmsB,OAASnsB,KAAKkxB,SAAQ,GAC3BlxB,KAAKshC,gB1BngBC,CACd9pC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0BqgB7B4J,KAAKw6B,eAAgB,EACrBx6B,KAAKy0B,qBAAkBrjC,EACvB4O,KAAK4+B,gBAAgB,UAAW5+B,KAAKmsB,OAAOgE,WAC5C,MAAM,cAAE3/B,GAAkBwP,KAAKgL,QAC/Bxa,GACIA,EAAcwtB,OAAO,gBAAiBhe,KAAKmsB,OAAOgE,UAAWkR,EAAaA,EAAWlR,eAAY/+B,EACzG,CACA+hC,YAAAA,GAAgC,IAAnBoO,EAAKnyC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,UACboP,EAAmBuC,QAAQf,KAAKgL,QAAQw2B,cAAgBxhC,KAAKsuB,UAMjE,GALItuB,KAAK8xB,QACL9xB,KAAK8xB,OAAOgL,cAAgB98B,KAAKwP,KAAKstB,aACtC98B,KAAK8xB,OAAOyP,QAAUA,IACtB/iC,GAAmB,GAEnBA,EAAkB,CAClB,MAAMijC,EAAS7E,EAAkB58B,KAAKsuB,UACtCtuB,KAAK8xB,OAAS,CACVgL,YAAa98B,KAAKwP,KAAKstB,YACvByE,QACAE,SACA5rB,OAAQ8mB,EAAc38B,KAAKsuB,UAC3BoT,QAAS1hC,KAAK8xB,OAAS9xB,KAAK8xB,OAAO2P,OAASA,EAEpD,CACJ,CACA5E,cAAAA,GACI,IAAKA,EACD,OACJ,MAAM8E,EAAmB3hC,KAAKw6B,eAC1Bx6B,KAAKu9B,sBACLv9B,KAAKgL,QAAQo2B,oBACXQ,EAAgB5hC,KAAKy0B,kBAAoB2E,GAAYp5B,KAAKy0B,iBAC1DxB,EAAoBjzB,KAAKygC,uBACzBoB,EAAyB5O,EACzBA,EAAkBjzB,KAAK4hB,aAAc,SACrCxwB,EACA0wC,EAA8BD,IAA2B7hC,KAAK2gC,2BAChEgB,IACCC,GACGvU,GAAartB,KAAK4hB,eAClBkgB,KACJjF,EAAe78B,KAAKsuB,SAAUuT,GAC9B7hC,KAAKu9B,sBAAuB,EAC5Bv9B,KAAK25B,iBAEb,CACAzI,OAAAA,GAAgC,IAAxB6Q,IAAe3yC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GACnB,MAAM4yC,EAAUhiC,KAAK+xB,iBACrB,IAAI5B,EAAYnwB,KAAKiiC,oBAAoBD,GAi+BrD,IAAkBnU,EAv9BN,OAJIkU,IACA5R,EAAYnwB,KAAK+hC,gBAAgB5R,IA29B7C+R,IADcrU,EAx9BGsC,GAy9BH34B,GACd0qC,GAAUrU,EAAI/wB,GAz9BC,CACHggC,YAAa98B,KAAKwP,KAAKstB,YACvBqF,YAAaH,EACb7R,YACAvO,aAAc,CAAC,EACfje,OAAQ3D,KAAK4mB,GAErB,CACAmL,cAAAA,GACI,IAAI7yB,EACJ,MAAM,cAAE1O,GAAkBwP,KAAKgL,QAC/B,IAAKxa,EACD,M1B1kBE,CACdgH,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0B4kB7B,MAAMy3B,EAAMr9B,EAAciZ,qBAE1B,MADgD,QAAtBvK,EAAKc,KAAK8xB,cAA2B,IAAP5yB,OAAgB,EAASA,EAAGwiC,UAAY1hC,KAAK2+B,KAAKxvB,KAAKizB,KACzF,CAElB,MAAM,OAAEtQ,GAAW9xB,KAAKwP,KACpBsiB,IACA9D,GAAcH,EAAIr2B,EAAGs6B,EAAOjc,OAAOre,GACnCw2B,GAAcH,EAAI/wB,EAAGg1B,EAAOjc,OAAO/Y,GAE3C,CACA,OAAO+wB,CACX,CACAoU,mBAAAA,CAAoBpU,GAChB,IAAI3uB,EACJ,MAAMmjC,E1BzlBA,CACd7qC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0B4lB7B,GADAgiC,GAAYiK,EAAkBxU,GACH,QAAtB3uB,EAAKc,KAAK8xB,cAA2B,IAAP5yB,OAAgB,EAASA,EAAGwiC,QAC3D,OAAOW,EAMX,IAAK,IAAIhyC,EAAI,EAAGA,EAAI2P,KAAK2+B,KAAKvuC,OAAQC,IAAK,CACvC,MAAMq2B,EAAO1mB,KAAK2+B,KAAKtuC,IACjB,OAAEyhC,EAAM,QAAE9mB,GAAY0b,EACxBA,IAAS1mB,KAAKwP,MAAQsiB,GAAU9mB,EAAQw2B,eAKpC1P,EAAO4P,SACPtJ,GAAYiK,EAAkBxU,GAElCG,GAAcqU,EAAiB7qC,EAAGs6B,EAAOjc,OAAOre,GAChDw2B,GAAcqU,EAAiBvlC,EAAGg1B,EAAOjc,OAAO/Y,GAExD,CACA,OAAOulC,CACX,CACAC,cAAAA,CAAezU,GAA4B,IAAvB0U,EAAanzC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAC7B,MAAMozC,E1BpnBA,CACdhrC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0BsnB7BgiC,GAAYoK,EAAgB3U,GAC5B,IAAK,IAAIx9B,EAAI,EAAGA,EAAI2P,KAAK2+B,KAAKvuC,OAAQC,IAAK,CACvC,MAAMq2B,EAAO1mB,KAAK2+B,KAAKtuC,IAClBkyC,GACD7b,EAAK1b,QAAQw2B,cACb9a,EAAKoL,QACLpL,IAASA,EAAKlX,MACd6e,GAAamU,EAAgB,CACzBhrC,GAAIkvB,EAAKoL,OAAOjc,OAAOre,EACvBsF,GAAI4pB,EAAKoL,OAAOjc,OAAO/Y,IAG1BuwB,GAAa3G,EAAK9E,eAEvByM,GAAamU,EAAgB9b,EAAK9E,aACtC,CAIA,OAHIyL,GAAartB,KAAK4hB,eAClByM,GAAamU,EAAgBxiC,KAAK4hB,cAE/B4gB,CACX,CACAT,eAAAA,CAAgBlU,GACZ,MAAM4U,E1B3oBA,CACdjrC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0B6oB7BgiC,GAAYqK,EAAqB5U,GACjC,IAAK,IAAIx9B,EAAI,EAAGA,EAAI2P,KAAK2+B,KAAKvuC,OAAQC,IAAK,CACvC,MAAMq2B,EAAO1mB,KAAK2+B,KAAKtuC,GACvB,IAAKq2B,EAAK4H,SACN,SACJ,IAAKjB,GAAa3G,EAAK9E,cACnB,SACJwL,GAAS1G,EAAK9E,eAAiB8E,EAAKka,iBACpC,MAAM1H,E1BppBJ,CACd1hC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0BupBzBgiC,GAAYc,EADIxS,EAAKqL,kBAErBkH,GAAoBwJ,EAAqB/b,EAAK9E,aAAc8E,EAAK2T,SAAW3T,EAAK2T,SAASlK,eAAY/+B,EAAW8nC,EACrH,CAIA,OAHI7L,GAAartB,KAAK4hB,eAClBqX,GAAoBwJ,EAAqBziC,KAAK4hB,cAE3C6gB,CACX,CACAC,cAAAA,CAAexuC,GACX8L,KAAK2iC,YAAczuC,EACnB8L,KAAKwP,KAAK2xB,2BACVnhC,KAAKg9B,mBAAoB,CAC7B,CACAnH,UAAAA,CAAW7qB,GACPhL,KAAKgL,QAAU,IACRhL,KAAKgL,WACLA,EACHyvB,eAAiCrpC,IAAtB4Z,EAAQyvB,WAA0BzvB,EAAQyvB,UAE7D,CACAoG,iBAAAA,GACI7gC,KAAK8xB,YAAS1gC,EACd4O,KAAKmsB,YAAS/6B,EACd4O,KAAKq6B,cAAWjpC,EAChB4O,KAAK2gC,gCAA6BvvC,EAClC4O,KAAK2iC,iBAAcvxC,EACnB4O,KAAKgJ,YAAS5X,EACd4O,KAAKw6B,eAAgB,CACzB,CACAoI,kCAAAA,GACS5iC,KAAK6iC,gBAQN7iC,KAAK6iC,eAAevE,2BACpB9oC,EAAUrB,WACV6L,KAAK6iC,eAAe3E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5B4E,EAAkB1zC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GACjC,IAAI8P,EAMJ,MAAM26B,EAAO75B,KAAK+iC,UAClB/iC,KAAKg9B,oBAAsBh9B,KAAKg9B,kBAAoBnD,EAAKmD,mBACzDh9B,KAAKk9B,mBAAqBl9B,KAAKk9B,iBAAmBrD,EAAKqD,kBACvDl9B,KAAKi9B,0BAA4Bj9B,KAAKi9B,wBAA0BpD,EAAKoD,yBACrE,MAAM+F,EAAWjiC,QAAQf,KAAK46B,eAAiB56B,OAAS65B,EAWxD,KANkBiJ,GACbE,GAAYhjC,KAAKi9B,yBAClBj9B,KAAKg9B,oBACmB,QAAtB99B,EAAKc,KAAKsjB,cAA2B,IAAPpkB,OAAgB,EAASA,EAAG89B,oBAC5Dh9B,KAAKijC,gCACLjjC,KAAKwP,KAAK4tB,uBAEV,OACJ,MAAM,OAAEjR,EAAM,SAAEoJ,GAAav1B,KAAKgL,QAIlC,GAAKhL,KAAKmsB,SAAYA,GAAUoJ,GAAhC,CAQA,GANAv1B,KAAKs+B,yBAA2B9oC,EAAUrB,WAMrC6L,KAAK2iC,cAAgB3iC,KAAKy/B,eAAgB,CAC3C,MAAMoD,EAAiB7iC,KAAKkjC,6BACxBL,GACAA,EAAe1W,QACY,IAA3BnsB,KAAKy+B,mBACLz+B,KAAK6iC,eAAiBA,EACtB7iC,KAAK4iC,qCACL5iC,KAAKy/B,e1B5uBP,CACdjoC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0B8uBrB4J,KAAKmjC,qB1B7uBP,CACd3rC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0B+uBrBg2B,GAAqBpsB,KAAKmjC,qBAAsBnjC,KAAKmsB,OAAOgE,UAAW0S,EAAe1W,OAAOgE,WAC7FiI,GAAYp4B,KAAKy/B,eAAgBz/B,KAAKmjC,uBAGtCnjC,KAAK6iC,eAAiB7iC,KAAKy/B,oBAAiBruC,CAEpD,CAKA,GAAK4O,KAAKy/B,gBAAmBz/B,KAAK2iC,YAAlC,C5B9tBZ,IAAyB35B,EAAQijB,EAAU3I,E4BuwB/B,GApCKtjB,KAAKgJ,SACNhJ,KAAKgJ,O1B/vBH,CACdxR,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0BiwBzB4J,KAAKojC,qB1BhwBH,CACd5rC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,K0BswBzB4J,KAAKy/B,gBACLz/B,KAAKmjC,sBACLnjC,KAAK6iC,gBACL7iC,KAAK6iC,eAAe75B,QACpBhJ,KAAK4iC,qC5B9uBI55B,E4B+uBOhJ,KAAKgJ,O5B/uBJijB,E4B+uBYjsB,KAAKy/B,e5B/uBPnc,E4B+uBuBtjB,KAAK6iC,eAAe75B,O5B9uBlFgjB,GAAiBhjB,EAAOxR,EAAGy0B,EAASz0B,EAAG8rB,EAAO9rB,GAC9Cw0B,GAAiBhjB,EAAOlM,EAAGmvB,EAASnvB,EAAGwmB,EAAOxmB,I4BkvB7BkD,KAAK2iC,aACN5hC,QAAQf,KAAK46B,cAEb56B,KAAKgJ,OAAShJ,KAAKsiC,eAAetiC,KAAKmsB,OAAOgE,WAG9CiI,GAAYp4B,KAAKgJ,OAAQhJ,KAAKmsB,OAAOgE,WAEzCvC,GAAc5tB,KAAKgJ,OAAQhJ,KAAK2iC,cAMhCvK,GAAYp4B,KAAKgJ,OAAQhJ,KAAKmsB,OAAOgE,WAKrCnwB,KAAKijC,+BAAgC,CACrCjjC,KAAKijC,gCAAiC,EACtC,MAAMJ,EAAiB7iC,KAAKkjC,6BACxBL,GACA9hC,QAAQ8hC,EAAejI,gBACnB75B,QAAQf,KAAK46B,gBAChBiI,EAAe73B,QAAQw2B,cACxBqB,EAAe75B,QACY,IAA3BhJ,KAAKy+B,mBACLz+B,KAAK6iC,eAAiBA,EACtB7iC,KAAK4iC,qCACL5iC,KAAKy/B,e1B7yBP,CACdjoC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0B+yBrB4J,KAAKmjC,qB1B9yBP,CACd3rC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0BgzBrBg2B,GAAqBpsB,KAAKmjC,qBAAsBnjC,KAAKgJ,OAAQ65B,EAAe75B,QAC5EovB,GAAYp4B,KAAKy/B,eAAgBz/B,KAAKmjC,uBAGtCnjC,KAAK6iC,eAAiB7iC,KAAKy/B,oBAAiBruC,CAEpD,CAIIuqC,IACAJ,GAAQE,sBAhEF,CA5BA,CA8Fd,CACAyH,0BAAAA,GACI,GAAKljC,KAAKsjB,SACN8J,GAASptB,KAAKsjB,OAAO1B,gBACrB0L,GAAettB,KAAKsjB,OAAO1B,cAG/B,OAAI5hB,KAAKsjB,OAAO+f,eACLrjC,KAAKsjB,OAGLtjB,KAAKsjB,OAAO4f,4BAE3B,CACAG,YAAAA,GACI,OAAOtiC,SAASf,KAAKy/B,gBACjBz/B,KAAK2iC,aACL3iC,KAAKgL,QAAQi1B,aACbjgC,KAAKmsB,OACb,CACAgS,cAAAA,GACI,IAAIj/B,EACJ,MAAM26B,EAAO75B,KAAK+iC,UACZC,EAAWjiC,QAAQf,KAAK46B,eAAiB56B,OAAS65B,EACxD,IAAIyJ,GAAU,EAuBd,IAlBItjC,KAAKg9B,oBAA6C,QAAtB99B,EAAKc,KAAKsjB,cAA2B,IAAPpkB,OAAgB,EAASA,EAAG89B,sBACtFsG,GAAU,GAMVN,IACChjC,KAAKi9B,yBAA2Bj9B,KAAKk9B,oBACtCoG,GAAU,GAMVtjC,KAAKs+B,2BAA6B9oC,EAAUrB,YAC5CmvC,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEnX,EAAM,SAAEoJ,GAAav1B,KAAKgL,QAWlC,GANAhL,KAAK+8B,gBAAkBh8B,QAASf,KAAKsjB,QAAUtjB,KAAKsjB,OAAOyZ,iBACvD/8B,KAAKu2B,kBACLv2B,KAAKujC,kBACJvjC,KAAK+8B,kBACN/8B,KAAK2iC,YAAc3iC,KAAKy/B,oBAAiBruC,IAExC4O,KAAKmsB,SAAYA,IAAUoJ,EAC5B,OAKJ6C,GAAYp4B,KAAKshC,gBAAiBthC,KAAKmsB,OAAOgE,WAI9C,MAAMqT,EAAiBxjC,KAAKw0B,UAAUh9B,EAChCisC,EAAiBzjC,KAAKw0B,UAAU13B,GtBp2BlD,SAAyB+wB,EAAK2G,EAAWkP,GAAsC,IAA5BC,EAAkBv0C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GACjE,MAAMw0C,EAAaF,EAAStzC,OAC5B,IAAKwzC,EACD,OAGJ,IAAIld,EACAxyB,EAFJsgC,EAAUh9B,EAAIg9B,EAAU13B,EAAI,EAG5B,IAAK,IAAIzM,EAAI,EAAGA,EAAIuzC,EAAYvzC,IAAK,CACjCq2B,EAAOgd,EAASrzC,GAChB6D,EAAQwyB,EAAK+N,gBAKb,MAAM,cAAEjkC,GAAkBk2B,EAAK1b,QAC3Bxa,GACAA,EAAcO,MAAMmiC,OACkB,aAAtC1iC,EAAcO,MAAMmiC,MAAM2Q,UAG1BF,GACAjd,EAAK1b,QAAQw2B,cACb9a,EAAKoL,QACLpL,IAASA,EAAKlX,MACd6e,GAAaR,EAAK,CACdr2B,GAAIkvB,EAAKoL,OAAOjc,OAAOre,EACvBsF,GAAI4pB,EAAKoL,OAAOjc,OAAO/Y,IAG3B5I,IAEAsgC,EAAUh9B,GAAKtD,EAAMsD,EAAEsD,MACvB05B,EAAU13B,GAAK5I,EAAM4I,EAAEhC,MAEvB8yB,GAAcC,EAAK35B,IAEnByvC,GAAsBtW,GAAa3G,EAAK9E,eACxCyM,GAAaR,EAAKnH,EAAK9E,cAE/B,CAKI4S,EAAUh9B,EAAIu2B,IACdyG,EAAUh9B,EAAIs2B,KACd0G,EAAUh9B,EAAI,GAEdg9B,EAAU13B,EAAIixB,IACdyG,EAAU13B,EAAIgxB,KACd0G,EAAU13B,EAAI,EAEtB,CsBozBYgnC,CAAgB9jC,KAAKshC,gBAAiBthC,KAAKw0B,UAAWx0B,KAAK2+B,KAAMqE,IAK7DnJ,EAAK1N,QACJ0N,EAAK7wB,QACgB,IAArBhJ,KAAKw0B,UAAUh9B,GAAgC,IAArBwI,KAAKw0B,UAAU13B,IAC1C+8B,EAAK7wB,OAAS6wB,EAAK1N,OAAOgE,UAC1B0J,EAAKuJ,qB1Bj5BH,CACd5rC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,K0Bo5B7B,MAAM,OAAE4S,GAAW6wB,EACd7wB,GAYAhJ,KAAKy0B,iBAAoBz0B,KAAK+jC,qBAI/BzL,GAAkBt4B,KAAK+jC,oBAAoBvsC,EAAGwI,KAAKy0B,gBAAgBj9B,GACnE8gC,GAAkBt4B,KAAK+jC,oBAAoBjnC,EAAGkD,KAAKy0B,gBAAgB33B,IAJnEkD,KAAKgkC,yBAeTjY,GAAa/rB,KAAKy0B,gBAAiBz0B,KAAKshC,gBAAiBt4B,EAAQhJ,KAAK4hB,cAClE5hB,KAAKw0B,UAAUh9B,IAAMgsC,GACrBxjC,KAAKw0B,UAAU13B,IAAM2mC,GACpBhK,GAAgBz5B,KAAKy0B,gBAAgBj9B,EAAGwI,KAAK+jC,oBAAoBvsC,IACjEiiC,GAAgBz5B,KAAKy0B,gBAAgB33B,EAAGkD,KAAK+jC,oBAAoBjnC,KAClEkD,KAAKu+B,cAAe,EACpBv+B,KAAK25B,iBACL35B,KAAK4+B,gBAAgB,mBAAoB51B,IAKzC2yB,IACAJ,GAAQG,0BAnCJ17B,KAAK+jC,sBACL/jC,KAAKgkC,yBACLhkC,KAAK25B,iBAmCjB,CACAe,IAAAA,GACI16B,KAAKw+B,WAAY,CAErB,CACAtE,IAAAA,GACIl6B,KAAKw+B,WAAY,CAErB,CACA7E,cAAAA,GAAiC,IAAlBsK,IAAS70C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GACpB,IAAI8P,EAEJ,GADsC,QAArCA,EAAKc,KAAKgL,QAAQxa,qBAAkC,IAAP0O,GAAyBA,EAAGy6B,iBACtEsK,EAAW,CACX,MAAM9N,EAAQn2B,KAAKo2B,WACnBD,GAASA,EAAMwD,gBACnB,CACI35B,KAAK46B,eAAiB56B,KAAK46B,aAAatM,WACxCtuB,KAAK46B,kBAAexpC,EAE5B,CACA4yC,sBAAAA,GACIhkC,KAAK+jC,oB1Bz9BG,CAChBvsC,EAPoB,CACpBs0B,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,GAIb/uB,EARoB,CACpBgvB,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,I0B49BL7rB,KAAKy0B,gB1B19BG,CAChBj9B,EAPoB,CACpBs0B,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,GAIb/uB,EARoB,CACpBgvB,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,I0B69BL7rB,KAAKkkC,6B1B39BG,CAChB1sC,EAPoB,CACpBs0B,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,GAIb/uB,EARoB,CACpBgvB,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,G0B89BT,CACAqU,kBAAAA,CAAmBhsC,GAA6C,IAAtC8rC,EAA4B5wC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAClD,MAAMirC,EAAWr6B,KAAKq6B,SAChB8J,EAAuB9J,EACvBA,EAASzY,aACT,CAAC,EACDwiB,EAAc,IAAKpkC,KAAK4hB,cACxB+gB,E1Bn+BE,CAChBnrC,EAPoB,CACpBs0B,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,GAIb/uB,EARoB,CACpBgvB,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,I0Bs+BA7rB,KAAK6iC,gBACL7iC,KAAK6iC,eAAe73B,QAAQi1B,aAC7BjgC,KAAKy/B,eAAiBz/B,KAAKmjC,0BAAuB/xC,GAEtD4O,KAAKijC,gCAAkCjD,EACvC,MAAMqE,E1Bp+BA,CACd7sC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0Bw+BvBkuC,GAFiBjK,EAAWA,EAAS12B,YAASvS,MAC/B4O,KAAKmsB,OAASnsB,KAAKmsB,OAAOxoB,YAASvS,GAElD+kC,EAAQn2B,KAAKo2B,WACbmO,GAAgBpO,GAASA,EAAME,QAAQjmC,QAAU,EACjDo0C,EAAyBzjC,QAAQujC,IAClCC,IAC0B,IAA3BvkC,KAAKgL,QAAQyvB,YACZz6B,KAAK2+B,KAAKxvB,KAAKs1B,KAEpB,IAAIC,EADJ1kC,KAAKy+B,kBAAoB,EAEzBz+B,KAAK2kC,eAAkBpzB,IACnB,MAAMnF,EAAWmF,EAAS,INj/B1C,IAAmB9P,EAAGC,EM0/CNmC,EAAQvF,EAAM+N,EAAIpU,EAxgBlB2sC,GAAajC,EAAYnrC,EAAGtD,EAAMsD,EAAG4U,GACrCw4B,GAAajC,EAAY7lC,EAAG5I,EAAM4I,EAAGsP,GACrCpM,KAAK0iC,eAAeC,GAChB3iC,KAAKy/B,gBACLz/B,KAAKmjC,sBACLnjC,KAAKmsB,QACLnsB,KAAK6iC,gBACL7iC,KAAK6iC,eAAe1W,SACpBC,GAAqBiY,EAAgBrkC,KAAKmsB,OAAOgE,UAAWnwB,KAAK6iC,eAAe1W,OAAOgE,WAggB3FtsB,EA/fW7D,KAAKy/B,eA+fRnhC,EA/fwB0B,KAAKmjC,qBA+fvB92B,EA/f6Cg4B,EA+fzCpsC,EA/fyDmU,EAggBvFy4B,GAAQhhC,EAAOrM,EAAG8G,EAAK9G,EAAG6U,EAAG7U,EAAGS,GAChC4sC,GAAQhhC,EAAO/G,EAAGwB,EAAKxB,EAAGuP,EAAGvP,EAAG7E,GA5fZysC,INhgCLjjC,EMigCezB,KAAKy/B,eNjgCjB/9B,EMigCiCgjC,ENhgC5CrL,GAAW53B,EAAEjK,EAAGkK,EAAElK,IAAM6hC,GAAW53B,EAAE3E,EAAG4E,EAAE5E,MMigC7BkD,KAAKg9B,mBAAoB,GAExB0H,IACDA,E1BrgCN,CACdltC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,K0BugCrBgiC,GAAYsM,EAAoB1kC,KAAKy/B,iBAErC6E,IACAtkC,KAAKs6B,gBAAkB8J,ET1gC3C,SAAmBp7B,EAAQ87B,EAAQjL,EAAMztB,EAAUo4B,EAAwBD,GACnEC,GACAx7B,EAAO9B,QAAU0L,GAAU,OAEVxhB,IAAjByoC,EAAK3yB,QAAwB2yB,EAAK3yB,QAAU,EAAG6wB,GAAgB3rB,IAC/DpD,EAAO+7B,YAAcnyB,QAA6BxhB,IAAnB0zC,EAAO59B,QAAwB49B,EAAO59B,QAAU,EAAG,EAAG+wB,GAAiB7rB,KAEjGm4B,IACLv7B,EAAO9B,QAAU0L,QAA6BxhB,IAAnB0zC,EAAO59B,QAAwB49B,EAAO59B,QAAU,OAAoB9V,IAAjByoC,EAAK3yB,QAAwB2yB,EAAK3yB,QAAU,EAAGkF,IAKjI,IAAK,IAAI/b,EAAI,EAAGA,EAAIqnC,GAAYrnC,IAAK,CACjC,MAAM20C,EAAc,SAASvN,GAAQpnC,WACrC,IAAI40C,EAAepN,GAAUiN,EAAQE,GACjCE,EAAarN,GAAUgC,EAAMmL,QACZ5zC,IAAjB6zC,QAA6C7zC,IAAf8zC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAtN,GAAKqN,KAAkBrN,GAAKsN,IAE5Bl8B,EAAOg8B,GAAelyC,KAAKsD,IAAIwc,GAAU+kB,GAASsN,GAAetN,GAASuN,GAAa94B,GAAW,IAC9FhR,GAAQtC,KAAKosC,IAAe9pC,GAAQtC,KAAKmsC,MACzCj8B,EAAOg8B,IAAgB,MAI3Bh8B,EAAOg8B,GAAeE,EAE9B,EAIIJ,EAAO3+B,QAAU0zB,EAAK1zB,UACtB6C,EAAO7C,OAASyM,GAAUkyB,EAAO3+B,QAAU,EAAG0zB,EAAK1zB,QAAU,EAAGiG,GAExE,CSm+BoB+4B,CAAUf,EAAaD,EAAsBnkC,KAAK4hB,aAAcxV,EAAUo4B,EAAwBD,IAEtGvkC,KAAKwP,KAAK2xB,2BACVnhC,KAAK25B,iBACL35B,KAAKy+B,kBAAoBryB,CAAQ,EAErCpM,KAAK2kC,eAAe3kC,KAAKgL,QAAQi1B,WAAa,IAAO,EACzD,CACAlgB,cAAAA,CAAe/U,GACXhL,KAAK4+B,gBAAgB,kBACrB5+B,KAAKu2B,kBAAoBv2B,KAAKu2B,iBAAiB3f,OAC3C5W,KAAK46B,cAAgB56B,KAAK46B,aAAarE,kBACvCv2B,KAAK46B,aAAarE,iBAAiB3f,OAEnC5W,KAAKujC,mBACL9sC,EAAYuJ,KAAKujC,kBACjBvjC,KAAKujC,sBAAmBnyC,GAO5B4O,KAAKujC,iBAAmB/sC,EAAMX,QAAO,KACjCm+B,GAAsBC,wBAAyB,EAC/Cj0B,KAAKu2B,iBE1iCrB,SAA4B3lC,EAAOgC,EAAWoY,GAC1C,MAAMo6B,EAAgBtkB,GAAclwB,GAASA,EAAQkP,GAAYlP,GAEjE,OADAw0C,EAAcx1C,MAAMotB,GAAmB,GAAIooB,EAAexyC,EAAWoY,IAC9Do6B,EAAcvqB,SACzB,CFsiCwCwqB,CAAmB,EArgCnC,IAqgCuD,IACxDr6B,EACHS,SAAW8F,IACPvR,KAAK2kC,eAAepzB,GACpBvG,EAAQS,UAAYT,EAAQS,SAAS8F,EAAO,EAEhD3R,WAAYA,KACRoL,EAAQpL,YAAcoL,EAAQpL,aAC9BI,KAAKslC,mBAAmB,IAG5BtlC,KAAK46B,eACL56B,KAAK46B,aAAarE,iBAAmBv2B,KAAKu2B,kBAE9Cv2B,KAAKujC,sBAAmBnyC,CAAS,GAEzC,CACAk0C,iBAAAA,GACQtlC,KAAK46B,eACL56B,KAAK46B,aAAarE,sBAAmBnlC,EACrC4O,KAAK46B,aAAaR,qBAAkBhpC,GAExC,MAAM+kC,EAAQn2B,KAAKo2B,WACnBD,GAASA,EAAMwE,wBACf36B,KAAK46B,aACD56B,KAAKu2B,iBACDv2B,KAAKs6B,qBACDlpC,EACZ4O,KAAK4+B,gBAAgB,oBACzB,CACAQ,eAAAA,GACQp/B,KAAKu2B,mBACLv2B,KAAK2kC,gBAAkB3kC,KAAK2kC,eAriCpB,KAsiCR3kC,KAAKu2B,iBAAiB3f,QAE1B5W,KAAKslC,mBACT,CACAC,uBAAAA,GACI,MAAM1L,EAAO75B,KAAK+iC,UAClB,IAAI,qBAAEK,EAAoB,OAAEp6B,EAAM,OAAEmjB,EAAM,aAAEvK,GAAiBiY,EAC7D,GAAKuJ,GAAyBp6B,GAAWmjB,EAAzC,CAOA,GAAInsB,OAAS65B,GACT75B,KAAKmsB,QACLA,GACAqZ,GAA0BxlC,KAAKgL,QAAQy6B,cAAezlC,KAAKmsB,OAAOgE,UAAWhE,EAAOgE,WAAY,CAChGnnB,EAAShJ,KAAKgJ,Q1BtlCZ,CACdxR,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0BwlCzB,MAAMsvC,EAAUha,GAAW1rB,KAAKmsB,OAAOgE,UAAU34B,GACjDwR,EAAOxR,EAAEnB,IAAMwjC,EAAK7wB,OAAOxR,EAAEnB,IAC7B2S,EAAOxR,EAAEpB,IAAM4S,EAAOxR,EAAEnB,IAAMqvC,EAC9B,MAAMC,EAAUja,GAAW1rB,KAAKmsB,OAAOgE,UAAUrzB,GACjDkM,EAAOlM,EAAEzG,IAAMwjC,EAAK7wB,OAAOlM,EAAEzG,IAC7B2S,EAAOlM,EAAE1G,IAAM4S,EAAOlM,EAAEzG,IAAMsvC,CAClC,CACAvN,GAAYgL,EAAsBp6B,GAMlCqlB,GAAa+U,EAAsBxhB,GAOnCmK,GAAa/rB,KAAKkkC,6BAA8BlkC,KAAKshC,gBAAiB8B,EAAsBxhB,EA/BlF,CAgCd,CACAyd,kBAAAA,CAAmB9J,EAAU7O,GACpB1mB,KAAK0+B,YAAYlvC,IAAI+lC,IACtBv1B,KAAK0+B,YAAYjvC,IAAI8lC,EAAU,IAAImE,IAEzB15B,KAAK0+B,YAAYrvC,IAAIkmC,GAC7BngC,IAAIsxB,GACV,MAAMkf,EAASlf,EAAK1b,QAAQ66B,uBAC5Bnf,EAAKuP,QAAQ,CACThjC,WAAY2yC,EAASA,EAAO3yC,gBAAa7B,EACzC6oC,sBAAuB2L,GAAUA,EAAOE,4BAClCF,EAAOE,4BAA4Bpf,QACnCt1B,GAEd,CACAolC,MAAAA,GACI,MAAML,EAAQn2B,KAAKo2B,WACnB,OAAOD,GAAQA,EAAM0D,OAAS75B,IAClC,CACA+iC,OAAAA,GACI,IAAI7jC,EACJ,MAAM,SAAEq2B,GAAav1B,KAAKgL,QAC1B,OAAOuqB,IAAuC,QAA1Br2B,EAAKc,KAAKo2B,kBAA+B,IAAPl3B,OAAgB,EAASA,EAAG26B,OAAgB75B,IACtG,CACA+lC,WAAAA,GACI,IAAI7mC,EACJ,MAAM,SAAEq2B,GAAav1B,KAAKgL,QAC1B,OAAOuqB,EAAsC,QAA1Br2B,EAAKc,KAAKo2B,kBAA+B,IAAPl3B,OAAgB,EAASA,EAAG06B,cAAWxoC,CAChG,CACAglC,QAAAA,GACI,MAAM,SAAEb,GAAav1B,KAAKgL,QAC1B,GAAIuqB,EACA,OAAOv1B,KAAKwP,KAAKkvB,YAAYrvC,IAAIkmC,EACzC,CACAU,OAAAA,GAAiE,IAAzD,WAAEqH,EAAU,WAAErqC,EAAU,sBAAEgnC,GAAwB7qC,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAM+mC,EAAQn2B,KAAKo2B,WACfD,GACAA,EAAMF,QAAQj2B,KAAMi6B,GACpBqD,IACAt9B,KAAKy0B,qBAAkBrjC,EACvB4O,KAAKs9B,YAAa,GAElBrqC,GACA+M,KAAK61B,WAAW,CAAE5iC,cAC1B,CACAijC,QAAAA,GACI,MAAMC,EAAQn2B,KAAKo2B,WACnB,QAAID,GACOA,EAAMD,SAASl2B,KAK9B,CACAwgC,oBAAAA,GACI,MAAM,cAAEhwC,GAAkBwP,KAAKgL,QAC/B,IAAKxa,EACD,OAEJ,IAAIw1C,GAAyB,EAK7B,MAAM,aAAEpkB,GAAiBpxB,EAWzB,IAVIoxB,EAAa7a,GACb6a,EAAazb,QACbyb,EAAaxb,SACbwb,EAAavb,SACbub,EAAatb,SACbsb,EAAajb,OACbib,EAAahb,SACbo/B,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAC,EACjBrkB,EAAa7a,GACbi1B,GAAyB,IAAKxrC,EAAey1C,EAAajmC,KAAKs6B,iBAGnE,IAAK,IAAIjqC,EAAI,EAAGA,EAAIwrC,GAAczrC,OAAQC,IACtC2rC,GAAyB,SAASH,GAAcxrC,KAAMG,EAAey1C,EAAajmC,KAAKs6B,iBACvF0B,GAAyB,OAAOH,GAAcxrC,KAAMG,EAAey1C,EAAajmC,KAAKs6B,iBAIzF9pC,EAAcuF,SAEd,IAAK,MAAMxG,KAAO02C,EACdz1C,EAAc0rC,eAAe3sC,EAAK02C,EAAY12C,IAC1CyQ,KAAKs6B,kBACLt6B,KAAKs6B,gBAAgB/qC,GAAO02C,EAAY12C,IAKhDiB,EAAcmpC,gBAClB,CACAuM,mBAAAA,CAAoBC,GAChB,IAAIjnC,EAAI8E,EACR,IAAKhE,KAAKsuB,UAAYtuB,KAAKq9B,MACvB,OACJ,IAAKr9B,KAAKw+B,UACN,OAAO1C,GAEX,MAAMsK,EAAS,CACXrK,WAAY,IAEV9I,EAAoBjzB,KAAKygC,uBAC/B,GAAIzgC,KAAKs9B,WAQL,OAPAt9B,KAAKs9B,YAAa,EAClB8I,EAAOl/B,QAAU,GACjBk/B,EAAOC,cACHnL,GAAiC,OAAdiL,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,GACzGD,EAAOxrC,UAAYq4B,EACbA,EAAkBjzB,KAAK4hB,aAAc,IACrC,OACCwkB,EAEX,MAAMvM,EAAO75B,KAAK+iC,UAClB,IAAK/iC,KAAKy0B,kBAAoBz0B,KAAKmsB,SAAW0N,EAAK7wB,OAAQ,CACvD,MAAMs9B,EAAc,CAAC,EAerB,OAdItmC,KAAKgL,QAAQuqB,WACb+Q,EAAYp/B,aACsB9V,IAA9B4O,KAAK4hB,aAAa1a,QACZlH,KAAK4hB,aAAa1a,QAClB,EACVo/B,EAAYD,cACRnL,GAAiC,OAAdiL,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,IAEzGrmC,KAAKu+B,eAAiBlR,GAAartB,KAAK4hB,gBACxC0kB,EAAY1rC,UAAYq4B,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNjzB,KAAKu+B,cAAe,GAEjB+H,CACX,CACA,MAAMC,EAAiB1M,EAAKS,iBAAmBT,EAAKjY,aACpD5hB,KAAKulC,0BACLa,EAAOxrC,UGrwCnB,SAAkC1G,EAAOsgC,EAAWgS,GAChD,IAAI5rC,EAAY,GAOhB,MAAM6rC,EAAavyC,EAAMsD,EAAEs0B,UAAY0I,EAAUh9B,EAC3CkvC,EAAaxyC,EAAM4I,EAAEgvB,UAAY0I,EAAU13B,EAC3C6pC,GAAkC,OAApBH,QAAgD,IAApBA,OAA6B,EAASA,EAAgBz/B,IAAM,EAW5G,IAVI0/B,GAAcC,GAAcC,KAC5B/rC,EAAY,eAAe6rC,QAAiBC,QAAiBC,SAM7C,IAAhBnS,EAAUh9B,GAA2B,IAAhBg9B,EAAU13B,IAC/BlC,GAAa,SAAS,EAAI45B,EAAUh9B,MAAM,EAAIg9B,EAAU13B,OAExD0pC,EAAiB,CACjB,MAAM,qBAAEv/B,EAAoB,OAAEd,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEM,EAAK,MAAEC,GAAU4/B,EACrEv/B,IACArM,EAAY,eAAeqM,QAA2BrM,KACtDuL,IACAvL,GAAa,UAAUuL,UACvBC,IACAxL,GAAa,WAAWwL,UACxBC,IACAzL,GAAa,WAAWyL,UACxBM,IACA/L,GAAa,SAAS+L,UACtBC,IACAhM,GAAa,SAASgM,SAC9B,CAKA,MAAMggC,EAAgB1yC,EAAMsD,EAAEsD,MAAQ05B,EAAUh9B,EAC1CqvC,EAAgB3yC,EAAM4I,EAAEhC,MAAQ05B,EAAU13B,EAIhD,OAHsB,IAAlB8pC,GAAyC,IAAlBC,IACvBjsC,GAAa,SAASgsC,MAAkBC,MAErCjsC,GAAa,MACxB,CHutC+BksC,CAAyB9mC,KAAKkkC,6BAA8BlkC,KAAKw0B,UAAW+R,GAC3FtT,IACAmT,EAAOxrC,UAAYq4B,EAAkBsT,EAAgBH,EAAOxrC,YAEhE,MAAM,EAAEpD,EAAC,EAAEsF,GAAMkD,KAAKy0B,gBACtB2R,EAAOW,gBAAkB,GAAc,IAAXvvC,EAAEuR,WAA4B,IAAXjM,EAAEiM,YAC7C8wB,EAAKS,gBAKL8L,EAAOl/B,QACH2yB,IAAS75B,KACiG,QAAnGgE,EAAuC,QAAjC9E,EAAKqnC,EAAer/B,eAA4B,IAAPhI,EAAgBA,EAAKc,KAAK4hB,aAAa1a,eAA4B,IAAPlD,EAAgBA,EAAK,EACjIhE,KAAKo6B,gBACDp6B,KAAK4hB,aAAa1a,QAClBq/B,EAAexB,YAO7BqB,EAAOl/B,QACH2yB,IAAS75B,UACwB5O,IAA3Bm1C,EAAer/B,QACXq/B,EAAer/B,QACf,QAC2B9V,IAA/Bm1C,EAAexB,YACXwB,EAAexB,YACf,EAKlB,IAAK,MAAMx1C,KAAOwlC,GAAiB,CAC/B,QAA4B3jC,IAAxBm1C,EAAeh3C,GACf,SACJ,MAAM,QAAE+kC,EAAO,QAAEiD,GAAYxC,GAAgBxlC,GAOvCy3C,EAAiC,SAArBZ,EAAOxrC,UACnB2rC,EAAeh3C,GACf+kC,EAAQiS,EAAeh3C,GAAMsqC,GACnC,GAAItC,EAAS,CACT,MAAM0P,EAAM1P,EAAQnnC,OACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI42C,EAAK52C,IACrB+1C,EAAO7O,EAAQlnC,IAAM22C,CAE7B,MAEIZ,EAAO72C,GAAOy3C,CAEtB,CAYA,OANIhnC,KAAKgL,QAAQuqB,WACb6Q,EAAOC,cACHxM,IAAS75B,KACHk7B,GAAiC,OAAdiL,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,GACrG,QAEPD,CACX,CACAnF,aAAAA,GACIjhC,KAAKm6B,WAAan6B,KAAKq6B,cAAWjpC,CACtC,CAEA81C,SAAAA,GACIlnC,KAAKwP,KAAKwuB,MAAMrtC,SAAS+1B,IAAW,IAAIxnB,EAAI,OAAwC,QAAhCA,EAAKwnB,EAAK6P,wBAAqC,IAAPr3B,OAAgB,EAASA,EAAG0X,MAAM,IAC9H5W,KAAKwP,KAAKwuB,MAAMrtC,QAAQkwC,IACxB7gC,KAAKwP,KAAKkvB,YAAYjpC,OAC1B,EAER,CACA,SAAS29B,GAAa1M,GAClBA,EAAK0M,cACT,CACA,SAAS4N,GAAmBta,GACxB,IAAIxnB,EACJ,MAAMm7B,GAAuC,QAA1Bn7B,EAAKwnB,EAAKyT,kBAA+B,IAAPj7B,OAAgB,EAASA,EAAGm7B,WAAa3T,EAAK2T,SACnG,GAAI3T,EAAK8P,UACL9P,EAAKyF,QACLkO,GACA3T,EAAKqY,aAAa,aAAc,CAChC,MAAQ5O,UAAWhE,EAAQgW,YAAagF,GAAmBzgB,EAAKyF,QAC1D,cAAEsZ,GAAkB/e,EAAK1b,QACzBg4B,EAAW3I,EAAS12B,SAAW+iB,EAAKyF,OAAOxoB,OAG3B,SAAlB8hC,EACAxY,IAAUtB,IACN,MAAMyb,EAAepE,EACf3I,EAAS8H,YAAYxW,GACrB0O,EAASlK,UAAUxE,GACnBv7B,EAASs7B,GAAW0b,GAC1BA,EAAa/wC,IAAM81B,EAAOR,GAAMt1B,IAChC+wC,EAAahxC,IAAMgxC,EAAa/wC,IAAMjG,CAAM,IAG3Co1C,GAA0BC,EAAepL,EAASlK,UAAWhE,IAClEc,IAAUtB,IACN,MAAMyb,EAAepE,EACf3I,EAAS8H,YAAYxW,GACrB0O,EAASlK,UAAUxE,GACnBv7B,EAASs7B,GAAWS,EAAOR,IACjCyb,EAAahxC,IAAMgxC,EAAa/wC,IAAMjG,EAIlCs2B,EAAK+Y,iBAAmB/Y,EAAK6P,mBAC7B7P,EAAKsW,mBAAoB,EACzBtW,EAAK+Y,eAAe9T,GAAMv1B,IACtBswB,EAAK+Y,eAAe9T,GAAMt1B,IAAMjG,EACxC,IAGR,MAAMi3C,E1B33CM,CAChB7vC,EAPoB,CACpBs0B,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,GAIb/uB,EARoB,CACpBgvB,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,I0B83CTE,GAAasb,EAAalb,EAAQkO,EAASlK,WAC3C,MAAMmX,E1B73CM,CAChB9vC,EAPoB,CACpBs0B,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,GAIb/uB,EARoB,CACpBgvB,UAAW,EACXhxB,MAAO,EACPiO,OAAQ,EACR8iB,YAAa,I0Bg4CLmX,EACAjX,GAAaub,EAAa5gB,EAAK4b,eAAe6E,GAAgB,GAAO9M,EAAS8H,aAG9EpW,GAAaub,EAAanb,EAAQkO,EAASlK,WAE/C,MAAMyD,GAAoBwF,GAAYiO,GACtC,IAAI/H,GAA2B,EAC/B,IAAK5Y,EAAKyT,WAAY,CAClB,MAAM0I,EAAiBnc,EAAKwc,6BAK5B,GAAIL,IAAmBA,EAAe1I,WAAY,CAC9C,MAAQE,SAAUkN,EAAgBpb,OAAQqb,GAAiB3E,EAC3D,GAAI0E,GAAkBC,EAAc,CAChC,MAAMC,E1B14CR,CACdjwC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0B44CrBg2B,GAAqBqb,EAAkBpN,EAASlK,UAAWoX,EAAepX,WAC1E,MAAMkU,E1B54CR,CACd7sC,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,I0B84CrBg2B,GAAqBiY,EAAgBlY,EAAQqb,EAAarX,WACrDoJ,GAAiBkO,EAAkBpD,KACpC/E,GAA2B,GAE3BuD,EAAe73B,QAAQi1B,aACvBvZ,EAAK+Y,eAAiB4E,EACtB3d,EAAKyc,qBAAuBsE,EAC5B/gB,EAAKmc,eAAiBA,EAE9B,CACJ,CACJ,CACAnc,EAAKkY,gBAAgB,YAAa,CAC9BzS,SACAkO,WACAnmC,MAAOozC,EACPD,cACAzT,mBACA0L,4BAER,MACK,GAAI5Y,EAAK8P,SAAU,CACpB,MAAM,eAAEnP,GAAmBX,EAAK1b,QAChCqc,GAAkBA,GACtB,CAMAX,EAAK1b,QAAQ/X,gBAAa7B,CAC9B,CACA,SAAS6sC,GAAoBvX,GAIrBiV,IACAJ,GAAQC,aAEP9U,EAAKpD,SAQLoD,EAAK2c,iBACN3c,EAAKsW,kBAAoBtW,EAAKpD,OAAO0Z,mBAOzCtW,EAAKuW,0BAA4BvW,EAAKuW,wBAA0Bl8B,QAAQ2lB,EAAKsW,mBACzEtW,EAAKpD,OAAO0Z,mBACZtW,EAAKpD,OAAO2Z,0BAChBvW,EAAKwW,mBAAqBxW,EAAKwW,iBAAmBxW,EAAKpD,OAAO4Z,kBAClE,CACA,SAASkB,GAAgB1X,GACrBA,EAAKsW,kBACDtW,EAAKuW,wBACDvW,EAAKwW,kBACD,CAChB,CACA,SAAS+D,GAAcva,GACnBA,EAAKua,eACT,CACA,SAASJ,GAAkBna,GACvBA,EAAKma,mBACT,CACA,SAASC,GAAmBpa,GACxBA,EAAK8T,eAAgB,CACzB,CACA,SAASuG,GAAoBra,GACzB,MAAM,cAAEl2B,GAAkBk2B,EAAK1b,QAC3Bxa,GAAiBA,EAAce,WAAWm2C,uBAC1Cl3C,EAAcwtB,OAAO,uBAEzB0I,EAAKmW,gBACT,CACA,SAASuC,GAAgB1Y,GACrBA,EAAK0Y,kBACL1Y,EAAKic,YAAcjc,EAAK+Y,eAAiB/Y,EAAK1d,YAAS5X,EACvDs1B,EAAKsW,mBAAoB,CAC7B,CACA,SAASkB,GAAmBxX,GACxBA,EAAKwX,oBACT,CACA,SAASC,GAAezX,GACpBA,EAAKyX,gBACT,CACA,SAASqC,GAAqB9Z,GAC1BA,EAAK8Z,sBACT,CACA,SAASU,GAAoB/K,GACzBA,EAAM0E,oBACV,CACA,SAAS+J,GAAa/gC,EAAQ3P,EAAO+D,GACjC4L,EAAOioB,UAAYlZ,GAAU1e,EAAM43B,UAAW,EAAG7zB,GACjD4L,EAAO/I,MAAQ8X,GAAU1e,EAAM4G,MAAO,EAAG7C,GACzC4L,EAAOkF,OAAS7U,EAAM6U,OACtBlF,EAAOgoB,YAAc33B,EAAM23B,WAC/B,CACA,SAASgZ,GAAQhhC,EAAQvF,EAAM+N,EAAIpU,GAC/B4L,EAAOxN,IAAMuc,GAAUtU,EAAKjI,IAAKgW,EAAGhW,IAAK4B,GACzC4L,EAAOzN,IAAMwc,GAAUtU,EAAKlI,IAAKiW,EAAGjW,IAAK6B,EAC7C,CAKA,SAASwsC,GAAoB/d,GACzB,OAAQA,EAAK4T,sBAAwDlpC,IAArCs1B,EAAK4T,gBAAgByK,WACzD,CACA,MAAMpF,GAA0B,CAC5BptC,SAAU,IACVC,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBm1C,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAUnnB,cAAconB,SAASH,GAMzCI,GAAaL,GAAkB,kBAAoBA,GAAkB,WACrE70C,KAAK4N,MACL9J,EAAAA,EACN,SAASsrC,GAAUvW,GAEfA,EAAKt1B,IAAM2xC,GAAWrc,EAAKt1B,KAC3Bs1B,EAAKv1B,IAAM4xC,GAAWrc,EAAKv1B,IAC/B,CAKA,SAASovC,GAA0BC,EAAepL,EAAUlO,GACxD,MAA0B,aAAlBsZ,GACe,oBAAlBA,I5B3hDO70C,E4B4hDI4oC,GAAYa,G5B5hDTrxB,E4B4hDoBwwB,GAAYrN,G5B5hDxB8b,E4B4hDiC,K5B3hDrDn1C,KAAK+E,IAAIjH,EAAQoY,IAAWi/B,IADvC,IAAgBr3C,EAAOoY,EAAQi/B,C4B6hD/B,CACA,SAAS7F,GAAuB1b,GAC5B,IAAIxnB,EACJ,OAAOwnB,IAASA,EAAKlX,OAAgC,QAAtBtQ,EAAKwnB,EAAKoL,cAA2B,IAAP5yB,OAAgB,EAASA,EAAGwiC,QAC7F,CIziDA,MAAMwG,GAAyB1L,GAAqB,CAChDC,qBAAsBA,CAAChR,EAAKzN,IAAWkK,GAAYuD,EAAK,SAAUzN,GAClE2e,cAAeA,KAAA,CACXnlC,EAAGsiB,SAASquB,gBAAgBC,YAActuB,SAASuuB,KAAKD,WACxDtrC,EAAGgd,SAASquB,gBAAgBG,WAAaxuB,SAASuuB,KAAKC,YAE3D1L,kBAAmBA,KAAM,ICNvBhL,GAAqB,CACvB1gC,aAASE,GAEPm3C,GAAqB/L,GAAqB,CAC5CG,cAAgBrO,IAAQ,CACpB92B,EAAG82B,EAAS8Z,WACZtrC,EAAGwxB,EAASga,YAEhB5L,cAAeA,KACX,IAAK9K,GAAmB1gC,QAAS,CAC7B,MAAMs3C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAaxhB,MAAM5sB,QACnBouC,EAAa3S,WAAW,CAAE2L,cAAc,IACxC5P,GAAmB1gC,QAAUs3C,CACjC,CACA,OAAO5W,GAAmB1gC,OAAO,EAErC2rC,eAAgBA,CAACvO,EAAU19B,KACvB09B,EAAS4E,MAAMt4B,eAAsBxJ,IAAVR,EAAsBA,EAAQ,MAAM,EAEnEgsC,kBAAoBtO,GAAavtB,QAAuD,UAA/C3G,OAAOC,iBAAiBi0B,GAAUma,YClBzEtd,GAAO,CACTud,IAAK,CACDjiB,QxBKR,cAAyBA,GACrB/mB,WAAAA,GACIkJ,SAASxZ,WACT4Q,KAAK2oC,0BAA4B/xC,EAAAA,CACrC,CACAgyC,aAAAA,CAAcC,GACV7oC,KAAK8oC,QAAU,IAAItgB,GAAWqgB,EAAkB7oC,KAAK+oC,oBAAqB,CACtErgB,mBAAoB1oB,KAAK0mB,KAAKiK,wBAC9BhI,cAAegG,GAAiB3uB,KAAK0mB,OAE7C,CACAqiB,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAanpC,KAAK0mB,KAAKn1B,WACrE,MAAO,CACH64B,eAAgByJ,GAAamV,GAC7Bvf,QAASoK,GAAaoV,GACtBvf,OAAQwf,EACRnf,MAAOA,CAACpC,EAAOsB,YACJjpB,KAAK8oC,QACRK,GACA3yC,EAAMR,YAAW,IAAMmzC,EAASxhB,EAAOsB,IAC3C,EAGZ,CACAjC,KAAAA,GACIhnB,KAAK2oC,0BAA4BrgB,GAAgBtoB,KAAK0mB,KAAKx1B,QAAS,eAAgBy2B,GAAU3nB,KAAK4oC,cAAcjhB,IACrH,CACA9xB,MAAAA,GACImK,KAAK8oC,SAAW9oC,KAAK8oC,QAAQxe,eAAetqB,KAAK+oC,oBACrD,CACA5hB,OAAAA,GACInnB,KAAK2oC,4BACL3oC,KAAK8oC,SAAW9oC,KAAK8oC,QAAQhf,KACjC,IwBrCAqB,KAAM,CACF1E,QCNR,cAA0BA,GACtB/mB,WAAAA,CAAYgnB,GACR9d,MAAM8d,GACN1mB,KAAKopC,oBAAsBxyC,EAAAA,EAC3BoJ,KAAKqqB,gBAAkBzzB,EAAAA,EACvBoJ,KAAK+c,SAAW,IAAIiS,GAA0BtI,EAClD,CACAM,KAAAA,GAGI,MAAM,aAAEqiB,GAAiBrpC,KAAK0mB,KAAKn1B,WAC/B83C,IACArpC,KAAKopC,oBAAsBC,EAAatiB,UAAU/mB,KAAK+c,WAE3D/c,KAAKqqB,gBAAkBrqB,KAAK+c,SAASsW,gBAAkBz8B,EAAAA,CAC3D,CACAuwB,OAAAA,GACInnB,KAAKopC,sBACLppC,KAAKqqB,iBACT,GDZIif,eAAgBf,GAChBzR,cAAaA,KENrB,SAASyS,GAAc7iB,EAAMhC,GACzB,MAAMpF,EAAYoF,EAAW,eAAiB,eACxC8kB,EAAe9kB,EAAW,eAAiB,aAajD,OAAO4D,GAAgB5B,EAAKx1B,QAASouB,GAZjBmqB,CAAC9hB,EAAOsB,KACxB,GAA0B,UAAtBtB,EAAMC,aAA2B0D,KACjC,OACJ,MAAMv6B,EAAQ21B,EAAKn1B,WACfm1B,EAAKhF,gBAAkB3wB,EAAMq1B,YAC7BM,EAAKhF,eAAeoE,UAAU,aAAcpB,GAEhD,MAAM1vB,EAAWjE,EAAMy4C,GACnBx0C,GACAwB,EAAMR,YAAW,IAAMhB,EAAS2yB,EAAOsB,IAC3C,GAEyD,CACzDd,SAAUzB,EAAKn1B,WAAWi4C,IAElC,CCjBA,MAAME,GAAgBA,CAACpmB,EAAQT,MACtBA,IAGIS,IAAWT,GAIT6mB,GAAcpmB,EAAQT,EAAM8mB,gBCL3C,SAASC,GAA0B/pC,EAAMke,GACrC,IAAKA,EACD,OACJ,MAAM8rB,EAAwB,IAAIC,aAAa,UAAYjqC,GAC3Dke,EAAQ8rB,EAAuB9hB,GAAiB8hB,GACpD,CCVA,MAAME,GAAoB,IAAIhb,QAMxBib,GAAY,IAAIjb,QAChBkb,GAAwBC,IAC1B,MAAMl1C,EAAW+0C,GAAkB16C,IAAI66C,EAAMlhC,QAC7ChU,GAAYA,EAASk1C,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQz5C,QAAQs5C,GAAqB,EAqBzC,SAASI,GAAoB3wC,EAASsR,EAAShW,GAC3C,MAAMs1C,EApBV,SAAiC33C,GAAuB,IAAtB,KAAE6c,KAASxE,GAASrY,EAClD,MAAM43C,EAAa/6B,GAAQsK,SAItBkwB,GAAUx6C,IAAI+6C,IACfP,GAAUv6C,IAAI86C,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAU36C,IAAIk7C,GAC9Bh7C,EAAMk7C,KAAKC,UAAU1/B,GAQ3B,OAHKw/B,EAAcj7C,KACfi7C,EAAcj7C,GAAO,IAAIo7C,qBAAqBR,GAA0B,CAAE36B,UAASxE,KAEhFw/B,EAAcj7C,EACzB,CAEsCq7C,CAAyB5/B,GAG3D,OAFA++B,GAAkBt6C,IAAIiK,EAAS1E,GAC/Bs1C,EAA0BO,QAAQnxC,GAC3B,KACHqwC,GAAkBz0C,OAAOoE,GACzB4wC,EAA0BQ,UAAUpxC,EAAQ,CAEpD,CC3CA,MAAMqxC,GAAiB,CACnB57B,KAAM,EACNoN,IAAK,GCAT,MAAMyuB,GAAoB,CACtBC,OAAQ,CACJxkB,QDAR,cAA4BA,GACxB/mB,WAAAA,GACIkJ,SAASxZ,WACT4Q,KAAKkrC,gBAAiB,EACtBlrC,KAAKmrC,UAAW,CACpB,CACAC,aAAAA,GACIprC,KAAKmnB,UACL,MAAM,SAAEkkB,EAAW,CAAC,GAAMrrC,KAAK0mB,KAAKn1B,YAC9B,KAAEie,EAAM7J,OAAQ2lC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDrgC,EAAU,CACZwE,KAAMA,EAAOA,EAAKte,aAAUE,EAC5Bk6C,aACAG,UAA6B,kBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOlB,GAAoBrqC,KAAK0mB,KAAKx1B,QAAS8Z,GA7BhBk/B,IAC1B,MAAM,eAAEwB,GAAmBxB,EAI3B,GAAIlqC,KAAKmrC,WAAaO,EAClB,OAMJ,GALA1rC,KAAKmrC,SAAWO,EAKZF,IAASE,GAAkB1rC,KAAKkrC,eAChC,OAEKQ,IACL1rC,KAAKkrC,gBAAiB,GAEtBlrC,KAAK0mB,KAAKhF,gBACV1hB,KAAK0mB,KAAKhF,eAAeoE,UAAU,cAAe4lB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB5rC,KAAK0mB,KAAKn1B,WACjDyD,EAAW02C,EAAiBC,EAAkBC,EACpD52C,GAAYA,EAASk1C,EAAM,GAGnC,CACAljB,KAAAA,GACIhnB,KAAKorC,eACT,CACAv1C,MAAAA,GACI,GAAoC,qBAAzB80C,qBACP,OACJ,MAAM,MAAE55C,EAAK,UAAEm2B,GAAclnB,KAAK0mB,KAC5BmlB,EAAoB,CAAC,SAAU,SAAU,QAAQ18B,KAO/D,SAAiCxc,GAA0D,IAAzD,SAAE04C,EAAW,CAAC,GAAG14C,GAAI04C,SAAUS,EAAe,CAAC,GAAG18C,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQyQ,GAASwrC,EAASxrC,KAAUisC,EAAajsC,EACrD,CAToEksC,CAAyBh7C,EAAOm2B,IACxF2kB,GACA7rC,KAAKorC,eAEb,CACAjkB,OAAAA,GAAY,ICxDZ6kB,IAAK,CACDvlB,QHMR,cAA2BA,GACvB/mB,WAAAA,GACIkJ,SAASxZ,WACT4Q,KAAKisC,qBAAuBr1C,EAAAA,EAC5BoJ,KAAKksC,mBAAqBt1C,EAAAA,EAC1BoJ,KAAKmsC,0BAA4Bv1C,EAAAA,EACjCoJ,KAAKosC,kBAAoB,CAACvjB,EAAYwjB,KAClC,GAAIrsC,KAAKssC,WACL,OACJtsC,KAAKksC,qBACL,MAAMn7C,EAAQiP,KAAK0mB,KAAKn1B,WAiBlBg7C,EAA0BjkB,GAAgBluB,OAAQ,aAhBhCoyC,CAACC,EAAUC,KAC/B,IAAK1sC,KAAK2sC,gBACN,OACJ,MAAM,MAAEC,EAAK,YAAEC,EAAW,gBAAEC,GAAoB9sC,KAAK0mB,KAAKn1B,WAKpDwsB,EAAW+uB,GACZpD,GAAc1pC,KAAK0mB,KAAKx1B,QAASu7C,EAASzjC,QAEzC4jC,EADAC,EAEF9uB,GACAvnB,EAAMX,QAAO,IAAMkoB,EAAQ0uB,EAAUC,IACzC,GAEkF,CAClFvkB,UAAWp3B,EAAM67C,OAAS77C,EAAmB,eAE3Cg8C,EAA8BzkB,GAAgBluB,OAAQ,iBAAiB,CAAC4yC,EAAaC,IAAejtC,KAAKktC,YAAYF,EAAaC,IAAa,CACjJ9kB,UAAWp3B,EAAM87C,aACb97C,EAAuB,mBAE/BiP,KAAKksC,mBAAqB15B,GAAK+5B,EAAyBQ,GACxD/sC,KAAKmtC,WAAWtkB,EAAYwjB,EAAU,EAE1CrsC,KAAKotC,qBAAuB,KACxB,MAmBMC,EAAwBnlB,GAAYloB,KAAK0mB,KAAKx1B,QAAS,WAnBtCo8C,IACnB,GAAyB,UAArBA,EAAa/9C,KAAmByQ,KAAKssC,WACrC,OAWJtsC,KAAKksC,qBACLlsC,KAAKksC,mBAAqBhkB,GAAYloB,KAAK0mB,KAAKx1B,QAAS,SAXpCq8C,IACM,UAAnBA,EAAWh+C,KAAoByQ,KAAK2sC,iBAExC/C,GAA0B,MAAM,CAACjiB,EAAOsB,KACpC,MAAM,MAAE2jB,GAAU5sC,KAAK0mB,KAAKn1B,WACxBq7C,GACAp2C,EAAMR,YAAW,IAAM42C,EAAMjlB,EAAOsB,IACxC,GACF,IAIN2gB,GAA0B,QAAQ,CAACjiB,EAAOsB,KACtCjpB,KAAKmtC,WAAWxlB,EAAOsB,EAAK,GAC9B,IAQAukB,EAAqBtlB,GAAYloB,KAAK0mB,KAAKx1B,QAAS,QALvCu8C,KACVztC,KAAKssC,YAEV1C,GAA0B,UAAU,CAACoD,EAAaC,IAAejtC,KAAKktC,YAAYF,EAAaC,IAAY,IAG/GjtC,KAAKmsC,0BAA4B35B,GAAK66B,EAAuBG,EAAmB,CAExF,CACAL,UAAAA,CAAWxlB,EAAOsB,GACdjpB,KAAKssC,YAAa,EAClB,MAAM,WAAEoB,EAAU,SAAErnB,GAAarmB,KAAK0mB,KAAKn1B,WAIvC80B,GAAYrmB,KAAK0mB,KAAKhF,gBACtB1hB,KAAK0mB,KAAKhF,eAAeoE,UAAU,YAAY,GAE/C4nB,GACAl3C,EAAMR,YAAW,IAAM03C,EAAW/lB,EAAOsB,IAEjD,CACA0jB,aAAAA,GACI3sC,KAAKksC,qBACLlsC,KAAKssC,YAAa,EAKlB,OAJctsC,KAAK0mB,KAAKn1B,WACd80B,UAAYrmB,KAAK0mB,KAAKhF,gBAC5B1hB,KAAK0mB,KAAKhF,eAAeoE,UAAU,YAAY,IAE3CwF,IACZ,CACA4hB,WAAAA,CAAYvlB,EAAOsB,GACf,IAAKjpB,KAAK2sC,gBACN,OACJ,MAAM,YAAEE,GAAgB7sC,KAAK0mB,KAAKn1B,WAC9Bs7C,GACAr2C,EAAMR,YAAW,IAAM62C,EAAYllB,EAAOsB,IAElD,CACAjC,KAAAA,GACI,MAAMj2B,EAAQiP,KAAK0mB,KAAKn1B,WAClBo8C,EAAwBrlB,GAAgBv3B,EAAM+7C,gBAAkB1yC,OAAS4F,KAAK0mB,KAAKx1B,QAAS,cAAe8O,KAAKosC,kBAAmB,CACrIjkB,UAAWp3B,EAAM28C,YACb38C,EAAsB,kBAExB68C,EAAsB1lB,GAAYloB,KAAK0mB,KAAKx1B,QAAS,QAAS8O,KAAKotC,sBACzEptC,KAAKisC,qBAAuBz5B,GAAKm7B,EAAuBC,EAC5D,CACAzmB,OAAAA,GACInnB,KAAKisC,uBACLjsC,KAAKksC,qBACLlsC,KAAKmsC,2BACT,IGlHA0B,MAAO,CACHpnB,QCTR,cAA2BA,GACvB/mB,WAAAA,GACIkJ,SAASxZ,WACT4Q,KAAK0kB,UAAW,CACpB,CACAopB,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiB/tC,KAAK0mB,KAAKx1B,QAAQ88C,QAAQ,iBAC/C,CACA,MAAO5/B,GACH2/B,GAAiB,CACrB,CACKA,GAAmB/tC,KAAK0mB,KAAKhF,iBAElC1hB,KAAK0mB,KAAKhF,eAAeoE,UAAU,cAAc,GACjD9lB,KAAK0kB,UAAW,EACpB,CACAupB,MAAAA,GACSjuC,KAAK0kB,UAAa1kB,KAAK0mB,KAAKhF,iBAEjC1hB,KAAK0mB,KAAKhF,eAAeoE,UAAU,cAAc,GACjD9lB,KAAK0kB,UAAW,EACpB,CACAsC,KAAAA,GACIhnB,KAAKmnB,QAAU3U,GAAK0V,GAAYloB,KAAK0mB,KAAKx1B,QAAS,SAAS,IAAM8O,KAAK8tC,YAAY5lB,GAAYloB,KAAK0mB,KAAKx1B,QAAS,QAAQ,IAAM8O,KAAKiuC,WACzI,CACA9mB,OAAAA,GAAY,IDtBZ+mB,MAAO,CACHznB,QLSR,cAA2BA,GACvBO,KAAAA,GACIhnB,KAAKmnB,QAAU3U,GAAK+2B,GAAcvpC,KAAK0mB,MAAM,GAAO6iB,GAAcvpC,KAAK0mB,MAAM,GACjF,CACAS,OAAAA,GAAY,KO1BVgF,GAAS,CACXA,OAAQ,CACJmd,eAAgBf,GAChBzR,cAAaA,K,eCHrB,MAAMqX,IAAgBpa,EAAAA,GAAAA,eAAc,CAAC,G,cCArC,MAAMqa,IAAcra,EAAAA,GAAAA,eAAc,CAAEsa,QAAQ,ICQ5C,SAASC,GAAiBnZ,EAAWoZ,EAAax9C,EAAOy9C,EAAqBC,GAC1E,IAAIvvC,EAAI8E,EACR,MAAQxT,cAAe8yB,IAAWyT,EAAAA,GAAAA,YAAWoX,IACvCO,GAAc3X,EAAAA,GAAAA,YAAWqX,IACzBhsB,GAAkB2U,EAAAA,GAAAA,YAAWC,GAAAA,GAC7B2X,GAAsB5X,EAAAA,GAAAA,YAAW6X,GAAAA,GAAqBC,cACtDC,GAAmBC,EAAAA,GAAAA,UAIzBP,EAAsBA,GAAuBE,EAAYM,UACpDF,EAAiB59C,SAAWs9C,IAC7BM,EAAiB59C,QAAUs9C,EAAoBrZ,EAAW,CACtDoZ,cACAjrB,SACAvyB,QACAqxB,kBACAqD,wBAAuBrD,IACW,IAA5BA,EAAgBmB,QAEtBorB,yBAGR,MAAMn+C,EAAgBs+C,EAAiB59C,QAKjC+9C,GAA2BlY,EAAAA,GAAAA,YAAWjD,KACxCtjC,GACCA,EAAcu/B,aACf0e,GACwB,SAAvBj+C,EAAc0B,MAA0C,QAAvB1B,EAAc0B,MA2DxD,SAA8B1B,EAAeO,EAAO09C,EAA2B5I,GAC3E,MAAM,SAAEtQ,EAAQ,OAAEpJ,EAAM,KAAEhB,EAAI,gBAAE8F,EAAe,aAAEuQ,EAAY,WAAEvB,GAAgBlvC,EAC/EP,EAAcu/B,WAAa,IAAI0e,EAA0Bj+C,EAAcoxB,aAAc7wB,EAAM,8BACrFK,EACA89C,GAAyB1+C,EAAc8yB,SAC7C9yB,EAAcu/B,WAAW8F,WAAW,CAChCN,WACApJ,SACAiV,oBAAqBrgC,QAAQoqB,IAAU8F,GAAmBzF,GAAYyF,GACtEzgC,gBAQAi1C,cAAiC,kBAAXtZ,EAAsBA,EAAS,OACrD0Z,yBACArE,eACAvB,cAER,CAhFQzD,CAAqBsS,EAAiB59C,QAASH,EAAO09C,EAA2BQ,GAErF,MAAMtoB,GAAYooB,EAAAA,GAAAA,SAAO,IACzBI,EAAAA,GAAAA,qBAAmB,KAKX3+C,GAAiBm2B,EAAUz1B,SAC3BV,EAAcqF,OAAO9E,EAAOqxB,EAChC,IAMJ,MAAMgtB,EAAoBr+C,EAAM6vB,IAC1ByuB,GAAeN,EAAAA,GAAAA,QAAOhuC,QAAQquC,MACY,QAAzClwC,EAAK9E,OAAOk1C,+BAA4C,IAAPpwC,OAAgB,EAASA,EAAGkC,KAAKhH,OAAQg1C,MAC9C,QAA7CprC,EAAK5J,OAAOkiC,mCAAgD,IAAPt4B,OAAgB,EAASA,EAAG5C,KAAKhH,OAAQg1C,KAqCpG,OApCAG,EAAAA,GAAAA,IAA0B,KACjB/+C,IAELm2B,EAAUz1B,SAAU,EACpBkJ,OAAOo1C,iBAAkB,EACzBh/C,EAAci/C,iBACdza,GAAUj/B,OAAOvF,EAAcuF,QAW3Bs5C,EAAan+C,SAAWV,EAAckxB,gBACtClxB,EAAckxB,eAAewC,iBACjC,KAEJgT,EAAAA,GAAAA,YAAU,KACD1mC,KAEA6+C,EAAan+C,SAAWV,EAAckxB,gBACvClxB,EAAckxB,eAAewC,iBAE7BmrB,EAAan+C,UAEbiZ,gBAAe,KACX,IAAIjL,EAC0C,QAA7CA,EAAK9E,OAAOs1C,mCAAgD,IAAPxwC,GAAyBA,EAAGkC,KAAKhH,OAAQg1C,EAAkB,IAErHC,EAAan+C,SAAU,GAC3B,IAEGV,CACX,CAwBA,SAAS0+C,GAAyB1+C,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAcwa,QAAQ2kC,gBACvBn/C,EAAcu/B,WACdmf,GAAyB1+C,EAAc8yB,OACjD,CC5HA,SAASssB,GAAarB,EAAa/9C,EAAeq/C,GAC9C,OAAO1Y,EAAAA,GAAAA,cAAa7I,IAChBA,GAAYigB,EAAYvnB,OAASunB,EAAYvnB,MAAMsH,GAC/C99B,IACI89B,EACA99B,EAAcw2B,MAAMsH,GAGpB99B,EAAc22B,WAGlB0oB,IAC2B,oBAAhBA,EACPA,EAAYvhB,GAEP9C,GAAYqkB,KACjBA,EAAY3+C,QAAUo9B,GAE9B,GAOJ,CAAC99B,GACL,CC7BA,SAAS4yB,GAAsBryB,GAC3B,OAAQrB,EAAoBqB,EAAMipB,UAC9BvoB,EAAa0d,MAAMtP,GAASvP,EAAeS,EAAM8O,KACzD,CACA,SAASiwC,GAAc/+C,GACnB,OAAOgQ,QAAQqiB,GAAsBryB,IAAUA,EAAMM,SACzD,CCNA,SAAS0+C,GAAuBh/C,GAC5B,MAAM,QAAEwyB,EAAO,QAAEvJ,GCFrB,SAAgCjpB,EAAOsyB,GACnC,GAAID,GAAsBryB,GAAQ,CAC9B,MAAM,QAAEwyB,EAAO,QAAEvJ,GAAYjpB,EAC7B,MAAO,CACHwyB,SAAqB,IAAZA,GAAqBjzB,EAAeizB,GACvCA,OACAnyB,EACN4oB,QAAS1pB,EAAe0pB,GAAWA,OAAU5oB,EAErD,CACA,OAAyB,IAAlBL,EAAMi/C,QAAoB3sB,EAAU,CAAC,CAChD,CDTiC4sB,CAAuBl/C,GAAOgmC,EAAAA,GAAAA,YAAWoX,KACtE,OAAO+B,EAAAA,GAAAA,UAAQ,KAAM,CAAG3sB,UAASvJ,aAAY,CAACm2B,GAA0B5sB,GAAU4sB,GAA0Bn2B,IAChH,CACA,SAASm2B,GAA0B3sB,GAC/B,OAAO1zB,MAAMC,QAAQyzB,GAAQA,EAAK7e,KAAK,KAAO6e,CAClD,CEVA,MAAM4sB,GAAe,CACjBv1B,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJ2L,KAAM,CAAC,QACP2E,KAAM,CAAC,OAAQ,gBACf0iB,MAAO,CAAC,cACRK,MAAO,CAAC,aAAc,eAAgB,cACtClC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCtD,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDuC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3C9e,OAAQ,CAAC,SAAU,aAEjBkkB,GAAqB,CAAC,EAC5B,IAAK,MAAM9gD,MAAO6gD,GACdC,GAAmB9gD,IAAO,CACtB+gD,UAAYv/C,GAAUq/C,GAAa7gD,IAAK4f,MAAMtP,KAAW9O,EAAM8O,M,eCvBvE,MAAM0wC,GAAwBC,OAAOC,IAAI,yBCyBzC,SAASC,GAA6B/9C,GAAoF,IAAnF,kBAAEg+C,EAAiB,oBAAEnC,EAAmB,UAAEoC,EAAS,eAAEC,EAAc,UAAE1b,GAAYxiC,EACpHg+C,GCxBJ,SAAsBG,GAClB,IAAK,MAAMvhD,KAAOuhD,EACdT,GAAmB9gD,GAAO,IACnB8gD,GAAmB9gD,MACnBuhD,EAASvhD,GAGxB,CDiByBwhD,CAAaJ,GAiClC,MAAMK,GAA4BC,EAAAA,GAAAA,aAhClC,SAAyBlgD,EAAO8+C,GAK5B,IAAI/Y,EACJ,MAAMoa,EAAiB,KAChBna,EAAAA,GAAAA,YAAW6X,GAAAA,MACX79C,EACHwkC,SAAU4b,GAAYpgD,KAEpB,SAAEqgD,GAAaF,EACf7tB,EAAU0sB,GAAuBh/C,GACjCw9C,EAAcsC,EAAe9/C,EAAOqgD,GAC1C,IAAKA,GAAYC,GAAAA,EAAW,EA4BpC,YACqBta,EAAAA,GAAAA,YAAWqX,IAAaC,OAKrC94C,CAQR,CAzCY+7C,GACA,MAAMC,EAyClB,SAAoCxgD,GAChC,MAAM,KAAEo6B,EAAI,OAAEgB,GAAWkkB,GACzB,IAAKllB,IAASgB,EACV,MAAO,CAAC,EACZ,MAAMqlB,EAAW,IAAKrmB,KAASgB,GAC/B,MAAO,CACH2K,eAAyB,OAAT3L,QAA0B,IAATA,OAAkB,EAASA,EAAKmlB,UAAUv/C,MAAuB,OAAXo7B,QAA8B,IAAXA,OAAoB,EAASA,EAAOmkB,UAAUv/C,IAClJygD,EAAS1a,mBACT1lC,EACNk4C,eAAgBkI,EAASlI,eAEjC,CApDqCmI,CAA2BP,GACpDpa,EAAgBya,EAAiBza,cAOjCzT,EAAQ7yB,cAAgB89C,GAAiBnZ,EAAWoZ,EAAa2C,EAAgB1C,EAAqB+C,EAAiBjI,eAC3H,CAKA,OAAQoI,EAAAA,GAAAA,MAAKvD,GAAcwD,SAAU,CAAE/gD,MAAOyyB,EAAS2X,SAAU,CAAClE,GAAiBzT,EAAQ7yB,eAAiB8mC,EAAAA,GAAAA,KAAIR,EAAe,CAAEtmC,cAAe6yB,EAAQ7yB,iBAAkB0gD,IAAqB,KAAMN,EAAUzb,EAAWpkC,EAAO6+C,GAAarB,EAAalrB,EAAQ7yB,cAAeq/C,GAActB,EAAa6C,EAAU/tB,EAAQ7yB,iBACnU,IAGA,OADAwgD,EAA0BT,IAAyBpb,EAC5C6b,CACX,CACA,SAASG,GAAW50C,GAAe,IAAd,SAAEg5B,GAAUh5B,EAC7B,MAAMq1C,GAAgB7a,EAAAA,GAAAA,YAAWM,GAAAA,GAAoBzQ,GACrD,OAAOgrB,QAA8BxgD,IAAbmkC,EAClBqc,EAAgB,IAAMrc,EACtBA,CACV,CEhEA,MAAMsc,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAe3c,GACpB,MAKqB,kBAAdA,IAIHA,EAAU4S,SAAS,SAOvB8J,GAAqBj0B,QAAQuX,IAAc,GAIvC,SAASr8B,KAAKq8B,GAItB,CC3BA,SAAS4c,GAAWr4C,EAAO/G,EAAmBwzC,EAAWpW,GAAY,IAAxC,MAAEmD,EAAK,KAAE8e,GAAMr/C,EACxCsO,OAAO2W,OAAOle,EAAQw5B,MAAOA,EAAOnD,GAAcA,EAAWmW,oBAAoBC,IAEjF,IAAK,MAAM52C,KAAOyiD,EACdt4C,EAAQw5B,MAAM+e,YAAY1iD,EAAKyiD,EAAKziD,GAE5C,CCHA,MAAM2iD,GAAsB,IAAItgD,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASugD,GAAUz4C,EAAS04C,EAAaC,EAAYtiB,GACjDgiB,GAAWr4C,EAAS04C,OAAahhD,EAAW2+B,GAC5C,IAAK,MAAMxgC,KAAO6iD,EAAYE,MAC1B54C,EAAQ64C,aAAcL,GAAoB1iD,IAAID,GAA0BA,EAAnBkxB,GAAYlxB,GAAY6iD,EAAYE,MAAM/iD,GAEvG,CCNA,SAASijD,GAAoBjjD,EAAGoD,GAAwB,IAAtB,OAAEw5B,EAAM,SAAEoJ,GAAU5iC,EAClD,OAAQhB,EAAenC,IAAID,IACvBA,EAAIsD,WAAW,YACbs5B,QAAuB/6B,IAAbmkC,OACLR,GAAgBxlC,IAAgB,YAARA,EACvC,CCLA,SAASkjD,GAA4B1hD,EAAOm2B,EAAW12B,GACnD,IAAI0O,EACJ,MAAM,MAAEg0B,GAAUniC,EACZ2hD,EAAY,CAAC,EACnB,IAAK,MAAMnjD,KAAO2jC,GACVpS,GAAcoS,EAAM3jC,KACnB23B,EAAUgM,OACPpS,GAAcoG,EAAUgM,MAAM3jC,KAClCijD,GAAoBjjD,EAAKwB,SACgIK,KAAnD,QAApG8N,EAAuB,OAAlB1O,QAA4C,IAAlBA,OAA2B,EAASA,EAAcqO,SAAStP,UAAyB,IAAP2P,OAAgB,EAASA,EAAGqmB,cAC1ImtB,EAAUnjD,GAAO2jC,EAAM3jC,IAG/B,OAAOmjD,CACX,CCbA,SAASD,GAA4B1hD,EAAOm2B,EAAW12B,GACnD,MAAMkiD,EAAYC,GAA8B5hD,EAAOm2B,EAAW12B,GAClE,IAAK,MAAMjB,KAAOwB,EACd,GAAI+vB,GAAc/vB,EAAMxB,KACpBuxB,GAAcoG,EAAU33B,IAAO,CAI/BmjD,GAHuD,IAArChhD,EAAmBksB,QAAQruB,GACvC,OAASA,EAAIqjD,OAAO,GAAGlgB,cAAgBnjC,EAAI+S,UAAU,GACrD/S,GACiBwB,EAAMxB,EACjC,CAEJ,OAAOmjD,CACX,C,eCGA,MAAMG,GAAsBjN,GAAW,CAAC70C,EAAOqgD,KAC3C,MAAM/tB,GAAU0T,EAAAA,GAAAA,YAAWoX,IACrB/rB,GAAkB2U,EAAAA,GAAAA,YAAWC,GAAAA,GAC7B8b,EAAOA,IAbjB,SAAkBngD,EAA+D5B,EAAOsyB,EAASjB,GAAiB,IAA/F,4BAAEqwB,EAA2B,kBAAEM,EAAiB,QAAEC,GAAUrgD,EAC3E,MAAMlC,EAAQ,CACVmxB,aAAcqxB,GAAiBliD,EAAOsyB,EAASjB,EAAiBqwB,GAChEL,YAAaW,KAKjB,OAHIC,IACAviD,EAAMu2B,MAASsH,GAAa0kB,EAAQjiD,EAAOu9B,EAAU79B,IAElDA,CACX,CAIuByiD,CAAUtN,EAAQ70C,EAAOsyB,EAASjB,GACrD,OAAOgvB,EAAW0B,KAASK,EAAAA,GAAAA,GAAYL,EAAK,EAEhD,SAASG,GAAiBliD,EAAOsyB,EAASjB,EAAiBgxB,GACvD,MAAM1iD,EAAS,CAAC,EACV2iD,EAAeD,EAAmBriD,EAAO,CAAC,GAChD,IAAK,MAAMxB,KAAO8jD,EACd3iD,EAAOnB,GAAO2rC,GAAmBmY,EAAa9jD,IAElD,IAAI,QAAEg0B,EAAO,QAAEvJ,GAAYjpB,EAC3B,MAAMuiD,EAA0BlwB,GAAsBryB,GAChDwiD,EAAkBzD,GAAc/+C,GAClCsyB,GACAkwB,IACCD,IACiB,IAAlBviD,EAAMi/C,eACU5+C,IAAZmyB,IACAA,EAAUF,EAAQE,cACNnyB,IAAZ4oB,IACAA,EAAUqJ,EAAQrJ,UAE1B,IAAIw5B,IAA4BpxB,IACE,IAA5BA,EAAgBmB,QAEtBiwB,EAA4BA,IAAyC,IAAZjwB,EACzD,MAAMkwB,EAAeD,EAA4Bx5B,EAAUuJ,EAC3D,GAAIkwB,GACwB,mBAAjBA,IACN/jD,EAAoB+jD,GAAe,CACpC,MAAMC,EAAO5jD,MAAMC,QAAQ0jD,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAIpjD,EAAI,EAAGA,EAAIqjD,EAAKtjD,OAAQC,IAAK,CAClC,MAAM8J,EAAWrJ,EAAwBC,EAAO2iD,EAAKrjD,IACrD,GAAI8J,EAAU,CACV,MAAM,cAAEqnB,EAAa,WAAEvuB,KAAe+V,GAAW7O,EACjD,IAAK,MAAM5K,KAAOyZ,EAAQ,CACtB,IAAI6Y,EAAc7Y,EAAOzZ,GACzB,GAAIO,MAAMC,QAAQ8xB,GAAc,CAQ5BA,EAAcA,EAHA2xB,EACR3xB,EAAYzxB,OAAS,EACrB,EAEV,CACoB,OAAhByxB,IACAnxB,EAAOnB,GAAOsyB,EAEtB,CACA,IAAK,MAAMtyB,KAAOiyB,EACd9wB,EAAOnB,GAAOiyB,EAAcjyB,EAEpC,CACJ,CACJ,CACA,OAAOmB,CACX,CC/EA,MAAMijD,GAAwBA,KAAA,CAC1BzgB,MAAO,CAAC,EACRt4B,UAAW,CAAC,EACZmsC,gBAAiB,CAAC,EAClBiL,KAAM,CAAC,ICFL4B,GAAuBA,KAAA,CDDzB1gB,MAAO,CAAC,EACRt4B,UAAW,CAAC,EACZmsC,gBAAiB,CAAC,EAClBiL,KAAM,CAAC,ECAPM,MAAO,CAAC,ICDNuB,GAAiBA,CAACjjD,EAAOsB,IACpBA,GAAyB,kBAAVtB,EAChBsB,EAAK0I,UAAUhK,GACfA,ECFJkjD,GAAiB,CACnBt8C,EAAG,aACHsF,EAAG,aACHiK,EAAG,aACHE,qBAAsB,eAEpB8sC,GAAgBriD,EAAmBtB,OCJzC,SAAS4jD,GAAgBvjD,EAAOmxB,EAAcqR,GAC1C,MAAM,MAAEC,EAAK,KAAE8e,EAAI,gBAAEjL,GAAoBt2C,EAEzC,IAAI48B,GAAe,EACf4mB,GAAqB,EAOzB,IAAK,MAAM1kD,KAAOqyB,EAAc,CAC5B,MAAMhxB,EAAQgxB,EAAaryB,GAC3B,GAAIoC,EAAenC,IAAID,GAEnB89B,GAAe,OAGd,GAAIn0B,EAAkB3J,GACvByiD,EAAKziD,GAAOqB,MAGX,CAED,MAAMsjD,EAAcL,GAAejjD,EAAO2W,GAAiBhY,IACvDA,EAAIsD,WAAW,WAEfohD,GAAqB,EACrBlN,EAAgBx3C,GACZ2kD,GAGJhhB,EAAM3jC,GAAO2kD,CAErB,CACJ,CAiBA,GAhBKtyB,EAAahnB,YACVyyB,GAAgB4F,EAChBC,EAAMt4B,UD3BlB,SAAwBgnB,EAAchnB,EAAWq4B,GAE7C,IAAIkhB,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAI/jD,EAAI,EAAGA,EAAI0jD,GAAe1jD,IAAK,CACpC,MAAMd,EAAMmC,EAAmBrB,GACzBO,EAAQgxB,EAAaryB,GAC3B,QAAc6B,IAAVR,EACA,SACJ,IAAIyjD,GAAiB,EAOrB,GALIA,EADiB,kBAAVzjD,EACUA,KAAWrB,EAAIsD,WAAW,SAAW,EAAI,GAGnB,IAAtB2H,WAAW5J,IAE3ByjD,GAAkBphB,EAAmB,CACtC,MAAMihB,EAAcL,GAAejjD,EAAO2W,GAAiBhY,IACtD8kD,IACDD,GAAqB,EAErBD,GAAmB,GADGL,GAAevkD,IAAQA,KACN2kD,OAEvCjhB,IACAr4B,EAAUrL,GAAO2kD,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgB56C,OAG9B05B,EACAkhB,EAAkBlhB,EAAkBr4B,EAAWw5C,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CCf8BG,CAAe1yB,EAAcnxB,EAAMmK,UAAWq4B,GAE3DC,EAAMt4B,YAKXs4B,EAAMt4B,UAAY,SAOtBq5C,EAAoB,CACpB,MAAM,QAAE9sC,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAO0/B,EAC3D7T,EAAM6T,gBAAkB,GAAG5/B,KAAWC,KAAWC,GACrD,CACJ,CC5DA,SAAS2rB,GAAWjqB,EAAQ8M,EAAQpO,GAChC,MAAyB,kBAAXsB,EACRA,EACA1N,GAAGT,UAAUib,EAASpO,EAAOsB,EACvC,CCJA,MAAMwrC,GAAW,CACb1+B,OAAQ,oBACR2+B,MAAO,oBAELC,GAAY,CACd5+B,OAAQ,mBACR2+B,MAAO,mBCDX,SAASE,GAAcjkD,EAAKkC,EAEfgiD,EAAU1hB,GAAmB,IAFZ,MAAE2hB,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE3tC,EAAO,QAAEC,EAAO,WAAE2tC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElH1jC,GAAQ5e,EAMP,GALAqhD,GAAgBvjD,EAAO8gB,EAAQ0hB,GAK3B0hB,EAIA,YAHIlkD,EAAMyiC,MAAMgiB,UACZzkD,EAAM6hD,MAAM4C,QAAUzkD,EAAMyiC,MAAMgiB,UAI1CzkD,EAAM6hD,MAAQ7hD,EAAMyiC,MACpBziC,EAAMyiC,MAAQ,CAAC,EACf,MAAM,MAAEof,EAAK,MAAEpf,EAAK,WAAEiiB,GAAe1kD,EAKjC6hD,EAAM13C,YACFu6C,IACAjiB,EAAMt4B,UAAY03C,EAAM13C,kBACrB03C,EAAM13C,WAGbu6C,SACa/jD,IAAZ+V,QAAqC/V,IAAZgW,GAAyB8rB,EAAMt4B,aACzDs4B,EAAM6T,gBFzBd,SAAgCoO,EAAYhuC,EAASC,GAGjD,MAAO,GAFW4rB,GAAW7rB,EAASguC,EAAW39C,EAAG29C,EAAW74C,UAC7C02B,GAAW5rB,EAAS+tC,EAAWr4C,EAAGq4C,EAAWx4C,SAEnE,CEqBgCy4C,CAAuBD,OAAwB/jD,IAAZ+V,EAAwBA,EAAU,QAAiB/V,IAAZgW,EAAwBA,EAAU,UAG1HhW,IAAVwjD,IACAtC,EAAM96C,EAAIo9C,QACAxjD,IAAVyjD,IACAvC,EAAMx1C,EAAI+3C,QACIzjD,IAAd0jD,IACAxC,EAAMx3C,MAAQg6C,QAEC1jD,IAAf2jD,GD7BR,SAAsBzC,EAAOliD,GAAqD,IAA7CilD,EAAOjmD,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGymB,EAAMzmB,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,EAAGkmD,IAAWlmD,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,KAAAA,UAAA,GAErEkjD,EAAMyC,WAAa,EAGnB,MAAM7lC,EAAOomC,EAAcf,GAAWE,GAEtCnC,EAAMpjC,EAAK2G,QAAUxa,GAAGT,WAAWib,GAEnC,MAAMk/B,EAAa15C,GAAGT,UAAUxK,GAC1B4kD,EAAc35C,GAAGT,UAAUy6C,GACjC/C,EAAMpjC,EAAKslC,OAAS,GAAGO,KAAcC,GACzC,CCkBQO,CAAajD,EAAOyC,EAAYC,EAAaC,GAAY,EAEjE,CCjDA,MAAMN,GAAYa,GAAuB,kBAARA,GAA0C,QAAtBA,EAAI70B,cCQnD80B,GAAkB,CACpB5E,eAAgBgC,GAAmB,CAC/BJ,4BAA6BA,GAC7BM,kBAAmBa,GACnBZ,QAASA,CAACjiD,EAAOu9B,EAAQ37B,KAAoC,IAAlC,YAAEy/C,EAAW,aAAExwB,GAAcjvB,EACpD6D,EAAMb,MAAK,KACP,IACIy8C,EAAY+C,WAEJ,oBADG7mB,EAASonB,QAEVpnB,EAASonB,UACTpnB,EAASI,uBACvB,CACA,MAAOtgB,GAEHgkC,EAAY+C,WAAa,CACrB39C,EAAG,EACHsF,EAAG,EACHR,MAAO,EACPK,OAAQ,EAEhB,KAEJnG,EAAMT,QAAO,KACT2+C,GAActC,EAAaxwB,EAAc+yB,GAASrmB,EAAS2Q,SAAUluC,EAAMkiC,mBAC3Ekf,GAAU7jB,EAAU8jB,EAAY,GAClC,KC9BRuD,GAAmB,CACrB9E,eAAgBgC,GAAmB,CAC/BJ,4BAA2B,GAC3BM,kBAAmBY,MCD3B,SAASiC,GAAkB5sC,EAAQrF,EAAQ5S,GACvC,IAAK,MAAMxB,KAAOoU,EACTmd,GAAcnd,EAAOpU,KAAUijD,GAAoBjjD,EAAKwB,KACzDiY,EAAOzZ,GAAOoU,EAAOpU,GAGjC,CAQA,SAASsmD,GAAS9kD,EAAOw9C,GACrB,MACMrb,EAAQ,CAAC,EAMf,OAFA0iB,GAAkB1iB,EALAniC,EAAMmiC,OAAS,CAAC,EAKEniC,GACpCkQ,OAAO2W,OAAOsb,EAdlB,SAA+BvgC,EAAwB47C,GAAa,IAApC,kBAAEtb,GAAmBtgC,EACjD,OAAOu9C,EAAAA,GAAAA,UAAQ,KACX,MAAMz/C,EXfgB,CAC1ByiC,MAAO,CAAC,EACRt4B,UAAW,CAAC,EACZmsC,gBAAiB,CAAC,EAClBiL,KAAM,CAAC,GWaH,OADAgC,GAAgBvjD,EAAO89C,EAAatb,GAC7BhyB,OAAO2W,OAAO,CAAC,EAAGnnB,EAAMuhD,KAAMvhD,EAAMyiC,MAAM,GAClD,CAACqb,GACR,CAQyBuH,CAAuB/kD,EAAOw9C,IAC5Crb,CACX,CACA,SAAS6iB,GAAahlD,EAAOw9C,GAEzB,MAAMyH,EAAY,CAAC,EACb9iB,EAAQ2iB,GAAS9kD,EAAOw9C,GAoB9B,OAnBIx9C,EAAMo6B,OAA+B,IAAvBp6B,EAAMwiC,eAEpByiB,EAAUC,WAAY,EAEtB/iB,EAAMgjB,WACFhjB,EAAMijB,iBACFjjB,EAAMkjB,mBACF,OAEZljB,EAAMmjB,aACa,IAAftlD,EAAMo6B,KACA,OACA,QAAsB,MAAfp6B,EAAMo6B,KAAe,IAAM,WAEzB/5B,IAAnBL,EAAMulD,WACLvlD,EAAM67C,OAAS77C,EAAM28C,YAAc38C,EAAMs1B,YAC1C2vB,EAAUM,SAAW,GAEzBN,EAAU9iB,MAAQA,EACX8iB,CACX,CChDA,MAAMO,GAAmB,IAAI3kD,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS4kD,GAAkBjnD,GACvB,OAAQA,EAAIsD,WAAW,UAClBtD,EAAIsD,WAAW,SAAmB,cAARtD,GAC3BA,EAAIsD,WAAW,WACftD,EAAIsD,WAAW,UACftD,EAAIsD,WAAW,UACftD,EAAIsD,WAAW,aACf0jD,GAAiB/mD,IAAID,EAC7B,CCpDA,IAAIknD,GAAiBlnD,IAASinD,GAAkBjnD,GAoBhD,KAnBiCmnD,GAyBLC,QAAQ,0BAA0B57C,WArB1D07C,GAAiBlnD,GAAQA,EAAIsD,WAAW,OAAS2jD,GAAkBjnD,GAAOmnD,GAAYnnD,GAsB1F,CACA,MAAO2P,IACH,CA5BJ,IAAiCw3C,GCGjC,SAASE,GAAY7lD,EAAOw9C,EAAasI,EAAW1hB,GAChD,MAAM2hB,GAAc5G,EAAAA,GAAAA,UAAQ,KACxB,MAAMz/C,EbNe,CDDzByiC,MAAO,CAAC,EACRt4B,UAAW,CAAC,EACZmsC,gBAAiB,CAAC,EAClBiL,KAAM,CAAC,ECAPM,MAAO,CAAC,GaMJ,OADAoC,GAAcjkD,EAAO89C,EAAaoG,GAASxf,GAAYpkC,EAAMkiC,mBACtD,IACAxiC,EAAM6hD,MACTpf,MAAO,IAAKziC,EAAMyiC,OACrB,GACF,CAACqb,IACJ,GAAIx9C,EAAMmiC,MAAO,CACb,MAAM6jB,EAAY,CAAC,EACnBnB,GAAkBmB,EAAWhmD,EAAMmiC,MAAOniC,GAC1C+lD,EAAY5jB,MAAQ,IAAK6jB,KAAcD,EAAY5jB,MACvD,CACA,OAAO4jB,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkB7nD,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,IAAAA,UAAA,GAsBvC,MArBkBwhD,CAACzb,EAAWpkC,EAAO06B,EAAG94B,EAAoBy+C,KAAa,IAA/B,aAAExvB,GAAcjvB,EACtD,MAGMmkD,GAHiBhF,GAAe3c,GAChCyhB,GACAb,IAC6BhlD,EAAO6wB,EAAcwvB,EAAUjc,GAC5D+hB,EFoBd,SAAqBnmD,EAAOomD,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM3nD,KAAOwB,EAQF,WAARxB,GAA4C,kBAAjBwB,EAAML,SAEjC+lD,GAAclnD,KACU,IAAvB0nD,GAA+BT,GAAkBjnD,KAChD4nD,IAAUX,GAAkBjnD,IAE7BwB,EAAiB,WACdxB,EAAIsD,WAAW,aACnBqkD,EAAc3nD,GACVwB,EAAMxB,IAGlB,OAAO2nD,CACX,CE3C8BE,CAAYrmD,EAA4B,kBAAdokC,EAAwB8hB,GAClEI,EAAeliB,IAAcmiB,GAAAA,SAC7B,IAAKJ,KAAkBJ,EAAarrB,OACpC,CAAC,GAMD,SAAEuP,GAAajqC,EACfwmD,GAAmBrH,EAAAA,GAAAA,UAAQ,IAAOpvB,GAAcka,GAAYA,EAAS3rC,MAAQ2rC,GAAW,CAACA,IAC/F,OAAOjhB,EAAAA,GAAAA,eAAcob,EAAW,IACzBkiB,EACHrc,SAAUuc,GACZ,CAGV,CCxBA,SAASC,GAA6B7G,EAAmBnC,GACrD,OAAO,SAA+BrZ,GAAmE,IAAxD,mBAAE8hB,GAAoB7nD,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAE6nD,oBAAoB,GAW5F,OAAOvG,GAPQ,IAHIoB,GAAe3c,GAC5BsgB,GACAE,GAGFhF,oBACAC,UAAWoG,GAAgBC,GAC3BzI,sBACArZ,aAGR,CACJ,CCnBA,MAAMsiB,GAAuB,CAAEvmD,QAAS,MAClCwmD,GAA2B,CAAExmD,SAAS,GCF5C,MAAMymD,GAAqB,IAAI5oB,QCQzB6oB,GAAa,IAAI95C,GAAqB8E,GAAOmB,ICc7C8zC,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQFrF,2BAAAA,CAA4BsF,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACAv4C,WAAAA,CAAW/M,GAA6G,IAA5G,OAAE2wB,EAAM,MAAEvyB,EAAK,gBAAEqxB,EAAe,oBAAEusB,EAAmB,sBAAElpB,EAAqB,YAAE8oB,GAAc57C,EAAEqY,EAAO5b,UAAAgB,OAAA,QAAAgB,IAAAhC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjH4Q,KAAK9O,QAAU,KAIf8O,KAAKg7B,SAAW,IAAIppC,IAIpBoO,KAAK8vC,eAAgB,EACrB9vC,KAAKojB,uBAAwB,EAQ7BpjB,KAAKgiB,mBAAqB,KAM1BhiB,KAAKtP,OAAS,IAAIvB,IAClB6Q,KAAKP,iBAAmBA,GAIxBO,KAAK8wC,SAAW,CAAC,EAKjB9wC,KAAKk4C,mBAAqB,IAAI/oD,IAM9B6Q,KAAKm4C,iBAAmB,CAAC,EAIzBn4C,KAAKye,OAAS,CAAC,EAMfze,KAAKo4C,uBAAyB,CAAC,EAC/Bp4C,KAAKq4C,aAAe,IAAMr4C,KAAKge,OAAO,SAAUhe,KAAK4hB,cACrD5hB,KAAKjK,OAAS,KACLiK,KAAK9O,UAEV8O,KAAKs4C,eACLt4C,KAAKu4C,eAAev4C,KAAK9O,QAAS8O,KAAKoyC,YAAapyC,KAAKjP,MAAMmiC,MAAOlzB,KAAK+vB,YAAW,EAE1F/vB,KAAKw4C,kBAAoB,EACzBx4C,KAAK25B,eAAiB,KAClB,MAAMxjC,EAAM8T,GAAK9T,MACb6J,KAAKw4C,kBAAoBriD,IACzB6J,KAAKw4C,kBAAoBriD,EACzBK,EAAMT,OAAOiK,KAAKjK,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAE6rB,EAAY,YAAEwwB,GAAgB7D,EACtCvuC,KAAK4hB,aAAeA,EACpB5hB,KAAKy4C,WAAa,IAAK72B,GACvB5hB,KAAK04C,cAAgB3nD,EAAMwyB,QAAU,IAAK3B,GAAiB,CAAC,EAC5D5hB,KAAKoyC,YAAcA,EACnBpyC,KAAKsjB,OAASA,EACdtjB,KAAKjP,MAAQA,EACbiP,KAAKoiB,gBAAkBA,EACvBpiB,KAAKrG,MAAQ2pB,EAASA,EAAO3pB,MAAQ,EAAI,EACzCqG,KAAK2uC,oBAAsBA,EAC3B3uC,KAAKgL,QAAUA,EACfhL,KAAKylB,sBAAwB1kB,QAAQ0kB,GACrCzlB,KAAKojB,sBAAwBA,GAAsBryB,GACnDiP,KAAK8vC,cAAgBA,GAAc/+C,GAC/BiP,KAAK8vC,gBACL9vC,KAAKuiB,gBAAkB,IAAI3wB,KAE/BoO,KAAK4kB,uBAAyB7jB,QAAQuiB,GAAUA,EAAOpyB,SAWvD,MAAM,WAAE8vB,KAAe23B,GAAwB34C,KAAKyyC,4BAA4B1hD,EAAO,CAAC,EAAGiP,MAC3F,IAAK,MAAMzQ,KAAOopD,EAAqB,CACnC,MAAM/nD,EAAQ+nD,EAAoBppD,QACR6B,IAAtBwwB,EAAaryB,IAAsBuxB,GAAclwB,IACjDA,EAAMnB,IAAImyB,EAAaryB,IAAM,EAErC,CACJ,CACAy3B,KAAAA,CAAMsH,GACFtuB,KAAK9O,QAAUo9B,EACfqpB,GAAmBloD,IAAI6+B,EAAUtuB,MAC7BA,KAAK+vB,aAAe/vB,KAAK+vB,WAAWzB,UACpCtuB,KAAK+vB,WAAW/I,MAAMsH,GAEtBtuB,KAAKsjB,QAAUtjB,KAAK8vC,gBAAkB9vC,KAAKojB,wBAC3CpjB,KAAK44C,sBAAwB54C,KAAKsjB,OAAOu1B,gBAAgB74C,OAE7DA,KAAKtP,OAAOC,SAAQ,CAACC,EAAOrB,IAAQyQ,KAAK84C,kBAAkBvpD,EAAKqB,KAC3D8mD,GAAyBxmD,SC/JtC,WAEI,GADAwmD,GAAyBxmD,SAAU,EAC9BmgD,GAAAA,EAEL,GAAIj3C,OAAO2+C,WAAY,CACnB,MAAMC,EAAmB5+C,OAAO2+C,WAAW,4BACrCE,EAA8BA,IAAOxB,GAAqBvmD,QAAU8nD,EAAiBhL,QAC3FgL,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqBvmD,SAAU,CAEvC,CDmJYioD,GAEJn5C,KAAKgiB,mBAC4B,UAA7BhiB,KAAK2uC,sBAE8B,WAA7B3uC,KAAK2uC,qBAED8I,GAAqBvmD,SAI/B8O,KAAKsjB,QACLtjB,KAAKsjB,OAAO0X,SAAS5lC,IAAI4K,MAC7BA,KAAKnK,OAAOmK,KAAKjP,MAAOiP,KAAKoiB,gBACjC,CACA+E,OAAAA,GACIwwB,GAAmBriD,OAAO0K,KAAK9O,SAC/B8O,KAAK+vB,YAAc/vB,KAAK+vB,WAAW5I,UACnC1wB,EAAYuJ,KAAKq4C,cACjB5hD,EAAYuJ,KAAKjK,QACjBiK,KAAKk4C,mBAAmBvnD,SAASimC,GAAWA,MAC5C52B,KAAKk4C,mBAAmBziD,QACxBuK,KAAK44C,uBAAyB54C,KAAK44C,wBACnC54C,KAAKsjB,QAAUtjB,KAAKsjB,OAAO0X,SAAS1lC,OAAO0K,MAC3C,IAAK,MAAMzQ,KAAOyQ,KAAKye,OACnBze,KAAKye,OAAOlvB,GAAKkG,QAErB,IAAK,MAAMlG,KAAOyQ,KAAK8wC,SAAU,CAC7B,MAAMsI,EAAUp5C,KAAK8wC,SAASvhD,GAC1B6pD,IACAA,EAAQjyB,UACRiyB,EAAQzyB,WAAY,EAE5B,CACA3mB,KAAK9O,QAAU,IACnB,CACA4nD,iBAAAA,CAAkBvpD,EAAKqB,GACfoP,KAAKk4C,mBAAmB1oD,IAAID,IAC5ByQ,KAAKk4C,mBAAmB7oD,IAAIE,EAA5ByQ,GAEJ,MAAMq5C,EAAmB1nD,EAAenC,IAAID,GACtC+pD,EAAiB1oD,EAAMyuB,GAAG,UAAWk6B,IACvCv5C,KAAK4hB,aAAaryB,GAAOgqD,EACzBv5C,KAAKjP,MAAM0a,UAAYjV,EAAMV,UAAUkK,KAAKq4C,cACxCgB,GAAoBr5C,KAAK+vB,aACzB/vB,KAAK+vB,WAAWmN,kBAAmB,EACvC,IAEEsc,EAAwB5oD,EAAMyuB,GAAG,gBAAiBrf,KAAK25B,gBAC7D,IAAI8f,EACAr/C,OAAOs/C,wBACPD,EAAkBr/C,OAAOs/C,sBAAsB15C,KAAMzQ,EAAKqB,IAE9DoP,KAAKk4C,mBAAmBzoD,IAAIF,GAAK,KAC7B+pD,IACAE,IACIC,GACAA,IACA7oD,EAAMwqB,OACNxqB,EAAMgmB,MAAM,GAExB,CACAqM,gBAAAA,CAAiB02B,GAIb,OAAK35C,KAAK9O,SACL8O,KAAK45C,0BACN55C,KAAK9N,OAASynD,EAAMznD,KAGjB8N,KAAK45C,yBAAyB55C,KAAK9O,QAASyoD,EAAMzoD,SAF9C,CAGf,CACAu+C,cAAAA,GACI,IAAIlgD,EAAM,YACV,IAAKA,KAAO8gD,GAAoB,CAC5B,MAAMwJ,EAAoBxJ,GAAmB9gD,GAC7C,IAAKsqD,EACD,SACJ,MAAM,UAAEvJ,EAAW7pB,QAASqzB,GAAuBD,EAYnD,IARK75C,KAAK8wC,SAASvhD,IACfuqD,GACAxJ,EAAUtwC,KAAKjP,SACfiP,KAAK8wC,SAASvhD,GAAO,IAAIuqD,EAAmB95C,OAK5CA,KAAK8wC,SAASvhD,GAAM,CACpB,MAAM6pD,EAAUp5C,KAAK8wC,SAASvhD,GAC1B6pD,EAAQzyB,UACRyyB,EAAQvjD,UAGRujD,EAAQpyB,QACRoyB,EAAQzyB,WAAY,EAE5B,CACJ,CACJ,CACA2xB,YAAAA,GACIt4C,KAAK+5C,MAAM/5C,KAAKoyC,YAAapyC,KAAK4hB,aAAc5hB,KAAKjP,MACzD,CAMA0Y,kBAAAA,GACI,OAAOzJ,KAAK9O,QACN8O,KAAKg6C,2BAA2Bh6C,KAAK9O,QAAS8O,KAAKjP,OlFzQ/C,CACdyG,EAFe,CAASnB,IAAK,EAAGD,IAAK,GAGrC0G,EAHe,CAASzG,IAAK,EAAGD,IAAK,GkF4QrC,CACA6jD,cAAAA,CAAe1qD,GACX,OAAOyQ,KAAK4hB,aAAaryB,EAC7B,CACA2sC,cAAAA,CAAe3sC,EAAKqB,GAChBoP,KAAK4hB,aAAaryB,GAAOqB,CAC7B,CAKAiF,MAAAA,CAAO9E,EAAOqxB,IACNrxB,EAAMkiC,mBAAqBjzB,KAAKjP,MAAMkiC,oBACtCjzB,KAAK25B,iBAET35B,KAAKknB,UAAYlnB,KAAKjP,MACtBiP,KAAKjP,MAAQA,EACbiP,KAAKunB,oBAAsBvnB,KAAKoiB,gBAChCpiB,KAAKoiB,gBAAkBA,EAIvB,IAAK,IAAI/xB,EAAI,EAAGA,EAAIwnD,GAAkBznD,OAAQC,IAAK,CAC/C,MAAMd,EAAMsoD,GAAkBxnD,GAC1B2P,KAAKo4C,uBAAuB7oD,KAC5ByQ,KAAKo4C,uBAAuB7oD,YACrByQ,KAAKo4C,uBAAuB7oD,IAEvC,MACM2qD,EAAWnpD,EADK,KAAOxB,GAEzB2qD,IACAl6C,KAAKo4C,uBAAuB7oD,GAAOyQ,KAAKqf,GAAG9vB,EAAK2qD,GAExD,CACAl6C,KAAKm4C,iBEpTb,SAAqCz+C,EAASzJ,EAAMC,GAChD,IAAK,MAAMX,KAAOU,EAAM,CACpB,MAAMkqD,EAAYlqD,EAAKV,GACjB6qD,EAAYlqD,EAAKX,GACvB,GAAIuxB,GAAcq5B,GAKdzgD,EAAQ8mB,SAASjxB,EAAK4qD,QASrB,GAAIr5B,GAAcs5B,GAKnB1gD,EAAQ8mB,SAASjxB,EAAKuQ,GAAYq6C,EAAW,CAAE/+B,MAAO1hB,UAErD,GAAI0gD,IAAcD,EAMnB,GAAIzgD,EAAQ6mB,SAAShxB,GAAM,CACvB,MAAM8qD,EAAgB3gD,EAAQmF,SAAStP,IACP,IAA5B8qD,EAAc90B,UACd80B,EAAc1wC,KAAKwwC,GAEbE,EAAcr7B,aACpBq7B,EAAc5qD,IAAI0qD,EAE1B,KACK,CACD,MAAMZ,EAAc7/C,EAAQugD,eAAe1qD,GAC3CmK,EAAQ8mB,SAASjxB,EAAKuQ,QAA4B1O,IAAhBmoD,EAA4BA,EAAcY,EAAW,CAAE/+B,MAAO1hB,IACpG,CAER,CAEA,IAAK,MAAMnK,KAAOW,OACIkB,IAAdnB,EAAKV,IACLmK,EAAQ4gD,YAAY/qD,GAE5B,OAAOU,CACX,CFgQgCsqD,CAA4Bv6C,KAAMA,KAAKyyC,4BAA4B1hD,EAAOiP,KAAKknB,UAAWlnB,MAAOA,KAAKm4C,kBAC1Hn4C,KAAKw6C,wBACLx6C,KAAKw6C,wBAEb,CACAjpD,QAAAA,GACI,OAAOyO,KAAKjP,KAChB,CAIA0pD,UAAAA,CAAW56C,GACP,OAAOG,KAAKjP,MAAMM,SAAW2O,KAAKjP,MAAMM,SAASwO,QAAQzO,CAC7D,CAIAqB,oBAAAA,GACI,OAAOuN,KAAKjP,MAAMkC,UACtB,CACA09B,qBAAAA,GACI,OAAO3wB,KAAKjP,MAAM23B,kBACtB,CACAgyB,qBAAAA,GACI,OAAO16C,KAAK8vC,cACN9vC,KACAA,KAAKsjB,OACDtjB,KAAKsjB,OAAOo3B,6BACZtpD,CACd,CAIAynD,eAAAA,CAAgBh2B,GACZ,MAAM83B,EAAqB36C,KAAK06C,wBAChC,GAAIC,EAGA,OAFAA,EAAmBp4B,iBACfo4B,EAAmBp4B,gBAAgBntB,IAAIytB,GACpC,IAAM83B,EAAmBp4B,gBAAgBjtB,OAAOutB,EAE/D,CAIArC,QAAAA,CAASjxB,EAAKqB,GAEV,MAAMypD,EAAgBr6C,KAAKtP,OAAOrB,IAAIE,GAClCqB,IAAUypD,IACNA,GACAr6C,KAAKs6C,YAAY/qD,GACrByQ,KAAK84C,kBAAkBvpD,EAAKqB,GAC5BoP,KAAKtP,OAAOjB,IAAIF,EAAKqB,GACrBoP,KAAK4hB,aAAaryB,GAAOqB,EAAMvB,MAEvC,CAIAirD,WAAAA,CAAY/qD,GACRyQ,KAAKtP,OAAO4E,OAAO/F,GACnB,MAAMgwB,EAAcvf,KAAKk4C,mBAAmB7oD,IAAIE,GAC5CgwB,IACAA,IACAvf,KAAKk4C,mBAAmB5iD,OAAO/F,WAE5ByQ,KAAK4hB,aAAaryB,GACzByQ,KAAK46C,2BAA2BrrD,EAAKyQ,KAAKoyC,YAC9C,CAIA7xB,QAAAA,CAAShxB,GACL,OAAOyQ,KAAKtP,OAAOlB,IAAID,EAC3B,CACAsP,QAAAA,CAAStP,EAAKiV,GACV,GAAIxE,KAAKjP,MAAML,QAAUsP,KAAKjP,MAAML,OAAOnB,GACvC,OAAOyQ,KAAKjP,MAAML,OAAOnB,GAE7B,IAAIqB,EAAQoP,KAAKtP,OAAOrB,IAAIE,GAK5B,YAJc6B,IAAVR,QAAwCQ,IAAjBoT,IACvB5T,EAAQkP,GAA6B,OAAjB0E,OAAwBpT,EAAYoT,EAAc,CAAE4W,MAAOpb,OAC/EA,KAAKwgB,SAASjxB,EAAKqB,IAEhBA,CACX,CAMAyP,SAAAA,CAAU9Q,EAAKyZ,GACX,IAAI9J,EACJ,IAAItO,OAAmCQ,IAA3B4O,KAAK4hB,aAAaryB,IAAuByQ,KAAK9O,QAEI,QAAvDgO,EAAKc,KAAK66C,uBAAuB76C,KAAKjP,MAAOxB,UAAyB,IAAP2P,EAAgBA,EAAKc,KAAK86C,sBAAsB96C,KAAK9O,QAAS3B,EAAKyQ,KAAKgL,SADxIhL,KAAK4hB,aAAaryB,GDzYTI,MCsZf,YAXcyB,IAAVR,GAAiC,OAAVA,IACF,kBAAVA,IACNmI,EAAkBnI,IAAUiI,EAAkBjI,IAE/CA,EAAQ4J,WAAW5J,ID/YZjB,ECiZaiB,GDjZPgnD,GAAW55C,KAAKH,GAAclO,KCiZboU,GAAQjL,KAAKkQ,KAC3CpY,EAAQsT,GAAkB3U,EAAKyZ,KAEnChJ,KAAK+6C,cAAcxrD,EAAKuxB,GAAclwB,GAASA,EAAMvB,MAAQuB,IAE1DkwB,GAAclwB,GAASA,EAAMvB,MAAQuB,CAChD,CAKAmqD,aAAAA,CAAcxrD,EAAKqB,GACfoP,KAAKy4C,WAAWlpD,GAAOqB,CAC3B,CAKAg1B,aAAAA,CAAcr2B,GACV,IAAI2P,EACJ,MAAM,QAAEqkB,GAAYvjB,KAAKjP,MACzB,IAAIiqD,EACJ,GAAuB,kBAAZz3B,GAA2C,kBAAZA,EAAsB,CAC5D,MAAMpB,EAAUrxB,EAAwBkP,KAAKjP,MAAOwyB,EAAyC,QAA/BrkB,EAAKc,KAAKoiB,uBAAoC,IAAPljB,OAAgB,EAASA,EAAGjO,QAC7HkxB,IACA64B,EAAmB74B,EAAQ5yB,GAEnC,CAIA,GAAIg0B,QAAgCnyB,IAArB4pD,EACX,OAAOA,EAMX,MAAMhyC,EAAShJ,KAAK66C,uBAAuB76C,KAAKjP,MAAOxB,GACvD,YAAe6B,IAAX4X,GAAyB8X,GAAc9X,QAMR5X,IAA5B4O,KAAK04C,cAAcnpD,SACD6B,IAArB4pD,OACE5pD,EACA4O,KAAKy4C,WAAWlpD,GARXyZ,CASf,CACAqW,EAAAA,CAAGC,EAAWtqB,GAIV,OAHKgL,KAAKye,OAAOa,KACbtf,KAAKye,OAAOa,GAAa,IAAIxB,IAE1B9d,KAAKye,OAAOa,GAAWlqB,IAAIJ,EACtC,CACAgpB,MAAAA,CAAOsB,GACH,GAAItf,KAAKye,OAAOa,GAAY,SAAA7M,EAAArjB,UAAAgB,OADX0uC,EAAI,IAAAhvC,MAAA2iB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJmsB,EAAInsB,EAAA,GAAAvjB,UAAAujB,GAEjB3S,KAAKye,OAAOa,GAAWtB,UAAU8gB,EACrC,CACJ,EGtdJ,MAAMmc,WAAyBnD,GAC3Bp4C,WAAAA,GACIkJ,SAASxZ,WACT4Q,KAAKP,iBAAmBkJ,EAC5B,CACAixC,wBAAAA,CAAyBn4C,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEy5C,wBAAwBx5C,GAAS,GAAK,CACnD,CACAm5C,sBAAAA,CAAuB9pD,EAAOxB,GAC1B,OAAOwB,EAAMmiC,MACPniC,EAAMmiC,MAAM3jC,QACZ6B,CACV,CACAwpD,0BAAAA,CAA2BrrD,EAAGoD,GAAmB,IAAjB,KAAEq/C,EAAI,MAAE9e,GAAOvgC,SACpCq/C,EAAKziD,UACL2jC,EAAM3jC,EACjB,ECXJ,MAAM4rD,WAA0BF,GAC5Bv7C,WAAAA,GACIkJ,SAASxZ,WACT4Q,KAAK9N,KAAO,OACZ8N,KAAKu4C,eAAiBxG,EAC1B,CACA+I,qBAAAA,CAAsBxsB,EAAU/+B,GAC5B,GAAIoC,EAAenC,IAAID,GAAM,CACzB,MAAM6rD,EAAc5yC,GAAoBjZ,GACxC,OAAO6rD,GAAcA,EAAYrgD,SAAe,CACpD,CACK,CACD,MAAMsgD,GAfQ3hD,EAeyB40B,EAdxCl0B,OAAOC,iBAAiBX,IAejB9I,GAASsI,EAAkB3J,GAC3B8rD,EAAc/gD,iBAAiB/K,GAC/B8rD,EAAc9rD,KAAS,EAC7B,MAAwB,kBAAVqB,EAAqBA,EAAM2I,OAAS3I,CACtD,CApBR,IAA0B8I,CAqBtB,CACAsgD,0BAAAA,CAA2B1rB,EAAQ37B,GAA0B,IAAxB,mBAAE+1B,GAAoB/1B,EACvD,OAAO8W,GAAmB6kB,EAAU5F,EACxC,CACAqxB,KAAAA,CAAM3H,EAAaxwB,EAAc7wB,GAC7BijD,GAAgB5B,EAAaxwB,EAAc7wB,EAAMkiC,kBACrD,CACAwf,2BAAAA,CAA4B1hD,EAAOm2B,EAAW12B,GAC1C,OAAOiiD,GAA4B1hD,EAAOm2B,EAAW12B,EACzD,CACAgqD,sBAAAA,GACQx6C,KAAKs7C,oBACLt7C,KAAKs7C,2BACEt7C,KAAKs7C,mBAEhB,MAAM,SAAEtgB,GAAah7B,KAAKjP,MACtB+vB,GAAcka,KACdh7B,KAAKs7C,kBAAoBtgB,EAAS3b,GAAG,UAAW9N,IACxCvR,KAAK9O,UACL8O,KAAK9O,QAAQqqD,YAAc,GAAGhqC,IAAQ,IAGtD,EC1CJ,MAAMiqC,WAAyBP,GAC3Bv7C,WAAAA,GACIkJ,SAASxZ,WACT4Q,KAAK9N,KAAO,MACZ8N,KAAK20C,UAAW,EAChB30C,KAAKg6C,2BAA6BhtB,EACtC,CACA6tB,sBAAAA,CAAuB9pD,EAAOxB,GAC1B,OAAOwB,EAAMxB,EACjB,CACAurD,qBAAAA,CAAsBxsB,EAAU/+B,GAC5B,GAAIoC,EAAenC,IAAID,GAAM,CACzB,MAAM6rD,EAAc5yC,GAAoBjZ,GACxC,OAAO6rD,GAAcA,EAAYrgD,SAAe,CACpD,CAEA,OADAxL,EAAO2iD,GAAoB1iD,IAAID,GAA0BA,EAAnBkxB,GAAYlxB,GAC3C++B,EAASmtB,aAAalsD,EACjC,CACAkjD,2BAAAA,CAA4B1hD,EAAOm2B,EAAW12B,GAC1C,OAAOiiD,GAA4B1hD,EAAOm2B,EAAW12B,EACzD,CACAupD,KAAAA,CAAM3H,EAAaxwB,EAAc7wB,GAC7B2jD,GAActC,EAAaxwB,EAAc5hB,KAAK20C,SAAU5jD,EAAMkiC,kBAClE,CACAslB,cAAAA,CAAejqB,EAAU8jB,EAAajM,EAAWpW,GAC7CoiB,GAAU7jB,EAAU8jB,EAAajM,EAAWpW,EAChD,CACA/I,KAAAA,CAAMsH,GACFtuB,KAAK20C,SAAWA,GAASrmB,EAAS2Q,SAClCr2B,MAAMoe,MAAMsH,EAChB,ECpCJ,MCFMotB,GAAuB3sD,ECIeyoD,GAA6B,IAClEr7B,MACA6uB,MACA7f,MACAgB,KFNwBwvB,CAACxmB,EAAWnqB,IAChC8mC,GAAe3c,GAChB,IAAIqmB,GAAiBxwC,GACrB,IAAImwC,GAAkBnwC,EAAS,CAC7B2kC,gBAAiBxa,IAAcmiB,GAAAA,a","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.12.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.12.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.12.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","invariant","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","createContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","PresenceContext","useId","useEffect","useCallback","usePresence","LayoutGroupContext","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isStatic","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","createDomVisualElement"],"sourceRoot":""}